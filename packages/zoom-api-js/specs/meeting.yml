openapi: 3.0.0
info:
  title: Zoom Meeting API
  description: >-
    The Zoom Meeting APIs let developers to access information from Zoom. You
    can use this API to build private services or public applications on the
    [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your
    credentials and create private/public applications, read our
    [documentation](https://developers.zoom.us/docs/).


    All endpoints are available via `https` and are located at
    `api.zoom.us/v2/`.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    oauth2Auth:
      type: http
      scheme: oauth2
security:
  - oauth2Auth: []
tags:
  - name: archive_files
  - name: archive_files > statistics
  - name: archive_files > {fileId}
  - name: past_meetings
  - name: past_meetings > {meetingUUID}
  - name: past_meetings > {meetingUUID} > archive_files
  - name: past_meetings > {meetingId}
  - name: past_meetings > {meetingId} > instances
  - name: past_meetings > {meetingId} > participants
  - name: past_meetings > {meetingId} > polls
  - name: past_meetings > {meetingId} > qa
  - name: devices
  - name: devices > groups
  - name: devices > zpa
  - name: devices > zpa > assignment
  - name: devices > zpa > upgrade
  - name: devices > zpa > vendors
  - name: devices > zpa > vendors > {vendor}
  - name: devices > zpa > vendors > {vendor} > mac_addresses
  - name: devices > zpa > vendors > {vendor} > mac_addresses > {macAddress}
  - name: devices > zpa > zdm_groups
  - name: devices > zpa > zdm_groups > {zdmGroupId}
  - name: devices > zpa > zdm_groups > {zdmGroupId} > versions
  - name: devices > {deviceId}
  - name: devices > {deviceId} > assignment
  - name: users
  - name: users > {userId}
  - name: users > {userId} > recordings
  - name: users > {userId} > meeting_templates
  - name: users > {userId} > meetings
  - name: users > {userId} > upcoming_meetings
  - name: users > {userId} > pac
  - name: users > {userId} > tsp
  - name: users > {userId} > tsp > settings
  - name: users > {userId} > tsp > {tspId}
  - name: users > {userId} > webinar_templates
  - name: users > {userId} > webinars
  - name: meetings
  - name: meetings > {meetingId}
  - name: meetings > {meetingId} > recordings
  - name: meetings > {meetingId} > recordings > analytics_details
  - name: meetings > {meetingId} > recordings > analytics_summary
  - name: meetings > {meetingId} > recordings > registrants
  - name: meetings > {meetingId} > recordings > registrants > questions
  - name: meetings > {meetingId} > recordings > registrants > status
  - name: meetings > {meetingId} > recordings > settings
  - name: meetings > {meetingId} > recordings > {recordingId}
  - name: meetings > {meetingId} > recordings > {recordingId} > status
  - name: meetings > {meetingId} > batch_polls
  - name: meetings > {meetingId} > batch_registrants
  - name: meetings > {meetingId} > invitation
  - name: meetings > {meetingId} > invite_links
  - name: meetings > {meetingId} > jointoken
  - name: meetings > {meetingId} > jointoken > live_streaming
  - name: meetings > {meetingId} > jointoken > local_archiving
  - name: meetings > {meetingId} > jointoken > local_recording
  - name: meetings > {meetingId} > livestream
  - name: meetings > {meetingId} > livestream > status
  - name: meetings > {meetingId} > meeting_summary
  - name: meetings > {meetingId} > polls
  - name: meetings > {meetingId} > polls > {pollId}
  - name: meetings > {meetingId} > registrants
  - name: meetings > {meetingId} > registrants > questions
  - name: meetings > {meetingId} > registrants > status
  - name: meetings > {meetingId} > registrants > {registrantId}
  - name: meetings > {meetingId} > sip_dialing
  - name: meetings > {meetingId} > status
  - name: meetings > {meetingId} > survey
  - name: meetings > {meetingId} > token
  - name: meetings > {meetingUUID}
  - name: meetings > {meetingUUID} > recordings
  - name: meetings > {meetingUUID} > recordings > status
  - name: meetings > meeting_summaries
  - name: live_meetings
  - name: live_meetings > {meetingId}
  - name: live_meetings > {meetingId} > chat
  - name: live_meetings > {meetingId} > chat > messages
  - name: live_meetings > {meetingId} > chat > messages > {messageId}
  - name: live_meetings > {meetingId} > events
  - name: report
  - name: report > activities
  - name: report > billing
  - name: report > billing > invoices
  - name: report > cloud_recording
  - name: report > daily
  - name: report > meetings
  - name: report > meetings > {meetingId}
  - name: report > meetings > {meetingId} > participants
  - name: report > meetings > {meetingId} > polls
  - name: report > meetings > {meetingId} > qa
  - name: report > meetings > {meetingId} > survey
  - name: report > operationlogs
  - name: report > telephone
  - name: report > upcoming_events
  - name: report > users
  - name: report > users > {userId}
  - name: report > users > {userId} > meetings
  - name: report > webinars
  - name: report > webinars > {webinarId}
  - name: report > webinars > {webinarId} > participants
  - name: report > webinars > {webinarId} > polls
  - name: report > webinars > {webinarId} > qa
  - name: report > webinars > {webinarId} > survey
  - name: sip_phones
  - name: sip_phones > {phoneId}
  - name: tsp
  - name: tracking_fields
  - name: tracking_fields > {fieldId}
  - name: live_webinars
  - name: live_webinars > {webinarId}
  - name: live_webinars > {webinarId} > chat
  - name: live_webinars > {webinarId} > chat > messages
  - name: live_webinars > {webinarId} > chat > messages > {messageId}
  - name: past_webinars
  - name: past_webinars > {webinarId}
  - name: past_webinars > {webinarId} > absentees
  - name: past_webinars > {webinarId} > instances
  - name: past_webinars > {webinarId} > participants
  - name: past_webinars > {webinarId} > polls
  - name: past_webinars > {webinarId} > qa
  - name: webinars
  - name: webinars > {webinarId}
  - name: webinars > {webinarId} > batch_registrants
  - name: webinars > {webinarId} > branding
  - name: webinars > {webinarId} > branding > name_tags
  - name: webinars > {webinarId} > branding > name_tags > {nameTagId}
  - name: webinars > {webinarId} > branding > virtual_backgrounds
  - name: webinars > {webinarId} > branding > wallpaper
  - name: webinars > {webinarId} > invite_links
  - name: webinars > {webinarId} > jointoken
  - name: webinars > {webinarId} > jointoken > live_streaming
  - name: webinars > {webinarId} > jointoken > local_archiving
  - name: webinars > {webinarId} > jointoken > local_recording
  - name: webinars > {webinarId} > livestream
  - name: webinars > {webinarId} > livestream > status
  - name: webinars > {webinarId} > panelists
  - name: webinars > {webinarId} > panelists > {panelistId}
  - name: webinars > {webinarId} > polls
  - name: webinars > {webinarId} > polls > {pollId}
  - name: webinars > {webinarId} > registrants
  - name: webinars > {webinarId} > registrants > questions
  - name: webinars > {webinarId} > registrants > status
  - name: webinars > {webinarId} > registrants > {registrantId}
  - name: webinars > {webinarId} > sip_dialing
  - name: webinars > {webinarId} > status
  - name: webinars > {webinarId} > survey
  - name: webinars > {webinarId} > token
  - name: webinars > {webinarId} > tracking_sources
  - name: h323
  - name: h323 > devices
  - name: h323 > devices > {deviceId}
paths:
  /archive_files/statistics:
    get:
      tags:
        - archive_files > statistics
      summary: Get archived file statistics
      description: >-
        Get statistics about an account's archived meeting or webinar files. 

         Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA and other compliance requirements. 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `to` query parameter value cannot exceed seven days.
          example: <dateTime>
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `from` query parameter value cannot exceed seven days.
          example: <dateTime>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <dateTime>
                to: <dateTime>
                total_records: <integer>
                statistic_by_file_extension:
                  mp4_file_count: <integer>
                  m4a_file_count: <integer>
                  txt_file_count: <integer>
                  json_file_count: <integer>
                  vtt_file_count: <integer>
                statistic_by_file_status:
                  processing_file_count: <integer>
                  completed_file_count: <integer>
                  failed_file_count: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /archive_files/{fileId}:
    patch:
      tags:
        - archive_files > {fileId}
      summary: Update an archived file's auto-delete status
      description: >-
        Update an archived file's auto-delete status. 

         **Prerequisites:** 
        * [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003)
        must enable the [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        for your account.

        * Open the disabling auto-delete feature in OP. Contact [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003) to open.


        **Scopes:** `recording:write`,`recording:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                auto_delete: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: fileId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /archive_files:
    get:
      tags:
        - archive_files
      summary: List archived files
      description: >-
        Get an account's archived meeting or webinar files. 

         Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA or other compliance requirements. 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `to` query parameter value cannot exceed seven days.
          example: <dateTime>
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
            and the `from` query parameter value cannot exceed seven days.
          example: <dateTime>
        - name: query_date_type
          in: query
          schema:
            type: string
          description: |-
            The type of query date.
            * `meeting_start_time` 
            * `archive_complete_time` 

             This value defaults to `meeting_start_time`.
          example: meeting_start_time
        - name: group_id
          in: query
          schema:
            type: string
          description: >-
            The group ID. To get a group ID, use the [List
            groups](https://developers.zoom.us/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List)
            API.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <dateTime>
                meetings:
                  - account_name: <string>
                    archive_files:
                      - download_url: <string>
                        encryption_fingerprint: <string>
                        file_extension: <string>
                        file_size: <integer>
                        file_type: CC
                        id: <string>
                        individual: <boolean>
                        participant_join_time: <dateTime>
                        participant_leave_time: <dateTime>
                        recording_type: chat_message
                        status: failed
                        file_path: <string>
                        participant_email: <email>
                        number_of_messages: <integer>
                        storage_location: CA
                        auto_delete: <boolean>
                      - download_url: <string>
                        encryption_fingerprint: <string>
                        file_extension: <string>
                        file_size: <integer>
                        file_type: CHAT
                        id: <string>
                        individual: <boolean>
                        participant_join_time: <dateTime>
                        participant_leave_time: <dateTime>
                        recording_type: audio_only
                        status: completed
                        file_path: <string>
                        participant_email: <email>
                        number_of_messages: <integer>
                        storage_location: AU
                        auto_delete: <boolean>
                    complete_time: {}
                    duration: <integer>
                    duration_in_second: <integer>
                    host_id: <string>
                    id: <long>
                    is_breakout_room: <boolean>
                    meeting_type: external
                    recording_count: <integer>
                    start_time: <dateTime>
                    status: processing
                    timezone: <string>
                    topic: <string>
                    total_size: <integer>
                    type: 6
                    uuid: <string>
                    parent_meeting_id: <string>
                    group_id: <string>
                  - account_name: <string>
                    archive_files:
                      - download_url: <string>
                        encryption_fingerprint: <string>
                        file_extension: <string>
                        file_size: <integer>
                        file_type: CC
                        id: <string>
                        individual: <boolean>
                        participant_join_time: <dateTime>
                        participant_leave_time: <dateTime>
                        recording_type: chat_message
                        status: completed
                        file_path: <string>
                        participant_email: <email>
                        number_of_messages: <integer>
                        storage_location: BR
                        auto_delete: <boolean>
                      - download_url: <string>
                        encryption_fingerprint: <string>
                        file_extension: <string>
                        file_size: <integer>
                        file_type: CC
                        id: <string>
                        individual: <boolean>
                        participant_join_time: <dateTime>
                        participant_leave_time: <dateTime>
                        recording_type: audio_only
                        status: completed
                        file_path: <string>
                        participant_email: <email>
                        number_of_messages: <integer>
                        storage_location: IN
                        auto_delete: <boolean>
                    complete_time: {}
                    duration: <integer>
                    duration_in_second: <integer>
                    host_id: <string>
                    id: <long>
                    is_breakout_room: <boolean>
                    meeting_type: internal
                    recording_count: <integer>
                    start_time: <dateTime>
                    status: processing
                    timezone: <string>
                    topic: <string>
                    total_size: <integer>
                    type: 8
                    uuid: <string>
                    parent_meeting_id: <string>
                    group_id: <string>
                next_page_token: <string>
                page_size: <integer>
                to: <dateTime>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingUUID}/archive_files:
    get:
      tags:
        - past_meetings > {meetingUUID} > archive_files
      summary: Get a meeting's archived files
      description: >-
        Return a specific meeting instance's [archived
        files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators). 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's universally unique identifier (UUID). Each
            meeting instance generates a UUID. After a meeting ends, a new UUID
            is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID when using the meeting UUID for other API calls.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                account_name: <string>
                archive_files:
                  - download_url: <string>
                    encryption_fingerprint: <string>
                    file_extension: <string>
                    file_size: <integer>
                    file_type: M4A
                    id: <string>
                    individual: <boolean>
                    participant_join_time: <dateTime>
                    participant_leave_time: <dateTime>
                    recording_type: audio_only
                    status: processing
                    file_path: <string>
                    participant_email: <email>
                    number_of_messages: <integer>
                    storage_location: BR
                    auto_delete: <boolean>
                  - download_url: <string>
                    encryption_fingerprint: <string>
                    file_extension: <string>
                    file_size: <integer>
                    file_type: M4A
                    id: <string>
                    individual: <boolean>
                    participant_join_time: <dateTime>
                    participant_leave_time: <dateTime>
                    recording_type: chat_message
                    status: failed
                    file_path: <string>
                    participant_email: <email>
                    number_of_messages: <integer>
                    storage_location: BR
                    auto_delete: <boolean>
                complete_time: {}
                duration: <integer>
                duration_in_second: <integer>
                host_id: <string>
                id: <long>
                is_breakout_room: <boolean>
                meeting_type: external
                recording_count: <integer>
                start_time: <dateTime>
                status: completed
                timezone: <string>
                topic: <string>
                total_size: <integer>
                type: 4
                uuid: <string>
                parent_meeting_id: <string>
                group_id: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - past_meetings > {meetingUUID} > archive_files
      summary: Delete a meeting's archived files
      description: >-
        Use this API to delete all of a meeting's archived files. 

         **Prerequisites:** 
        * The [**Meeting and Webinar Archiving**
        feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
        enabled for your account by [Zoom
        Support](https://support.zoom.us/hc/en-us/articles/201362003).


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's universally unique identifier (UUID). Each
            meeting instance generates a UUID. For example, after a meeting
            ends, a new UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID when using the meeting UUID for other API calls.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}/instances:
    get:
      tags:
        - past_meetings > {meetingId} > instances
      summary: List past meeting instances
      description: >-
        Return a list of past meeting instances. 

         

        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The past meeting's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meetings:
                  - start_time: <dateTime>
                    uuid: <string>
                  - start_time: <dateTime>
                    uuid: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}/participants:
    get:
      tags:
        - past_meetings > {meetingId} > participants
      summary: Get past meeting participants
      description: >-
        Retrieve information on participants from a past meeting. Note the API
        doesn't return results if there's only one participant in a meeting.  
           
         
        **Prerequisites:**  
         
        * Paid account on a Pro or higher plan.

          
            
           **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_size: 30
                total_records: <integer>
                participants:
                  - id: <string>
                    name: <string>
                    user_id: <string>
                    registrant_id: <string>
                    user_email: <string>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    duration: <integer>
                    failover: <boolean>
                    status: in_meeting
                  - id: <string>
                    name: <string>
                    user_id: <string>
                    registrant_id: <string>
                    user_email: <string>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    duration: <integer>
                    failover: <boolean>
                    status: in_meeting
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}/polls:
    get:
      tags:
        - past_meetings > {meetingId} > polls
      summary: List past meeting's poll results
      description: >-
        [Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        allow the meeting host to survey attendees. List poll results of a
        meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro**.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                start_time: <dateTime>
                uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}/qa:
    get:
      tags:
        - past_meetings > {meetingId} > qa
      summary: List past meetings' Q&A
      description: >-
        The question &amp; answer (Q&amp;A) feature for Zoom Meetings lets
        attendees ask questions during a meeting and lets the other attendees
        answer those questions.  
         
        List Q&amp;A of a specific meeting.


        **Prerequisites:**  
         
        * 


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                      - answer: <string>
                        question: <string>
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                      - answer: <string>
                        question: <string>
                start_time: <dateTime>
                uuid: <string>
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_meetings/{meetingId}:
    get:
      tags:
        - past_meetings > {meetingId}
      summary: Get past meeting details
      description: >-
        Get information about a past meeting. 

         

        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                uuid: <string>
                duration: <integer>
                start_time: <dateTime>
                end_time: <dateTime>
                host_id: <string>
                dept: <string>
                participants_count: <integer>
                source: <string>
                topic: <string>
                total_minutes: <integer>
                type: 7
                user_email: <email>
                user_name: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/groups:
    get:
      tags:
        - devices > groups
      summary: Get zdm group info
      description: >-
        Get Zoom Device Manager (ZDM) group information for an account.


        **Scopes:** `device:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: string
          description: |-
            The total number of records returned from a single API call.
            Default - 30.
            Max -100.
          example: <integer>
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period token
            is 15 minutes.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - zdm_group_id: <string>
                    name: <string>
                    description: <string>
                  - zdm_group_id: <string>
                    name: <string>
                    description: <string>
                next_page_token: <string>
                page_size: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/zpa/assignment:
    post:
      tags:
        - devices > zpa > assignment
      summary: Assign a device to a user or commonarea
      description: >-
        Assign a device to a user or common area, or move a device to another
        user or common area, or remove a device.


        **Prerequisites:**

        * Device must be enrolled in Zoom Device Management (ZDM).


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                mac_address: <string>
                vendor: <string>
                extension_number: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/zpa/upgrade:
    post:
      tags:
        - devices > zpa > upgrade
      summary: upgrade zpa os/app
      description: >-
        Upgrade ZPA firmware or app by Zoom Device Manager (ZDM) group ID.


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  upgrade_type: UPGRADE_FIRMWARE
                  firmware_versions:
                    - vendor: <string>
                      version: <string>
                      model: <string>
                    - vendor: <string>
                      version: <string>
                      model: <string>
                zdm_group_id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/zpa/vendors/{vendor}/mac_addresses/{macAddress}:
    delete:
      tags:
        - devices > zpa > vendors > {vendor} > mac_addresses > {macAddress}
      summary: Delete ZPA device by vendor and mac address
      description: >-
        Remove a ZPA device from the device manager, by vendor and mac address.


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: vendor
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device's manufacturer.
          example: <string>
        - name: macAddress
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device's mac address.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/zpa/zdm_groups/{zdmGroupId}/versions:
    get:
      tags:
        - devices > zpa > zdm_groups > {zdmGroupId} > versions
      summary: Get ZPA version info
      description: >-
        Get ZPA firmware and app version information that can be upgraded for
        devices.


        **Scopes:** `device:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: zdmGroupId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Zoom Device Management (ZDM) group ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                firmware_versions:
                  - vendor: <string>
                    model: <string>
                    version: <string>
                    warn_info: <string>
                  - vendor: <string>
                    model: <string>
                    version: <string>
                    warn_info: <string>
                app_versions:
                  - <string>
                  - <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/{deviceId}/assignment:
    patch:
      tags:
        - devices > {deviceId} > assignment
      summary: Change device association
      description: >-
        This Device API lets you change device association from one Zoom Room to
        another. 


        **Prerequisites:**

        * Device must be enrolled in ZMD (Zoom Device Management) 




        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                room_id: <string>
                app_type: ZR
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the device.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices/{deviceId}:
    get:
      tags:
        - devices > {deviceId}
      summary: Get device detail
      description: >-
        Retrieve a device's details.


        **Scopes:** `device:read:admin`,`device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device's unique identifier.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                device_id: <string>
                device_name: <string>
                mac_address: <string>
                serial_number: <string>
                vendor: <string>
                model: <string>
                platform_os: <string>
                app_version: <string>
                tag: <string>
                enrolled_in_zdm: <boolean>
                connected_to_zdm: <boolean>
                room_id: <string>
                room_name: <string>
                device_type: 2
                sdk_version: <string>
                device_status: 1
                last_online: <string>
                user_email: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - devices > {deviceId}
      summary: Delete device
      description: >-
        Delete a device from a Zoom account. 


        **Prerequisites:**

        * Device must be enrolled in ZMD (Zoom Device Management)


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the device.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - devices > {deviceId}
      summary: 'Change device '
      description: >-
        Change device name. 


        **Prerequisites:**

        * Device must be enrolled in ZMD (Zoom Device Management)


        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                device_name: <string>
                tag: <string>
                room_id: <string>
                device_type: 1
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the device.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /devices:
    get:
      tags:
        - devices
      summary: List devices
      description: >-
        This API lets you list devices. 




        **Scopes:** `device:read:admin`,`device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: search_text
          in: query
          schema:
            type: string
          description: Filter devices by name or serial number.
          example: <string>
        - name: platform_os
          in: query
          schema:
            type: string
          description: Filter devices by platform operating system.
          example: iphone
        - name: is_enrolled_in_zdm
          in: query
          schema:
            type: boolean
          description: Filter devices by enrollment of ZDM (Zoom Device Management).
          example: 'true'
        - name: device_type
          in: query
          schema:
            type: number
          description: |-
            Filter devices by device type.  
              Device Type:  
             `-1` - All Zoom Room device(0,1,2,3,4,6).  
             `0` - Zoom Rooms Computer.  
             `1` - Zoom Rooms Controller.  
             `2` - Zoom Rooms Scheduling Display.  
             `3` - Zoom Rooms Control System.  
             `4` -  Zoom Rooms Whiteboard.  
             `5` - Zoom Phone Appliance.  
             `6` - Zoom Rooms Computer (with Controller).
          example: '-1'
        - name: device_vendor
          in: query
          schema:
            type: string
          description: Filter devices by vendor.
          example: <string>
        - name: device_model
          in: query
          schema:
            type: string
          description: Filter devices by model.
          example: <string>
        - name: device_status
          in: query
          schema:
            type: number
          description: |-
            Filter devices by status.   
              Device Status:  
             `0` - offline.  
             `1` - online.  
             `-1` - unlink
          example: '-1'
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_size: <integer>
                devices:
                  - device_id: <string>
                    device_name: <string>
                    mac_address: <string>
                    serial_number: <string>
                    vendor: <string>
                    model: <string>
                    platform_os: <string>
                    app_version: <string>
                    tag: <string>
                    enrolled_in_zdm: <boolean>
                    connected_to_zdm: <boolean>
                    room_id: <string>
                    room_name: <string>
                    device_type: 2
                    skd_version: <string>
                    device_status: 1
                    last_online: <string>
                    user_email: <string>
                  - device_id: <string>
                    device_name: <string>
                    mac_address: <string>
                    serial_number: <string>
                    vendor: <string>
                    model: <string>
                    platform_os: <string>
                    app_version: <string>
                    tag: <string>
                    enrolled_in_zdm: <boolean>
                    connected_to_zdm: <boolean>
                    room_id: <string>
                    room_name: <string>
                    device_type: 1
                    skd_version: <string>
                    device_status: 0
                    last_online: <string>
                    user_email: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - devices
      summary: Add a new device
      description: >-
        Add a new device to Zoom account. 


        **Scope:** `device:write:admin`   
         
         **[Rate Limit Label](https://developers.zoom.us/docs/api/rest/rate-limits/):** `Medium`

        **Scopes:** `device:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                device_name: <string>
                device_type: 5
                mac_address: <string>
                model: <string>
                serial_number: <string>
                vendor: <string>
                room_id: <string>
                user_email: <string>
                tag: <string>
                zdm_group_id: <string>
                extension_number: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/recordings:
    get:
      tags:
        - users > {userId} > recordings
      summary: List all recordings
      description: >-
        Lists all [cloud
        recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        for a user.  


        For user-level apps, pass the [`me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.  To access a user's passcode
        protected cloud recording, send the user's [OAuth access
        token](https://developers.zoom.us/docs/integrations/oauth/) as a bearer
        token in the authorization header.  


        Example:  `curl -H "Authorization: Bearer <ACCESS_TOKEN>"
        https://{{base-domain}}/rec/archive/download/xyz`  


        **Prerequisites:**  

        * Must have a Pro or a higher plan.  

        * Must enable Cloud Recording on the user's account.


        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token paginates through a large set of results. A next
            page token returns whenever the set of available results exceeds the
            current page size. The expiration period for this token is 15
            minutes.
          example: <string>
        - name: mc
          in: query
          schema:
            type: boolean
          description: >-
            The query metadata of the recording if using an on-premise meeting
            connector for the meeting.
          example: 'false'
        - name: trash
          in: query
          schema:
            type: boolean
          description: >-
            The query trash.

            * `true` - List recordings from trash.  

            * `false` - Do not list recordings from the trash.  


            The default value is `false`. If you set it to `true`, you can use
            the `trash_type` property to indicate the type of Cloud recording
            that you need to retrieve. 
          example: 'false'
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The start date in 'yyyy-mm-dd' UTC format for the date range where
            you would like to retrieve recordings. The maximum range can be a
            month. If no value is provided for this field, the default will be
            current date. 


            For example, if you make the API request on June 30, 2020, without
            providing the `from` and `to` parameters, by default the value of
            'from' field will be `2020-06-30` and the value of the 'to' field
            will be `2020-07-01`. 


            **Note**: The `trash` files cannot be filtered by date range and
            thus, the `from` and `to` fields should not be used for trash files.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: 'The end date in ''yyyy-mm-dd'' ''yyyy-mm-dd'' UTC format. '
          example: <date>
        - name: trash_type
          in: query
          schema:
            type: string
          description: |-
            The type of cloud recording to retrieve from the trash. 
             
             *   `meeting_recordings`: List all meeting recordings from the trash.  
             *  `recording_file`: List all individual recording files from the trash. 
          example: meeting_recordings
        - name: meeting_id
          in: query
          schema:
            type: string
          description: The meeting ID.
          example: <integer>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's ID or email address. For user-level apps, pass
            the `me` value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <date>
                to: <date>
                next_page_token: <string>
                page_count: <integer>
                page_size: 30
                total_records: <integer>
                meetings:
                  - account_id: <string>
                    duration: <integer>
                    host_id: <string>
                    id: <integer>
                    recording_count: <integer>
                    start_time: <dateTime>
                    topic: <string>
                    total_size: <long>
                    type: '8'
                    uuid: <string>
                    recording_play_passcode: <string>
                    recording_files:
                      - deleted_time: <string>
                        download_url: <string>
                        file_path: <string>
                        file_size: <number>
                        file_type: MP4
                        file_extension: M4A
                        id: <string>
                        meeting_id: <string>
                        play_url: <string>
                        recording_end: <string>
                        recording_start: <string>
                        recording_type: thumbnail
                        status: completed
                      - deleted_time: <string>
                        download_url: <string>
                        file_path: <string>
                        file_size: <number>
                        file_type: CHAT_MESSAGE
                        file_extension: MP4
                        id: <string>
                        meeting_id: <string>
                        play_url: <string>
                        recording_end: <string>
                        recording_start: <string>
                        recording_type: poll
                        status: completed
                  - account_id: <string>
                    duration: <integer>
                    host_id: <string>
                    id: <integer>
                    recording_count: <integer>
                    start_time: <dateTime>
                    topic: <string>
                    total_size: <long>
                    type: '99'
                    uuid: <string>
                    recording_play_passcode: <string>
                    recording_files:
                      - deleted_time: <string>
                        download_url: <string>
                        file_path: <string>
                        file_size: <number>
                        file_type: TB
                        file_extension: VTT
                        id: <string>
                        meeting_id: <string>
                        play_url: <string>
                        recording_end: <string>
                        recording_start: <string>
                        recording_type: shared_screen_with_speaker_view(CC)
                        status: completed
                      - deleted_time: <string>
                        download_url: <string>
                        file_path: <string>
                        file_size: <number>
                        file_type: TRANSCRIPT
                        file_extension: VTT
                        id: <string>
                        meeting_id: <string>
                        play_url: <string>
                        recording_end: <string>
                        recording_start: <string>
                        recording_type: sign_interpretation
                        status: completed
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/meeting_templates:
    get:
      tags:
        - users > {userId} > meeting_templates
      summary: List meeting templates
      description: >-
        List available [meeting
        templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates)
        for a user. For user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.




        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID retrievable from the [List
            users](/api-reference/zoom-api/methods#operation/users) API.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                templates:
                  - id: <string>
                    name: <string>
                    type: <integer>
                  - id: <string>
                    name: <string>
                    type: <integer>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {userId} > meeting_templates
      summary: Create a meeting template from an existing meeting
      description: >-
        Create a meeting template from an existing meeting. 




        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                meeting_id: <long>
                name: <string>
                save_recurrence: false
                overwrite: false
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID retrievable from the [List
            users](/api-reference/zoom-api/methods#operation/users) API.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/meetings:
    get:
      tags:
        - users > {userId} > meetings
      summary: List meetings
      description: >-
        List a meeting host user's scheduled meetings. For user-level apps, pass
        [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 


        **Note** 

        * This API **only** supports scheduled meetings. This API does not
        return information about instant meetings. 

        * This API only returns a user's [unexpired
        meetings](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). 

         

        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The type of meeting. 

            * `scheduled` - All valid previous (unexpired) meetings, live
            meetings, and upcoming scheduled meetings. 

            * `live` - All the ongoing meetings. 

            * `upcoming` - All upcoming meetings, including live meetings. 

            * `upcoming_meetings` - All upcoming meetings, including live
            meetings. 

            * `previous_meetings` - All the previous meetings.
          example: scheduled
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: page_number
          in: query
          schema:
            type: string
          description: The page number of the current page in the returned records.
          example: <integer>
        - name: from
          in: query
          schema:
            type: string
          description: The start date.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: The end date.
          example: <date>
        - name: timezone
          in: query
          schema:
            type: string
          description: >-
            The timezone to assign to the `from` and `to` value. For a list of
            supported timezones and their formats, see our [timezone
            list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
          example: <string>
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's user ID or email address. For user-level apps,
            pass the `me` value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                meetings:
                  - agenda: <string>
                    created_at: <dateTime>
                    duration: <integer>
                    host_id: <string>
                    id: <long>
                    join_url: <string>
                    pmi: <string>
                    start_time: <dateTime>
                    timezone: <string>
                    topic: <string>
                    type: 8
                    uuid: <string>
                  - agenda: <string>
                    created_at: <dateTime>
                    duration: <integer>
                    host_id: <string>
                    id: <long>
                    join_url: <string>
                    pmi: <string>
                    start_time: <dateTime>
                    timezone: <string>
                    topic: <string>
                    type: 8
                    uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {userId} > meetings
      summary: Create a meeting
      description: >-
        [Create a
        meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings)
        for a user. For user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.


        * A meeting's `start_url` value is the URL a host or an alternative host
        can use to start a meeting. The expiration time for the `start_url`
        value is **two hours** for all regular users.

        * For `custCreate` meeting hosts (users created with the `custCreate`
        parameter via the [**Create
        users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/userCreate)
        API), the expiration time of the `start_url` parameter is **90 days**
        from the generation of the `start_url`.


        **Note:** 


        For security reasons, the recommended way to programmatically get the
        updated `start_url` value after expiry is to call the [**Get a
        meeting**](/api-reference/zoom-api/methods#operation/meeting) API. Refer
        to the `start_url` value in the response. 

         **100 requests per day**. The rate limit is applied against the `userId` of the **meeting host** used to make the request.

        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                agenda: <string>
                default_password: false
                duration: <integer>
                password: <string>
                pre_schedule: false
                recurrence:
                  type: 2
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: 1
                  monthly_week: 1
                  monthly_week_day: 6
                  repeat_interval: <integer>
                  weekly_days: '1'
                schedule_for: <string>
                settings:
                  additional_data_center_regions:
                    - <string>
                    - <string>
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_hosts_email_notification: true
                  approval_type: 2
                  approved_or_denied_countries_or_regions:
                    approved_list:
                      - <string>
                      - <string>
                    denied_list:
                      - <string>
                      - <string>
                    enable: <boolean>
                    method: deny
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_exception:
                    - email: <email>
                      name: <string>
                    - email: <email>
                      name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  breakout_room:
                    enable: <boolean>
                    rooms:
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                  calendar_type: 2
                  close_registration: false
                  cn_meeting: false
                  contact_email: <string>
                  contact_name: <string>
                  email_notification: true
                  encryption_type: enhanced_encryption
                  focus_mode: <boolean>
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  host_video: <boolean>
                  in_meeting: false
                  jbh_time: 10
                  join_before_host: false
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  meeting_authentication: <boolean>
                  meeting_invitees:
                    - email: <email>
                    - email: <email>
                  mute_upon_entry: false
                  participant_video: <boolean>
                  private_meeting: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registration_type: 1
                  show_share_button: <boolean>
                  use_pmi: false
                  waiting_room: <boolean>
                  watermark: false
                  host_save_video_order: <boolean>
                  alternative_host_update_polls: <boolean>
                  internal_meeting: false
                  continuous_meeting_chat:
                    enable: <boolean>
                    auto_add_invited_external_users: <boolean>
                  participant_focused_meeting: false
                  push_change_to_calendar: false
                  resources:
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                  auto_start_meeting_summary: false
                  auto_start_ai_companion_questions: false
                start_time: <dateTime>
                template_id: <string>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: 2
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's user ID or email address. For user-level apps,
            pass the `me` value.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                assistant_id: <string>
                host_email: <email>
                id: <long>
                registration_url: <string>
                agenda: <string>
                created_at: <dateTime>
                duration: <integer>
                h323_password: <string>
                join_url: <string>
                chat_join_url: <string>
                occurrences:
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: deleted
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: available
                password: <string>
                pmi: <string>
                pre_schedule: false
                recurrence:
                  type: 1
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: 1
                  monthly_week: 4
                  monthly_week_day: 4
                  repeat_interval: <integer>
                  weekly_days: '1'
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_hosts_email_notification: true
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  approved_or_denied_countries_or_regions:
                    approved_list:
                      - <string>
                      - <string>
                    denied_list:
                      - <string>
                      - <string>
                    enable: <boolean>
                    method: deny
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_exception:
                    - email: <email>
                      name: <string>
                      join_url: <string>
                    - email: <email>
                      name: <string>
                      join_url: <string>
                  authentication_name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  breakout_room:
                    enable: <boolean>
                    rooms:
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                  calendar_type: 1
                  close_registration: false
                  cn_meeting: false
                  contact_email: <string>
                  contact_name: <string>
                  custom_keys:
                    - key: <string>
                      value: <string>
                    - key: <string>
                      value: <string>
                  email_notification: true
                  encryption_type: enhanced_encryption
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  focus_mode: <boolean>
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  global_dial_in_numbers:
                    - city: <string>
                      country: <string>
                      country_name: <string>
                      number: <string>
                      type: tollfree
                    - city: <string>
                      country: <string>
                      country_name: <string>
                      number: <string>
                      type: toll
                  host_video: <boolean>
                  in_meeting: false
                  jbh_time: 0
                  join_before_host: false
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  meeting_authentication: <boolean>
                  mute_upon_entry: false
                  participant_video: <boolean>
                  private_meeting: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registration_type: 1
                  show_share_button: <boolean>
                  use_pmi: false
                  waiting_room: false
                  watermark: false
                  host_save_video_order: <boolean>
                  internal_meeting: false
                  continuous_meeting_chat:
                    enable: <boolean>
                    auto_add_invited_external_users: <boolean>
                    channel_id: <string>
                  participant_focused_meeting: false
                  push_change_to_calendar: false
                  resources:
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                  auto_start_meeting_summary: false
                  auto_start_ai_companion_questions: false
                start_time: <dateTime>
                start_url: <string>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                    visible: <boolean>
                  - field: <string>
                    value: <string>
                    visible: <boolean>
                type: 2
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/upcoming_meetings:
    get:
      tags:
        - users > {userId} > upcoming_meetings
      summary: List upcoming meetings
      description: >-
        List a Zoom user's upcoming meetings. For user-level apps, pass [the
        `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter.


        **Note**

        * This API includes the meetings that Zoom users schedule and the
        meetings they are invited to join.

        * This API **only** includes upcoming meetings within the next 24 hours.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's user ID or email address. For user-level apps,
            pass [the `me`
            value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword).
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: <integer>
                meetings:
                  - id: <long>
                    topic: <string>
                    type: 2
                    start_time: <dateTime>
                    duration: <integer>
                    timezone: <string>
                    created_at: <dateTime>
                    join_url: <string>
                  - id: <long>
                    topic: <string>
                    type: 1
                    start_time: <dateTime>
                    duration: <integer>
                    timezone: <string>
                    created_at: <dateTime>
                    join_url: <string>
  /users/{userId}/pac:
    get:
      tags:
        - users > {userId} > pac
      summary: List a user's PAC accounts
      description: >-
        Retrieve a list of a user's [personal audio conference
        (PAC)](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
        accounts. For user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 

         PAC allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only. 

         **Prerequisites** 
        * A Pro or higher plan with an [Audio
        Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
        subscription. 

        * The [**Personal Audio
        Conference**](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference#h_01F5BPM447M6QDJXX50RSFXKJ3)
        setting enabled in the user's profile.


        **Scopes:** `pac:read:admin`,`pac:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's user ID or email address. For user-level apps,
            pass the `me` value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                pac_accounts:
                  - conference_id: <long>
                    dedicated_dial_in_number:
                      - country: <string>
                        number: <string>
                      - country: <string>
                        number: <string>
                    global_dial_in_numbers:
                      - country: <string>
                        number: <string>
                      - country: <string>
                        number: <string>
                    listen_only_password: <string>
                    participant_password: <string>
                  - conference_id: <long>
                    dedicated_dial_in_number:
                      - country: <string>
                        number: <string>
                      - country: <string>
                        number: <string>
                    global_dial_in_numbers:
                      - country: <string>
                        number: <string>
                      - country: <string>
                        number: <string>
                    listen_only_password: <string>
                    participant_password: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/tsp/settings:
    patch:
      tags:
        - users > {userId} > tsp > settings
      summary: Set global dial-in URL for a TSP user
      description: >-
        A global dial-in page can provide a list of global access numbers using
        which audio conferencing can be conducted. By calling this API, you can
        set the url for the global dial-in page of a user whose Zoom account has
        TSP and special TSP with third-party audio conferencing options enabled.
        &lt;p&gt;&lt;/p&gt;



        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                audio_url: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The userId or email address of the user.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/tsp/{tspId}:
    get:
      tags:
        - users > {userId} > tsp > {tspId}
      summary: Get a user's TSP account
      description: >-
        Each user can have a maximum of two TSP accounts. Use this API to
        retrieve details of a specific TSP account enabled for a specific
        user.  
           
         


        **Scopes:** `tsp:read:admin`,`tsp:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
        - name: tspId
          in: path
          schema:
            type: integer
          required: true
          description: (Required) TSP account ID.
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                conference_code: <string>
                leader_pin: <string>
                dial_in_numbers:
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: tollfree
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: toll
                id: <string>
                tsp_bridge: EU_TSP_TB
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - users > {userId} > tsp > {tspId}
      summary: Delete a user's TSP account
      description: >-
        Delete a user's TSP account.  
           
         


        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
        - name: tspId
          in: path
          schema:
            type: integer
          required: true
          description: (Required) TSP account ID.
          example: '2'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - users > {userId} > tsp > {tspId}
      summary: Update a TSP account
      description: >-
        Update a user's TSP account.  
           
         


        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                conference_code: <string>
                leader_pin: <string>
                dial_in_numbers:
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: media_link
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: toll
                tsp_bridge: US_TSP_TB
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
        - name: tspId
          in: path
          schema:
            type: integer
          required: true
          description: (Required) TSP account ID.
          example: '2'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/tsp:
    get:
      tags:
        - users > {userId} > tsp
      summary: List user's TSP accounts
      description: >-
        A user can have a maximum of two TSP accounts. Use this API to list all
        TSP accounts of a user.  
           
         


        **Scopes:** `tsp:read:admin`,`tsp:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tsp_accounts:
                  - conference_code: <string>
                    leader_pin: <string>
                    dial_in_numbers:
                      - code: <string>
                        country_label: <string>
                        number: <string>
                        type: toll
                      - code: <string>
                        country_label: <string>
                        number: <string>
                        type: media_link
                    id: '1'
                    tsp_bridge: US_TSP_TB
                  - conference_code: <string>
                    leader_pin: <string>
                    dial_in_numbers:
                      - code: <string>
                        country_label: <string>
                        number: <string>
                        type: toll
                      - code: <string>
                        country_label: <string>
                        number: <string>
                        type: tollfree
                    id: '1'
                    tsp_bridge: US_TSP_TB
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {userId} > tsp
      summary: Add a user's TSP account
      description: >-
        Add a user's TSP account.  
           
         


        **Scopes:** `tsp:write:admin`,`tsp:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                conference_code: <string>
                leader_pin: <string>
                dial_in_numbers:
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: media_link
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: media_link
                tsp_bridge: US_TSP_TB
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                conference_code: <string>
                leader_pin: <string>
                id: <string>
                dial_in_numbers:
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: media_link
                  - code: <string>
                    country_label: <string>
                    number: <string>
                    type: tollfree
                tsp_bridge: US_TSP_TB
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/webinar_templates:
    get:
      tags:
        - users > {userId} > webinar_templates
      summary: List webinar templates
      description: >-
        Display a list of a user's [webinar
        templates](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates).
        For user-level apps, pass [the `me`
        value](/docs/api-reference/using-zoom-apis#mekeyword) instead of the
        `userId` parameter. When you schedule a webinar, save the settings for
        that webinar as a template for scheduling future webinars.  To use a
        template when scheduling a webinar, use the `id` value in this API
        response in the `template_id` field of the [**Create a
        webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate)
        API. **Prerequisites:** * A Pro or a higher account with the [Zoom
        Webinar plan](https://zoom.us/pricing/webinar).


        **Scopes:** `webinar:read:admin`,`webinar:read`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's ID. To get a user's ID, use the [**List
            users**](/docs/api-reference/zoom-api/ma#operation/users) API. For
            user-level apps, pass the `me` value instead of the user ID value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                templates:
                  - id: <string>
                    name: <string>
                    type: <integer>
                  - id: <string>
                    name: <string>
                    type: <integer>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {userId} > webinar_templates
      summary: Create a webinar template
      description: >-
        Use this API to create a webinar template from an existing webinar. 




        **Scopes:** `webinar:write:admin`,`webinar:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                webinar_id: <long>
                name: <string>
                save_recurrence: false
                overwrite: false
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID retrievable from the [List
            users](/api-reference/zoom-api/methods#operation/users) API.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /users/{userId}/webinars:
    get:
      tags:
        - users > {userId} > webinars
      summary: List webinars
      description: >-
        List all the webinars scheduled by or on behalf a webinar host. For
        user-level apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 

         Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars let a host broadcast a Zoom meeting to up to 10,000 attendees. 

        **Note** This API only returns a user's [unexpired
        webinars](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). 

         **Prerequisites** 
        * A Pro or higher plan with the webinar add-on.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The type of webinar. 

            * `scheduled` - All valid previous (unexpired) webinars, live
            webinars, and upcoming scheduled webinars. 

            * `upcoming` - All upcoming webinars, including live webinars.
          example: scheduled
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            **Deprecated** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          example: '1'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user's user ID or email address. For user-level apps,
            pass the `me` value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                webinars:
                  - agenda: <string>
                    created_at: <dateTime>
                    duration: <integer>
                    host_id: <string>
                    id: <long>
                    join_url: <string>
                    start_time: <dateTime>
                    timezone: <string>
                    topic: <string>
                    type: 5
                    uuid: <string>
                    is_simulive: <boolean>
                  - agenda: <string>
                    created_at: <dateTime>
                    duration: <integer>
                    host_id: <string>
                    id: <long>
                    join_url: <string>
                    start_time: <dateTime>
                    timezone: <string>
                    topic: <string>
                    type: 5
                    uuid: <string>
                    is_simulive: <boolean>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - users > {userId} > webinars
      summary: Create a webinar
      description: >-
        Schedule a webinar for a user who is a webinar host. For user-level
        apps, pass [the `me`
        value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
        instead of the `userId` parameter. 

         Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. 

        **Rate limit:**

        Up to a maximum of **100 requests per day**. The rate limit is applied
        to the `userId` of the **webinar host** used to make the request. 


        **Prerequisites:** 

        * A Pro or higher plan with a [Webinar plan](https://zoom.us/webinar)
        add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                agenda: <string>
                duration: <integer>
                password: <string>
                recurrence:
                  type: 2
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: <integer>
                  monthly_week: 1
                  monthly_week_day: 5
                  repeat_interval: <integer>
                  weekly_days: <string>
                schedule_for: <string>
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  attendees_and_panelists_reminder_email_notification:
                    enable: <boolean>
                    type: 5
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_option: <string>
                  auto_recording: none
                  close_registration: <boolean>
                  contact_email: <string>
                  contact_name: <string>
                  email_language: <string>
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  follow_up_absentees_email_notification:
                    enable: <boolean>
                    type: 1
                  follow_up_attendees_email_notification:
                    enable: <boolean>
                    type: 1
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  hd_video: false
                  hd_video_for_attendees: false
                  host_video: <boolean>
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  panelist_authentication: <boolean>
                  meeting_authentication: <boolean>
                  add_watermark: <boolean>
                  add_audio_watermark: <boolean>
                  on_demand: false
                  panelists_invitation_email_notification: <boolean>
                  panelists_video: <boolean>
                  post_webinar_survey: <boolean>
                  practice_session: false
                  question_and_answer:
                    allow_submit_questions: <boolean>
                    allow_anonymous_questions: <boolean>
                    answer_questions: only
                    attendees_can_comment: <boolean>
                    attendees_can_upvote: <boolean>
                    allow_auto_reply: <boolean>
                    auto_reply_text: <string>
                    enable: <boolean>
                  registrants_email_notification: <boolean>
                  registrants_restrict_number: 0
                  registration_type: 1
                  send_1080p_video_to_attendees: false
                  show_share_button: <boolean>
                  survey_url: <string>
                  enable_session_branding: <boolean>
                start_time: <dateTime>
                template_id: <string>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: 5
                is_simulive: <boolean>
                record_file_id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                host_email: <email>
                host_id: <string>
                id: <long>
                registrants_confirmation_email: <boolean>
                template_id: <string>
                uuid: <string>
                agenda: <string>
                created_at: <dateTime>
                duration: <integer>
                join_url: <string>
                occurrences:
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: deleted
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: available
                password: <string>
                encrypted_passcode: <string>
                h323_passcode: <string>
                recurrence:
                  type: 1
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: <integer>
                  monthly_week: 2
                  monthly_week_day: 7
                  repeat_interval: <integer>
                  weekly_days: <string>
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  attendees_and_panelists_reminder_email_notification:
                    enable: <boolean>
                    type: 4
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  close_registration: <boolean>
                  contact_email: <string>
                  contact_name: <string>
                  email_language: <string>
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  follow_up_absentees_email_notification:
                    enable: <boolean>
                    type: 1
                  follow_up_attendees_email_notification:
                    enable: <boolean>
                    type: 3
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  hd_video: false
                  hd_video_for_attendees: false
                  host_video: <boolean>
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  panelist_authentication: <boolean>
                  meeting_authentication: <boolean>
                  add_watermark: <boolean>
                  add_audio_watermark: <boolean>
                  notify_registrants: <boolean>
                  on_demand: false
                  panelists_invitation_email_notification: <boolean>
                  panelists_video: <boolean>
                  post_webinar_survey: <boolean>
                  practice_session: false
                  question_and_answer:
                    allow_submit_questions: <boolean>
                    allow_anonymous_questions: <boolean>
                    answer_questions: all
                    attendees_can_comment: <boolean>
                    attendees_can_upvote: <boolean>
                    allow_auto_reply: <boolean>
                    auto_reply_text: <string>
                    enable: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registrants_restrict_number: 0
                  registration_type: 1
                  send_1080p_video_to_attendees: false
                  show_share_button: <boolean>
                  survey_url: <string>
                  enable_session_branding: <boolean>
                start_time: <dateTime>
                start_url: <string>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: 5
                is_simulive: <boolean>
                record_file_id: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/analytics_details:
    get:
      tags:
        - meetings > {meetingId} > recordings > analytics_details
      summary: Get Meeting Recording's Analytics Details
      description: >-
        Use this API to return a meeting recording's [analytics
        details](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163).
        **Maximum duration: 1 Month**. To access a password-protected cloud
        recording, send the user's [OAuth access
        token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer
        token in the Authorization header. For example, 

         `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` 

         

        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The start date for the monthly range to query. The maximum range can
            be a month. If you do not provide this value, this defaults to the
            current date.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The end date for the monthly range to query. The maximum range can
            be a month.
          example: <date>
        - name: type
          in: query
          schema:
            type: string
          description: |-
            The type of analytics details: 
            * `by_view` &mdash; by_view. 
            * `by_download` &mdash; by_download.
          example: by_download
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <date>
                to: <date>
                next_page_token: <string>
                page_size: <integer>
                total_records: <integer>
                analytics_details:
                  - date_time: <dateTime>
                    name: <string>
                    email: <string>
                    duration: <integer>
                  - date_time: <dateTime>
                    name: <string>
                    email: <string>
                    duration: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/analytics_summary:
    get:
      tags:
        - meetings > {meetingId} > recordings > analytics_summary
      summary: Get Meeting Recording's Analytics Summary
      description: >-
        Use this API to return a meeting recording's [analytics
        summary](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163).
        **Maximum duration: 1 Month**. To access a password-protected cloud
        recording, send the user's [OAuth access
        token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer
        token in the Authorization header. For example, 

         `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` 

         

        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The start date for the monthly range to query. The maximum range can
            be a month. If you do not provide this value, this defaults to the
            current date.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The end date for the monthly range to query. The maximum range can
            be a month.
          example: <date>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <date>
                to: <date>
                analytics_summary:
                  - date: <string>
                    views_total_count: <integer>
                    downloads_total_count: <integer>
                  - date: <string>
                    views_total_count: <integer>
                    downloads_total_count: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/registrants/questions:
    get:
      tags:
        - meetings > {meetingId} > recordings > registrants > questions
      summary: Get registration questions
      description: >-
        For
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        meeting recordings, you can include fields with questions that will be
        shown to registrants when they register to view the recording.


        Use this API to retrieve a list of questions that are displayed for
        users to complete when registering to view the recording of a specific
        meeting.  
         


        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_questions:
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: short
                questions:
                  - field_name: industry
                    required: <boolean>
                  - field_name: industry
                    required: <boolean>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings > {meetingId} > recordings > registrants > questions
      summary: Update registration questions
      description: >-
        For
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        meeting recordings, you can include fields with questions that will be
        shown to registrants when they register to view the recording.


        Use this API to update registration questions that are to be answered by
        users while registering to view a recording.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_questions:
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: short
                questions:
                  - field_name: industry
                    required: <boolean>
                  - field_name: industry
                    required: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/registrants/status:
    put:
      tags:
        - meetings > {meetingId} > recordings > registrants > status
      summary: Update registrant's status
      description: >-
        A registrant can either be approved or denied from viewing the
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
        recording. 

        Use this API to update a registrant's status.




        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: approve
                registrants:
                  - id: <string>
                  - id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/registrants:
    get:
      tags:
        - meetings > {meetingId} > recordings > registrants
      summary: List recording registrants
      description: >-
        Use this API to list registrants of a past meeting's [on-demand cloud
        recordings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-recordings).
        Users must
        [register](/docs/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate)
        to view the recordings. 

         

        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: string
          description: |-
            Query by the registrant's status: 
            * `pending` &mdash; The registration is pending. 
            * `approved` &mdash; The registrant is approved. 
            * `denied` &mdash; The registration is denied.
          example: approved
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                registrants:
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 51-100
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: ''
                    role_in_purchase_process: Decision Maker
                    state: <string>
                    status: pending
                    zip: <string>
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 251-500
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: No timeframe
                    role_in_purchase_process: Not involved
                    state: <string>
                    status: denied
                    zip: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - meetings > {meetingId} > recordings > registrants
      summary: Create a recording registrant
      description: >-
        Cloud Recordings of past Zoom Meetings can be made
        [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings).
        Users should be
        [registered](/docs/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate)
        to view these recordings.


        Use this API to register a user to gain access to **On-demand Cloud
        Recordings** of a past meeting.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: <email>
                first_name: <string>
                address: <string>
                city: <string>
                comments: <string>
                country: <string>
                custom_questions:
                  - title: <string>
                    value: <string>
                  - title: <string>
                    value: <string>
                industry: <string>
                job_title: <string>
                last_name: <string>
                no_of_employees: 1-20
                org: <string>
                phone: <string>
                purchasing_time_frame: Within a month
                role_in_purchase_process: ''
                state: <string>
                status: pending
                zip: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                registrant_id: <string>
                share_url: <string>
                topic: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/settings:
    get:
      tags:
        - meetings > {meetingId} > recordings > settings
      summary: Get meeting recording settings
      description: >-
        Retrieves settings applied to a meeting's [Cloud
        Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  
           
         


        **Scopes:** `recording:read:admin`,`recording:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting ID enables you to get cloud recording of a:

            - Meeting, provide the meeting ID or meeting UUID. If the meeting ID
            is provided instead of UUID,the response will be for the latest
            meeting instance. 


            - Webinar, provide the webinar ID or the webinar UUID. If the
            webinar ID is provided instead of UUID,the response will be for the
            latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double
            encode** the UUID before making an API request. 
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                approval_type: 2
                authentication_domains: <string>
                authentication_option: <string>
                on_demand: <boolean>
                password: <string>
                recording_authentication: <boolean>
                send_email_to_host: <boolean>
                share_recording: publicly
                show_social_share_buttons: <boolean>
                topic: <string>
                viewer_download: <boolean>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings > {meetingId} > recordings > settings
      summary: Update meeting recording settings
      description: >-
        Updates settings applied to a meeting's [Cloud
        Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).      


        **Scopes:** `recording:write`,`recording:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                approval_type: 0
                authentication_domains: <string>
                authentication_option: <string>
                on_demand: <boolean>
                password: <string>
                recording_authentication: <boolean>
                send_email_to_host: <boolean>
                share_recording: none
                show_social_share_buttons: <boolean>
                topic: <string>
                viewer_download: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double
            encode** the UUID before making an API request. 
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/{recordingId}/status:
    put:
      tags:
        - meetings > {meetingId} > recordings > {recordingId} > status
      summary: Recover a single recording
      description: >-
        Zoom allows users to recover recordings from trash for up to 30 days
        from the deletion date. Use this API to recover a single recording file
        from the meeting.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: recover
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
        - name: recordingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The recording ID.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings/{recordingId}:
    delete:
      tags:
        - meetings > {meetingId} > recordings > {recordingId}
      summary: Delete a meeting recording file
      description: >-
        Delete a specific recording file from a meeting.&lt;p
        style=&quot;background-color:#e1f5fe; color:#01579b;
        padding:8px&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; To use this API, you must
        enable the &lt;b&gt;The host can delete cloud recordings&lt;/b&gt;
        setting. You can find this setting in the &lt;b&gt;Recording&lt;/b&gt;
        tab of the &lt;b&gt;Settings&lt;/b&gt; interface in the [Zoom web
        portal](https://zoom.us/).&lt;/p&gt;




        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: action
          in: query
          schema:
            type: string
          description: |-
            The recording delete actions:  
             `trash` - Move recording to trash.  
             `delete` - Delete recording permanently.
          example: trash
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
        - name: recordingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The recording ID.
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/recordings:
    get:
      tags:
        - meetings > {meetingId} > recordings
      summary: Get meeting recordings
      description: >-
        Returns all of a meeting's
        [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4).

         Use the `download_url` property listed in the response to download the recording files.  To access a passcode-protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer token in the Authorization header. 
         
         Example:  `curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz`  

        **Scopes:** `recording:read`,`phone_recording:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            The `download_access_token` value for downloading the meeting's
            recordings.
          example: <string>
        - name: ttl
          in: query
          schema:
            type: string
          description: >-
            The `download_access_token` Time to Live (TTL) value. This parameter
            is only valid if the `include_fields` query parameter contains the
            `download_access_token` value.
          example: <integer>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get a meeting's cloud recordings, provide the meeting
            ID or UUID. If providing the meeting ID instead of UUID, the
            response will be for the latest meeting instance. 


            To get a webinar's cloud recordings, provide the webinar's ID or
            UUID. If providing the webinar ID instead of UUID, the response will
            be for the latest webinar instance. 


            If a UUID starts with `/` or contains `//` (example:
            `/ajXp112QmuoKj4854875==`), **[double
            encode](/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the UUID** before making an API request. 
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                account_id: <string>
                duration: <integer>
                host_id: <string>
                id: <integer>
                recording_count: <integer>
                start_time: <dateTime>
                topic: <string>
                total_size: <long>
                type: '5'
                uuid: <string>
                recording_play_passcode: <string>
                recording_files:
                  - deleted_time: <string>
                    download_url: <string>
                    file_path: <string>
                    file_size: <number>
                    file_type: CHAT_MESSAGE
                    file_extension: VTT
                    id: <string>
                    meeting_id: <string>
                    play_url: <string>
                    recording_end: <string>
                    recording_start: <string>
                    recording_type: audio_interpretation
                    status: completed
                  - deleted_time: <string>
                    download_url: <string>
                    file_path: <string>
                    file_size: <number>
                    file_type: TB
                    file_extension: VTT
                    id: <string>
                    meeting_id: <string>
                    play_url: <string>
                    recording_end: <string>
                    recording_start: <string>
                    recording_type: audio_transcript
                    status: completed
                download_access_token: <string>
                password: <string>
                participant_audio_files:
                  - download_url: <string>
                    file_name: <string>
                    file_path: <string>
                    file_size: <number>
                    file_type: <string>
                    id: <string>
                    play_url: <string>
                    recording_end: <dateTime>
                    recording_start: <dateTime>
                    status: completed
                  - download_url: <string>
                    file_name: <string>
                    file_path: <string>
                    file_size: <number>
                    file_type: <string>
                    id: <string>
                    play_url: <string>
                    recording_end: <dateTime>
                    recording_start: <dateTime>
                    status: completed
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings > {meetingId} > recordings
      summary: Delete meeting recordings
      description: >-
        Delete all recording files of a meeting.  
           
         

        **Prerequisites**:

        * Cloud Recording should be enabled on the user's account.  
         


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: action
          in: query
          schema:
            type: string
          description: |-
            The recording delete actions:  
             `trash` - Move recording to trash.  
             `delete` - Delete recording permanently.
          example: trash
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To get Cloud Recordings of a meeting, provide the meeting
            ID or meeting UUID. If the meeting ID is provided instead of
            UUID,the response will be for the latest meeting instance. 


            To get Cloud Recordings of a webinar, provide the webinar ID or the
            webinar UUID. If the webinar ID is provided instead of UUID,the
            response will be for the latest webinar instance. 


            If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
            (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
            the UUID before making an API request. 
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/batch_polls:
    post:
      tags:
        - meetings > {meetingId} > batch_polls
      summary: Perform batch poll creation
      description: >-
        Polls allow the meeting host to survey attendees. Create batch
        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        for a meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro** or higher plan.

        * Polling feature must be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                polls:
                  - anonymous: false
                    poll_type: 1
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: rank_order
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: short_answer
                    title: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                polls:
                  - anonymous: <boolean>
                    id: <string>
                    poll_type: 2
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: <boolean>
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                          - <string>
                        show_as_dropdown: <boolean>
                        type: short_answer
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: <boolean>
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                          - <string>
                        show_as_dropdown: <boolean>
                        type: matching
                    status: sharing
                    title: <string>
                  - anonymous: <boolean>
                    id: <string>
                    poll_type: 1
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: <boolean>
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                          - <string>
                        show_as_dropdown: <boolean>
                        type: matching
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: <boolean>
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                          - <string>
                        show_as_dropdown: <boolean>
                        type: fill_in_the_blank
                    status: ended
                    title: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/batch_registrants:
    post:
      tags:
        - meetings > {meetingId} > batch_registrants
      summary: Perform batch registration
      description: >-
        Register up to 30 registrants at once for a meeting that requires
        [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).   
         

        **Prerequisites:**  
         
        * The meeting host must be a Licensed user.

        * The meeting must require registration and should be of type `2`, i.e.,
        they should be scheduled meetings. Instant meetings and Recurring
        meetings are not supported by this API.  
           
         


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                auto_approve: <boolean>
                registrants_confirmation_email: <boolean>
                registrants:
                  - email: <email>
                    first_name: <string>
                    last_name: <string>
                  - email: <email>
                    first_name: <string>
                    last_name: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the meeting (Meeting Number).
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                registrants:
                  - email: <string>
                    join_url: <string>
                    registrant_id: <string>
                    participant_pin_code: <long>
                  - email: <string>
                    join_url: <string>
                    registrant_id: <string>
                    participant_pin_code: <long>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/invitation:
    get:
      tags:
        - meetings > {meetingId} > invitation
      summary: Get meeting invitation
      description: >-
        Retrieve the meeting invitation note for a specific meeting.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                invitation: <string>
                sip_links:
                  - <string>
                  - <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/invite_links:
    post:
      tags:
        - meetings > {meetingId} > invite_links
      summary: Create meeting's invite links
      description: >-
        Create a batch of invitation links for a meeting.




        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                attendees:
                  - name: <string>
                ttl: 7200
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attendees:
                  - join_url: <string>
                    name: <string>
                  - join_url: <string>
                    name: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/jointoken/live_streaming:
    get:
      tags:
        - meetings > {meetingId} > jointoken > live_streaming
      summary: Get a meeting's join token for live streaming
      description: >-
        Get a meeting's join token to allow live streaming. The join token
        allows a recording bot implemented using Zoom meeting SDK to connect to
        a Zoom meeting &quot;hosted by the issuer of the token&quot;, and can
        call the streaming method automatically. It supports both regular live
        streaming, and raw streaming. 


        **Prerequisites:** 

        * A Pro or higher plan for the meeting host. 

        * The **Allow livestreaming of meetings** user setting enabled in the
        Zoom web portal.


        **Scopes:**
        `meeting_token:read:admin:live_streaming`,`meeting_token:read:live_streaming`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                expire_in: 120
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/jointoken/local_archiving:
    get:
      tags:
        - meetings > {meetingId} > jointoken > local_archiving
      summary: Get a meeting's archive token for local archiving
      description: >-
        Get a meeting's archive token to allow local archiving. The archive
        token allows a meeting SDK app or bot to get archive permission to
        access the meeting's raw audio and video media stream in real-time. 


        **Prerequisites:** 

        * A Pro or higher plan for the meeting host. 

        * The **Archive meetings and webinars** account setting enabled in the
        Zoom web portal.


        **Scopes:** `meeting_token:read:admin:local_archiving`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                expire_in: 120
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/jointoken/local_recording:
    get:
      tags:
        - meetings > {meetingId} > jointoken > local_recording
      summary: Get a meeting's join token for local recording
      description: >-
        Get a meeting's join token to allow for local recording. The join token
        lets a recording bot implemented using Zoom Meeting SDK to connect to a
        Zoom meeting. The recording bot can then automatically start locally
        recording. This supports both regular and raw local recording types. 


        **Prerequisites:** 

        * The **Local recording** user setting enabled in the Zoom web portal.


        **Scopes:**
        `meeting_token:read:local_recording`,`meeting_token:read:admin:local_recording`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: bypass_waiting_room
          in: query
          schema:
            type: string
          description: Whether to bypass the waiting room.
          example: <boolean>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                expire_in: 120
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/livestream/status:
    patch:
      tags:
        - meetings > {meetingId} > livestream > status
      summary: Update livestream status
      description: >-
        Zoom allows users to [livestream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Update the status of a meeting's livestream.  


        **Prerequisites:**

        * Meeting host must have a Pro license.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: start
                settings:
                  active_speaker_name: <boolean>
                  display_name: <string>
                  layout: follow_host
                  close_caption: burnt-in
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/livestream:
    get:
      tags:
        - meetings > {meetingId} > livestream
      summary: Get livestream details
      description: >-
        Zoom allows users to [livestream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Get a meeting's livestream configuration details
        such as Stream URL, Stream Key and Page URL.  
           
         
        **Prerequisites:**  
         
        * Meeting host must be a licensed user with a Pro or higher plan.  
         
        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the meeting.  
           
         


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the meeting.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_url: <string>
                stream_key: <string>
                stream_url: <string>
                resolution: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings > {meetingId} > livestream
      summary: Update a livestream
      description: >-
        Update a meeting's livestream information. Zoom allows users to
        [livestream a
        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform.


        **Prerequisites:** 

        * Meeting host must have a Pro license.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                page_url: <uri>
                stream_key: <string>
                stream_url: <string>
                resolution: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/meeting_summary:
    get:
      tags:
        - meetings > {meetingId} > meeting_summary
      summary: Get a meeting summary
      description: >-
        Displays information about a meeting summary.


        **Prerequisites**:

        * Host user type must be Pro or higher plan.

        * The Meeting Summary with AI Companion feature enabled in the host's
        account.

        * E2ee meetings do not have summary feature enabled.


        **Scopes:** `meeting_summary:read:admin`,`meeting_summary:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            The meeting's universally unique ID (UUID). When you provide a
            meeting UUID that begins with a `/` character or contains the `//`
            characters, you **must** double-encode the meeting UUID before
            making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meeting_host_id: <string>
                meeting_host_email: <email>
                meeting_uuid: <string>
                meeting_id: <long>
                meeting_topic: <string>
                meeting_start_time: <dateTime>
                meeting_end_time: <dateTime>
                summary_start_time: <dateTime>
                summary_end_time: <dateTime>
                summary_created_time: <dateTime>
                summary_last_modified_time: <dateTime>
                summary_title: <string>
                summary_overview: <string>
                summary_details:
                  - label: <string>
                    summary: <string>
                  - label: <string>
                    summary: <string>
                next_steps:
                  - <string>
                  - <string>
                edited_summary:
                  summary_details: <string>
                  next_steps:
                    - <string>
                    - <string>
  /meetings/{meetingId}/polls/{pollId}:
    get:
      tags:
        - meetings > {meetingId} > polls > {pollId}
      summary: Get a meeting poll
      description: >-
        Polls allow the meeting host to survey attendees. Retrieve information
        about a specific meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  
           
         


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                status: ended
                anonymous: false
                poll_type: 1
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: long_answer
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: rating_scale
                title: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - meetings > {meetingId} > polls > {pollId}
      summary: Update a meeting poll
      description: >-
        Polls allow the meeting host to survey attendees. Update information of
        a specific meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                anonymous: false
                poll_type: 2
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: rank_order
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: fill_in_the_blank
                title: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings > {meetingId} > polls > {pollId}
      summary: Delete a meeting poll
      description: >-
        Polls allow the meeting host to survey attendees. Delete a meeting
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  
         
        **Prerequisites**:  
         
        * Host user type must be **Pro**.

        * Polling feature should be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/polls:
    get:
      tags:
        - meetings > {meetingId} > polls
      summary: List meeting polls
      description: >-
        Polls allow the meeting host to survey attendees. List all
        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        of a meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro** or higher plan.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: anonymous
          in: query
          schema:
            type: string
          description: >-
            Whether to query for polls with the **Anonymous** option enabled: 

            * `true` &mdash; Query for polls with the **Anonymous** option
            enabled. 

            * `false` &mdash; Do not query for polls with the **Anonymous**
            option enabled.
          example: <boolean>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                polls:
                  - id: <string>
                    status: ended
                    anonymous: false
                    poll_type: 2
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: rank_order
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: fill_in_the_blank
                    title: <string>
                  - id: <string>
                    status: ended
                    anonymous: false
                    poll_type: 1
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: multiple
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: rank_order
                    title: <string>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - meetings > {meetingId} > polls
      summary: Create a meeting poll
      description: >-
        Polls allow the meeting host to survey attendees. Create a
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        for a meeting.  
           
         

        **Prerequisites**:  
         
        * Host user type must be **Pro** or higher plan.

        * Polling feature must be enabled in the host's account.

        * Meeting must be a scheduled meeting. Instant meetings do not have
        polling features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                anonymous: false
                poll_type: 2
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: rank_order
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: fill_in_the_blank
                title: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                status: ended
                anonymous: false
                poll_type: 1
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: long_answer
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: rating_scale
                title: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants/questions:
    get:
      tags:
        - meetings > {meetingId} > registrants > questions
      summary: 'List registration questions '
      description: >-
        List registration questions that will be displayed to users while
        [registering for a
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  
         



        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_questions:
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single
                questions:
                  - field_name: address
                    required: <boolean>
                  - field_name: role_in_purchase_process
                    required: <boolean>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings > {meetingId} > registrants > questions
      summary: Update registration questions
      description: >-
        Update registration questions that will be displayed to users while
        [registering for a
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  
           
         


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_questions:
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single
                questions:
                  - field_name: address
                    required: <boolean>
                  - field_name: role_in_purchase_process
                    required: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants/status:
    put:
      tags:
        - meetings > {meetingId} > registrants > status
      summary: Update registrant's status
      description: >-
        Update a meeting registrant's status by either approving, cancelling or
        denying a registrant from joining the meeting.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: deny
                registrants:
                  - email: <string>
                    id: <string>
                  - email: <string>
                    id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants/{registrantId}:
    get:
      tags:
        - meetings > {meetingId} > registrants > {registrantId}
      summary: Get a meeting registrant
      description: >-
        Retrieve details on a specific user who has registered for the meeting.
        A host or a user with administrative permissions can require
        [registration for Zoom
        meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).


        **Prerequisites:** 

        * The account must have a Meeting plan


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The registrant ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                email: <email>
                first_name: <string>
                id: <string>
                address: <string>
                city: <string>
                comments: <string>
                country: <string>
                custom_questions:
                  - title: <string>
                    value: <string>
                  - title: <string>
                    value: <string>
                industry: <string>
                job_title: <string>
                last_name: <string>
                no_of_employees: 5,001-10,000
                org: <string>
                phone: <string>
                purchasing_time_frame: 4-6 months
                role_in_purchase_process: Influencer
                state: <string>
                status: denied
                zip: <string>
                create_time: <dateTime>
                join_url: <string>
                participant_pin_code: <long>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings > {meetingId} > registrants > {registrantId}
      summary: Delete a meeting registrant
      description: >-
        Delete a meeting registrant.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting occurrence ID.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The meeting ID.
          example: <integer>
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The meeting registrant ID.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/registrants:
    get:
      tags:
        - meetings > {meetingId} > registrants
      summary: List meeting registrants
      description: >-
        A host or a user with admin permission can require [registration for a
        Zoom
        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).
        List users that have registered for a meeting.  
           
         


        **Scopes:** `meeting:read:admin`,`meeting:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: status
          in: query
          schema:
            type: string
          description: |-
            Query by the registrant's status. 
            * `pending` - The registration is pending. 
            * `approved` - The registrant is approved. 
            * `denied` - The registration is denied.
          example: approved
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                registrants:
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 1,001-5,000
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: ''
                    role_in_purchase_process: Decision Maker
                    state: <string>
                    status: denied
                    zip: <string>
                    create_time: <dateTime>
                    join_url: <string>
                    participant_pin_code: <long>
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 1-20
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: 1-3 months
                    role_in_purchase_process: Not involved
                    state: <string>
                    status: pending
                    zip: <string>
                    create_time: <dateTime>
                    join_url: <string>
                    participant_pin_code: <long>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - meetings > {meetingId} > registrants
      summary: Add a meeting registrant
      description: >-
        Create and submit a user's registration to a meeting. See [Customizing
        webinar
        registration](https://support.zoom.us/hc/en-us/articles/202835649-Customizing-webinar-registration)
        for details on how to set the requirements for these fields. Note that
        there is a maximum limit of 4,999 registrants per meeting and users will
        see an error if the meeting's capacity is reached. 

         **Prerequisites:** 
        * The host must be a **Licensed** user type.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: <email>
                first_name: <string>
                last_name: <string>
                address: <string>
                city: <string>
                state: <string>
                zip: <string>
                country: <string>
                phone: <string>
                comments: <string>
                custom_questions:
                  - title: <string>
                    value: <string>
                  - title: <string>
                    value: <string>
                industry: <string>
                job_title: <string>
                no_of_employees: ''
                org: <string>
                purchasing_time_frame: No timeframe
                role_in_purchase_process: Evaluator/Recommender
                language: Tr-TR
                auto_approve: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_ids
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of meeting occurrence IDs. You can get this
            value with the [Get a
            meeting](/docs/api-reference/zoom-api/methods#operation/meeting)
            API.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                join_url: <string>
                registrant_id: <string>
                start_time: <dateTime>
                topic: <string>
                occurrences:
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: <string>
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: <string>
                participant_pin_code: <long>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/sip_dialing:
    post:
      tags:
        - meetings > {meetingId} > sip_dialing
      summary: Get a meeting SIP URI with Passcode
      description: >-
        Get a meeting's SIP URI.  The URI consists of the meeting ID, (optional,
        user-supplied) passcode and participant identifier code.  The API return
        data also includes additional fields to indicate whether the API caller
        has a valid Cloud Room Connector subscription, the participant
        identifier code from the URI, and the SIP URI validity period (in
        seconds). 




        **Scopes:**
        `meeting:write:sip_dialing`,`meeting:write:admin:sip_dialing`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                passcode: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sip_dialing: <string>
                paid_crc_plan_participant: <boolean>
                participant_identifier_code: <string>
                expire_in: <long>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/status:
    put:
      tags:
        - meetings > {meetingId} > status
      summary: Update meeting status
      description: >-
        Update the status of a meeting.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: recover
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/survey:
    get:
      tags:
        - meetings > {meetingId} > survey
      summary: Get a meeting survey
      description: >-
        Display information about a [meeting
        survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 
        **Prerequisites:** * The host has a **Pro** license. * The [**Meeting
        Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
        feature is enabled on the host's account. * The meeting must be a
        scheduled meeting. Instant meetings do not have survey features enabled.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be more than 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_survey:
                  title: <string>
                  anonymous: false
                  numbered_questions: false
                  show_question_type: false
                  feedback: <string>
                  questions:
                    - name: <string>
                      type: short_answer
                      answer_required: false
                      show_as_dropdown: false
                      answers:
                        - <string>
                        - <string>
                      prompts:
                        - prompt_question: <string>
                        - prompt_question: <string>
                      answer_min_character: <integer>
                      answer_max_character: <integer>
                      rating_min_value: <integer>
                      rating_max_value: <integer>
                      rating_min_label: <string>
                      rating_max_label: <string>
                show_in_the_browser: true
                third_party_survey: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings > {meetingId} > survey
      summary: Delete a meeting survey
      description: >-
        Delete a [meeting
        survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 

         **Prerequisites:** 
        * The host must be a **Pro** user type. 

        * The [**Meeting
        Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
        feature enabled in the host's account. 

        * The meeting must be a scheduled meeting. Instant meetings do not have
        survey features enabled.


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings > {meetingId} > survey
      summary: Update a meeting survey
      description: >-
        Update a [meeting
        survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 
        **Prerequisites:** * The host must be a **Pro** user type. * The
        [**Meeting
        Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
        feature is enabled in the host's account. * The meeting must be a
        scheduled meeting. Instant meetings do not have survey features enabled.


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_survey:
                  title: <string>
                  anonymous: false
                  numbered_questions: false
                  show_question_type: false
                  feedback: <string>
                  questions:
                    - name: <string>
                      type: short_answer
                      answer_required: false
                      show_as_dropdown: false
                      answers:
                        - <string>
                        - <string>
                      prompts:
                        - prompt_question: <string>
                        - prompt_question: <string>
                      answer_min_character: <integer>
                      answer_max_character: <integer>
                      rating_min_value: <integer>
                      rating_max_value: <integer>
                      rating_min_label: <string>
                      rating_max_label: <string>
                show_in_the_browser: true
                third_party_survey: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be over 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}/token:
    get:
      tags:
        - meetings > {meetingId} > token
      summary: Get meeting's token
      description: >-
        Get a meeting's [closed caption token (caption
        URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service).
        This token lets you use a third-party service to stream text to their
        closed captioning software to the Zoom meeting. 


        **Prerequisites:** 

        * The **Closed captioning** setting enabled in the Zoom web portal. 

        * The **Allow use of caption API Token to integrate with 3rd-party
        Closed Captioning services** setting enabled.


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting token type: 

            * `closed_caption_token` &mdash; The third-party closed caption API
            token. 


            This defaults to `closed_caption_token`.
          example: closed_caption_token
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingId}:
    get:
      tags:
        - meetings > {meetingId}
      summary: Get a meeting
      description: >-
        Retrieve the given meeting's details. 
         
         


        **Scopes:** `meeting:read`,`meeting:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Meeting occurrence ID. Provide this field to view meeting details of
            a particular occurrence of the [recurring
            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
          example: <string>
        - name: show_previous_occurrences
          in: query
          schema:
            type: string
          description: >-
            Set this field's value to `true` to view meeting details of all
            previous occurrences of a [recurring
            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). 
          example: <boolean>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be more than 10 digits.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                assistant_id: <string>
                host_email: <email>
                host_id: <string>
                id: <long>
                uuid: <string>
                agenda: <string>
                created_at: <dateTime>
                duration: <integer>
                encrypted_password: <string>
                h323_password: <string>
                join_url: <string>
                chat_join_url: <string>
                occurrences:
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: available
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: deleted
                password: <string>
                pmi: <string>
                pre_schedule: false
                recurrence:
                  type: 1
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: 1
                  monthly_week: 4
                  monthly_week_day: 6
                  repeat_interval: <integer>
                  weekly_days: '1'
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_hosts_email_notification: true
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  approved_or_denied_countries_or_regions:
                    approved_list:
                      - <string>
                      - <string>
                    denied_list:
                      - <string>
                      - <string>
                    enable: <boolean>
                    method: deny
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_exception:
                    - email: <email>
                      name: <string>
                      join_url: <string>
                    - email: <email>
                      name: <string>
                      join_url: <string>
                  authentication_name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  breakout_room:
                    enable: <boolean>
                    rooms:
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                  calendar_type: 2
                  close_registration: false
                  cn_meeting: false
                  contact_email: <string>
                  contact_name: <string>
                  custom_keys:
                    - key: <string>
                      value: <string>
                    - key: <string>
                      value: <string>
                  email_notification: true
                  encryption_type: e2ee
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  focus_mode: <boolean>
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  global_dial_in_numbers:
                    - city: <string>
                      country: <string>
                      country_name: <string>
                      number: <string>
                      type: toll
                    - city: <string>
                      country: <string>
                      country_name: <string>
                      number: <string>
                      type: tollfree
                  host_video: <boolean>
                  in_meeting: false
                  jbh_time: 0
                  join_before_host: false
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  meeting_authentication: <boolean>
                  mute_upon_entry: false
                  participant_video: <boolean>
                  private_meeting: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registration_type: 1
                  show_share_button: <boolean>
                  use_pmi: false
                  waiting_room: false
                  watermark: false
                  host_save_video_order: <boolean>
                  internal_meeting: false
                  continuous_meeting_chat:
                    enable: <boolean>
                    auto_add_invited_external_users: <boolean>
                    channel_id: <string>
                  participant_focused_meeting: false
                  push_change_to_calendar: false
                  resources:
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                  auto_start_meeting_summary: false
                  auto_start_ai_companion_questions: false
                start_time: <dateTime>
                start_url: <string>
                status: started
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                    visible: <boolean>
                  - field: <string>
                    value: <string>
                    visible: <boolean>
                type: 2
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - meetings > {meetingId}
      summary: Delete a meeting
      description: >-
        Delete a meeting.  
           
         


        **Scopes:** `meeting:write:admin`,`meeting:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: schedule_for_reminder
          in: query
          schema:
            type: string
          description: >-
            `true`: Notify host and alternative host about the meeting
            cancellation via email.

            `false`: Do not send any email notification.
          example: <boolean>
        - name: cancel_meeting_reminder
          in: query
          schema:
            type: string
          description: >-
            `true`: Notify registrants about the meeting cancellation via
            email. 


            `false`: Do not send any email notification to meeting registrants. 


            The default value of this field is `false`.
          example: <boolean>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - meetings > {meetingId}
      summary: Update a meeting
      description: >-
        Update meeting details.


        **Note** 

        * The `start_time` value **must** be a future date. If the value is
        omitted or a date is in the past, the API ignores this value and does
        **not** update any recurring meetings. 

        * The `recurrence` object is **required**.

        * This API has a rate limit of **100 requests per day**. You can update
        a meeting for a maximum of **100 times within a 24-hour period**. 





        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                agenda: <string>
                duration: <integer>
                password: <string>
                pre_schedule: false
                schedule_for: <string>
                recurrence:
                  type: 1
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: 1
                  monthly_week: 2
                  monthly_week_day: 4
                  repeat_interval: <integer>
                  weekly_days: '1'
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_hosts_email_notification: true
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  approved_or_denied_countries_or_regions:
                    approved_list:
                      - <string>
                      - <string>
                    denied_list:
                      - <string>
                      - <string>
                    enable: <boolean>
                    method: approve
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_exception:
                    - email: <email>
                      name: <string>
                      join_url: <string>
                    - email: <email>
                      name: <string>
                      join_url: <string>
                  authentication_name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  breakout_room:
                    enable: <boolean>
                    rooms:
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                      - name: <string>
                        participants:
                          - <string>
                          - <string>
                  calendar_type: 2
                  close_registration: false
                  cn_meeting: false
                  contact_email: <string>
                  contact_name: <string>
                  custom_keys:
                    - key: <string>
                      value: <string>
                    - key: <string>
                      value: <string>
                  email_notification: true
                  encryption_type: e2ee
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  focus_mode: <boolean>
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  global_dial_in_numbers:
                    - city: <string>
                      country: <string>
                      country_name: <string>
                      number: <string>
                      type: tollfree
                    - city: <string>
                      country: <string>
                      country_name: <string>
                      number: <string>
                      type: tollfree
                  host_video: <boolean>
                  in_meeting: false
                  jbh_time: 10
                  join_before_host: false
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  meeting_authentication: <boolean>
                  meeting_invitees:
                    - email: <email>
                    - email: <email>
                  mute_upon_entry: false
                  participant_video: <boolean>
                  private_meeting: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registration_type: 1
                  show_share_button: <boolean>
                  use_pmi: false
                  waiting_room: false
                  watermark: false
                  host_save_video_order: <boolean>
                  internal_meeting: false
                  continuous_meeting_chat:
                    enable: <boolean>
                    auto_add_invited_external_users: <boolean>
                  participant_focused_meeting: false
                  resources:
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                    - resource_type: whiteboard
                      resource_id: <string>
                      permission_level: editor
                  auto_start_meeting_summary: false
                  auto_start_ai_companion_questions: false
                start_time: <dateTime>
                template_id: <string>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: 2
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Meeting occurrence ID. Support change of agenda, `start_time`,
            duration, or settings {`host_video`, `participant_video`,
            `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`,
            `auto_recording`}.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be greater than 10 digits.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/{meetingUUID}/recordings/status:
    put:
      tags:
        - meetings > {meetingUUID} > recordings > status
      summary: Recover meeting recordings
      description: >-
        Zoom allows users to recover recordings from trash for up to 30 days
        from the deletion date. Use this API to recover all deleted [Cloud
        Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
        of a specific meeting.  
           
         
        **Prerequisites**:  
         
        * A Pro user with Cloud Recording enabled.


        **Scopes:** `recording:write:admin`,`recording:write`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: recover
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingUUID
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's universally unique identifier (UUID). Each
            meeting instance generates a UUID. For example, after a meeting
            ends, a new UUID is generated for the next meeting instance.


            If the meeting UUID begins with a `/` character or contains a `//`
            character, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID when using the meeting UUID for other API calls.
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /meetings/meeting_summaries:
    get:
      tags:
        - meetings > meeting_summaries
      summary: List meeting summaries of an account
      description: >-
        Generates a list of all meeting summaries for an account.


        **Prerequisites**

        * Host user type must be Pro or higher plan.

        * The Meeting Summary with AI Companion feature enabled in the host's
        account.

        * E2ee meetings do not have summary feature enabled.


        **Scopes:** `meeting_summary:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token paginates through a large set of results. A next
            page token returns whenever the set of available results exceeds the
            current page size. The expiration period for this token is 15
            minutes.
          example: <string>
        - name: from
          in: query
          schema:
            type: string
          description: >-
            The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
            retrieve the creation date range of the meeting summaries.
          example: <dateTime>
        - name: to
          in: query
          schema:
            type: string
          description: >-
            The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
            retrieve the creation date range of the meeting summaries.
          example: <dateTime>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_size: 30
                next_page_token: <string>
                from: <dateTime>
                to: <dateTime>
                summaries:
                  - meeting_host_id: <string>
                    meeting_host_email: <email>
                    meeting_uuid: <string>
                    meeting_id: <long>
                    meeting_topic: <string>
                    meeting_start_time: <dateTime>
                    meeting_end_time: <dateTime>
                    summary_start_time: <dateTime>
                    summary_end_time: <dateTime>
                    summary_created_time: <dateTime>
                    summary_last_modified_time: <dateTime>
                  - meeting_host_id: <string>
                    meeting_host_email: <email>
                    meeting_uuid: <string>
                    meeting_id: <long>
                    meeting_topic: <string>
                    meeting_start_time: <dateTime>
                    meeting_end_time: <dateTime>
                    summary_start_time: <dateTime>
                    summary_end_time: <dateTime>
                    summary_created_time: <dateTime>
                    summary_last_modified_time: <dateTime>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /live_meetings/{meetingId}/chat/messages/{messageId}:
    delete:
      tags:
        - live_meetings > {meetingId} > chat > messages > {messageId}
      summary: Delete a live meeting message
      description: >-
        Delete a message in a live meeting, based on ID. 


        **Prerequisites:** 

        * Have Zoom enable the DLP for the in-meeting chat feature to use this
        API.


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: file_ids
          in: query
          schema:
            type: string
          description: >-
            The live webinar chat file's universally unique identifier (UUID),
            in base64-encoded format. Separate multiple values with commas.
          example: <string>
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The live meeting chat message's unique identifier (UUID),
            in base64-encoded format.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - live_meetings > {meetingId} > chat > messages > {messageId}
      summary: Update a live meeting message
      description: >-
        Update a message in a live meeting, based on ID. **Prerequisites:** *
        Have Zoom enable the DLP for the in-meeting chat feature to use this
        API.


        **Scopes:** `meeting:write`,`meeting:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message_content: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The meeting's ID. 

             When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits.
          example: <long>
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The live meeting chat message's unique identifier (UUID),
            in base64-encoded format.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /live_meetings/{meetingId}/events:
    patch:
      tags:
        - live_meetings > {meetingId} > events
      summary: Use in-meeting controls
      description: >-
        Control
        [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls)
        features. In-meeting controls include starting and stopping a recording,
        pausing and resuming a recording, and inviting participants. 


        **Note:** This API's recording control only works for cloud recordings.
        It does **not** work for local recordings. 


        **Prerequisites:**

        * The meeting **must** be a live meeting **except** inviting
        participants to the meeting through [call out (phone)/(room system)]. 

        * Recording control: [Cloud
        recording](https://support.zoom.us/hc/en-us/articles/360060231472-Enabling-cloud-recording)
        must be enabled on the account. 

        * The user calling this API must be the host or an alternative meeting
        host.

         

        **Scopes:** `meeting:write`,`meeting:write:admin`,`meeting:master`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: <string>
                params:
                  contacts:
                    - email: <string>
                      id: <string>
                    - email: <string>
                      id: <string>
                  invitee_name: <string>
                  phone_number: <string>
                  invite_options:
                    require_greeting: true
                    require_pressing_one: true
                  call_type: <string>
                  device_ip: <string>
                  h323_headers:
                    from_display_name: <string>
                    to_display_name: <string>
                  sip_headers:
                    from_display_name: <string>
                    to_display_name: <string>
                    from_uri: <string>
                    additional_headers:
                      - key: <string>
                        value: <string>
                      - key: <string>
                        value: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The live meeting's ID.
          example: <string>
      responses:
        '202':
          description: Accepted
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/activities:
    get:
      tags:
        - report > activities
      summary: Get sign In / sign out activity report
      description: >-
        Retrieve a list of sign in / sign out activity logs
        [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports)
        of users under a Zoom account.  
         
        **Prerequisites**  
         
        * Pro or higher plan.  
         


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            Start date for which you would like to view the activity logs
            report. Using the `from` and `to` parameters, specify a monthly date
            range for the report as the API only provides one month worth of
            data in one request. The specified date range should fall within the
            last six months.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: >-
            End date up to which you would like to view the activity logs
            report.
          example: <date>
        - name: page_size
          in: query
          schema:
            type: string
          description: The number of records to be returned within a single API call
          example: <integer>
        - name: next_page_token
          in: query
          schema:
            type: string
          description: Next page token is used to paginate through large result sets
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                activity_logs:
                  - client_type: <string>
                    email: <email>
                    ip_address: <string>
                    time: <dateTime>
                    type: Sign out
                    version: <string>
                  - client_type: <string>
                    email: <email>
                    ip_address: <string>
                    time: <dateTime>
                    type: Sign out
                    version: <string>
                from: <string>
                next_page_token: <string>
                page_size: <integer>
                to: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/billing/invoices:
    get:
      tags:
        - report > billing > invoices
      summary: Get billing invoice reports
      description: >-
        Get department billing invoices reports for a specific billing period.
        Provide the `billing_id` of the billing period for which you would like
        to retrieve the invoices for. This ID can be retrieved from **Get
        Billing Reports** API. 


        **Prerequisites:**  
         
        * Pro or a higher account with Department Billing option enabled.
        Contact the Zoom Support team to enable this feature.




        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: billing_id
          in: query
          schema:
            type: string
          description: >+
            (Required) Unique Identifier of the Billing Report. Retrieve this ID
            from the response of **Get Billing Reports** API request. 

          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currency: <string>
                invoices:
                  - end_date: <date>
                    invoice_charge_name: <string>
                    invoice_number: <string>
                    quantity: <integer>
                    start_date: <date>
                    tax_amount: <string>
                    total_amount: <string>
                  - end_date: <date>
                    invoice_charge_name: <string>
                    invoice_number: <string>
                    quantity: <integer>
                    start_date: <date>
                    tax_amount: <string>
                    total_amount: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/billing:
    get:
      tags:
        - report > billing
      summary: Get billing reports
      description: >-
        Get department billing reports of a Zoom account.


        **Prerequisites:**  
         
        * Pro or a higher account with Department Billing option enabled.
        Contact Zoom Support team for details.




        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                billing_reports:
                  - end_date: <date>
                    id: <string>
                    start_date: <date>
                    tax_amount: <string>
                    total_amount: <string>
                    type: 1
                  - end_date: <date>
                    id: <string>
                    start_date: <date>
                    tax_amount: <string>
                    total_amount: <string>
                    type: 0
                currency: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/cloud_recording:
    get:
      tags:
        - report > cloud_recording
      summary: Get cloud recording usage report
      description: >-
        Retrieve cloud recording usage report for a specified period. You can
        only get cloud recording reports that is one day earlier than the
        current date and for the most recent period of 6 months. The date gap
        between from and to dates should be smaller or equal to 30 days.   
         
        **Prerequisites**  
         
        * Pro or higher plan.  
         


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the &quot;from&quot; and &quot;to&quot; parameters should only be
            one month as the report includes only one month worth of data at
            once.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: <date>
        - name: group_id
          in: query
          schema:
            type: string
          description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain users who are members of the queried group ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <date>
                to: <date>
                cloud_recording_storage:
                  - date: <date>
                    free_usage: <string>
                    plan_usage: <string>
                    usage: <string>
                  - date: <date>
                    free_usage: <string>
                    plan_usage: <string>
                    usage: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/daily:
    get:
      tags:
        - report > daily
      summary: Get daily usage report
      description: >-
        Retrieve daily report to access the account-wide usage of Zoom services
        for each day in a given month. It lists the number of new users,
        meetings, participants, and meeting minutes.  
         
        **Prerequisites**  
         
        * Pro or higher plan.  
         


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: year
          in: query
          schema:
            type: string
          description: Year for this report
          example: <integer>
        - name: month
          in: query
          schema:
            type: string
          description: Month for this report
          example: <integer>
        - name: group_id
          in: query
          schema:
            type: string
          description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain users who are members of the queried group ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dates:
                  - date: <date>
                    meeting_minutes: <integer>
                    meetings: <integer>
                    new_users: <integer>
                    participants: <integer>
                  - date: <date>
                    meeting_minutes: <integer>
                    meetings: <integer>
                    new_users: <integer>
                    participants: <integer>
                month: <integer>
                year: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}/participants:
    get:
      tags:
        - report > meetings > {meetingId} > participants
      summary: Get meeting participant reports
      description: >-
        Return a report of a past meeting with two or more participants,
        including the host. To return a report for past meeting with only
        **one** participant, use the [**List meeting
        participants**](/docs/api-reference/zoom-api/ma#operation/dashboardMeetingParticipants)
        API. 


        **Note:** 


        This API may return empty values for participants' `user_name`,
        `ip_address`, `location`, and `email` responses when the account calling
        this API: 

        * Does **not** have a signed HIPAA business associate agreement (BAA). 

        * Is a [**legacy** HIPAA BAA
        account](/docs/api-reference/other-references/legacy-business-associate-agreements). 


        **Prerequisites:** 

        * A Pro or a higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            Provide `registrant_id` as the value for this field if you would
            like to see the registrant ID attribute in the response of this API
            call. A registrant ID is a unique identifier of a [meeting
            registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants).
          example: registrant_id
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_size: 30
                total_records: <integer>
                participants:
                  - customer_key: <string>
                    duration: <integer>
                    failover: <boolean>
                    id: <string>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    name: <string>
                    registrant_id: <string>
                    status: in_waiting_room
                    user_email: <string>
                    user_id: <string>
                    bo_mtg_id: <string>
                    participant_user_id: <string>
                  - customer_key: <string>
                    duration: <integer>
                    failover: <boolean>
                    id: <string>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    name: <string>
                    registrant_id: <string>
                    status: in_waiting_room
                    user_email: <string>
                    user_id: <string>
                    bo_mtg_id: <string>
                    participant_user_id: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}/polls:
    get:
      tags:
        - report > meetings > {meetingId} > polls
      summary: Get meeting poll reports
      description: >-
        Use this API to get a report of
        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
        results for a past meeting. 

         **Prerequisites:** 
        * A Pro or a higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                uuid: <string>
                start_time: <dateTime>
                questions:
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}/qa:
    get:
      tags:
        - report > meetings > {meetingId} > qa
      summary: Get meeting Q&A report
      description: >-
        Retrieve a report on questions asked and answered by participants from
        past meetings.   
           


         
        **Prerequisites:**  
         
        * Pro plan or higher.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - user_id: <string>
                    email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                  - user_id: <string>
                    email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                start_time: <dateTime>
                uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}/survey:
    get:
      tags:
        - report > meetings > {meetingId} > survey
      summary: Get meeting survey report
      description: >-
        Retrieve a report on past [meeting
        survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the meeting
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meeting_id: <long>
                meeting_uuid: <string>
                start_time: <dateTime>
                survey_id: <string>
                survey_name: <string>
                survey_answers:
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    answer_details:
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    answer_details:
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/meetings/{meetingId}:
    get:
      tags:
        - report > meetings > {meetingId}
      summary: Get meeting detail reports
      description: >-
        Get a detailed report for a past meeting.   
         
        **Prerequisites:**  
         
        * Pro or a higher plan.  
         
         

        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: meetingId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The meeting's ID or universally unique ID (UUID). 

            * If you provide a meeting ID, the API will return a response for
            the latest meeting instance. 

            * If you provide a meeting UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the meeting UUID before making an API request.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_keys:
                  - key: <string>
                    value: <string>
                  - key: <string>
                    value: <string>
                dept: <string>
                duration: <integer>
                end_time: <dateTime>
                id: <long>
                participants_count: <integer>
                start_time: <dateTime>
                topic: <string>
                total_minutes: <integer>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: <integer>
                user_email: <string>
                user_name: <string>
                uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/operationlogs:
    get:
      tags:
        - report > operationlogs
      summary: Get operation logs report
      description: >-
        The [Operations
        Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs)
        report allows you to audit admin and user activity, such as adding a new
        user, changing account settings, and deleting recordings.  
         
        Use this API to retrieve operation logs report for a specified period of
        time.  
         
        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the &quot;from&quot; and &quot;to&quot; parameters should only be
            one month as the report includes only one month worth of data at
            once.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: <date>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: category_type
          in: query
          schema:
            type: string
          description: >-
            **Optional**  
             
            Filter your response by a category type to see reports for a
            specific category.

            The value for this field can be one of the following:  
              `all`  
             `user`  
             `user_settings`  
             `account`  
             `billing`  
             `im`  
             `recording`  
             `phone_contacts`  
             `webinar`  
             `sub_account`  
             `role`  
             `zoom_rooms`
          example: webinar
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_size: 30
                operation_logs:
                  - action: <string>
                    category_type: <string>
                    operation_detail: <string>
                    operator: <string>
                    time: <dateTime>
                  - action: <string>
                    category_type: <string>
                    operation_detail: <string>
                    operator: <string>
                    time: <dateTime>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/telephone:
    get:
      tags:
        - report > telephone
      summary: Get telephone reports
      description: >-
        The [telephone
        report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports)
        allows you to view who dialed into meetings via phone (Audio
        Conferencing or SIP Connected Audio) and which number they dialed into
        and other details. Use this API to get telephone report for a specified
        period of time.


        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: integer
          description: |-
            Audio types:  
             `1` - Toll-free Call-in &amp; Call-out.  
             `2` - Toll   
             
            `3` - SIP Connected Audio
          example: '1'
        - name: query_date_type
          in: query
          schema:
            type: string
          description: |-
            The type of date to query. 
            * `start_time` &mdash; Query by call start time. 
            * `end_time` &mdash; Query by call end time. 
            * `meeting_start_time` &mdash; Query by meeting start time. 
            * `meeting_end_time` &mdash; Query by meeting end time. 

            This value defaults to `start_time`.
          example: start_time
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the &quot;from&quot; and &quot;to&quot; parameters should only be
            one month as the report includes only one month worth of data at
            once.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: <date>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            The page number of the current page in the returned records. This
            field is **not** available if the `query_date_type` parameter is the
            `meeting_start_time` or `meeting_end_time` value. 


            This field is deprecated. Use the `next_page_token` query parameter
            for pagination.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <date>
                next_page_token: <string>
                page_count: <integer>
                page_size: <integer>
                to: <date>
                total_records: <integer>
                telephony_usage:
                  - call_in_number: <string>
                    country_name: <string>
                    dept: <string>
                    duration: <integer>
                    end_time: <dateTime>
                    host_email: <string>
                    host_id: <string>
                    host_name: <string>
                    meeting_id: <long>
                    meeting_type: <string>
                    phone_number: <string>
                    rate: <number>
                    signaled_number: <string>
                    start_time: <dateTime>
                    total: <number>
                    type: call-in
                    uuid: <string>
                  - call_in_number: <string>
                    country_name: <string>
                    dept: <string>
                    duration: <integer>
                    end_time: <dateTime>
                    host_email: <string>
                    host_id: <string>
                    host_name: <string>
                    meeting_id: <long>
                    meeting_type: <string>
                    phone_number: <string>
                    rate: <number>
                    signaled_number: <string>
                    start_time: <dateTime>
                    total: <number>
                    type: premium call-in
                    uuid: <string>
  /report/upcoming_events:
    get:
      tags:
        - report > upcoming_events
      summary: Get upcoming events report
      description: >-
        Use this API to list upcoming meeting and/or webinar events within a
        specified period of time. The report's time range is limited to one
        month.


        **Prerequisites:** 

        * A Pro or higher plan


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the &quot;from&quot; and &quot;to&quot; parameters should only be
            one month as the report includes only one month worth of data at
            once.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: <date>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: type
          in: query
          schema:
            type: string
          description: |-
            The type of event to query. 
            * `meeting` &mdash; A meeting event. 
            * `webinar` &mdash; A webinar event. 
            * `all` &mdash; Both meeting and webinar events.

            This value defaults to `all`.
          example: all
        - name: group_id
          in: query
          schema:
            type: string
          description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain meetings where the host is a member of the queried group ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: <date>
                next_page_token: <string>
                page_size: 30
                to: <date>
                upcoming_events:
                  - dept: <string>
                    host_id: <string>
                    host_name: <string>
                    id: <string>
                    start_time: <string>
                    topic: <string>
                  - dept: <string>
                    host_id: <string>
                    host_name: <string>
                    id: <string>
                    start_time: <string>
                    topic: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/users/{userId}/meetings:
    get:
      tags:
        - report > users > {userId} > meetings
      summary: Get meeting reports
      description: >-
        Retrieve
        [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting)
        on past meetings and webinars for a specified time period. The time
        range for the report is limited to a month and the month must fall
        within the past six months.


        Meetings and webinars are returned only if they have two or more unique
        participants.    
           
         
        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the &quot;from&quot; and &quot;to&quot; parameters should only be
            one month as the report includes only one month worth of data at
            once.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: <date>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The meeting type to query for: 

            * `past` &mdash; All past meetings. 

            * `pastOne` &mdash; A single past user meeting. 

            * `pastJoined` &mdash; All past meetings the account's users hosted
            or joined.
          example: past
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The user ID or email address of the user. For user-level
            apps, pass the `me` value.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                from: <date>
                meetings:
                  - custom_keys:
                      - key: <string>
                        value: <string>
                      - key: <string>
                        value: <string>
                    duration: <integer>
                    end_time: <dateTime>
                    id: <integer>
                    participants_count: <integer>
                    session_key: <string>
                    source: <string>
                    start_time: <dateTime>
                    topic: <string>
                    total_minutes: <integer>
                    type: 4
                    user_email: <email>
                    user_name: <string>
                    uuid: <string>
                    schedule_time: <string>
                    join_waiting_room_time: <string>
                    join_time: <string>
                    leave_time: <string>
                    host_organization: <string>
                    host_name: <string>
                    has_screen_share: <boolean>
                    has_recording: <boolean>
                    has_chat: <boolean>
                    meeting_encryption_status: 2
                    participants_count_my_account: <integer>
                  - custom_keys:
                      - key: <string>
                        value: <string>
                      - key: <string>
                        value: <string>
                    duration: <integer>
                    end_time: <dateTime>
                    id: <integer>
                    participants_count: <integer>
                    session_key: <string>
                    source: <string>
                    start_time: <dateTime>
                    topic: <string>
                    total_minutes: <integer>
                    type: 1
                    user_email: <email>
                    user_name: <string>
                    uuid: <string>
                    schedule_time: <string>
                    join_waiting_room_time: <string>
                    join_time: <string>
                    leave_time: <string>
                    host_organization: <string>
                    host_name: <string>
                    has_screen_share: <boolean>
                    has_recording: <boolean>
                    has_chat: <boolean>
                    meeting_encryption_status: 2
                    participants_count_my_account: <integer>
                to: <date>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/users:
    get:
      tags:
        - report > users
      summary: Get active/inactive host reports
      description: >-
        Retrieve a host report for a specified period of time within the last
        six months.  

        The report time range is limited to a month. 


        You can specify the type of report and date range using the query
        parameters.  



        * The **Active Hosts** report displays a list of meetings, participants,
        and meeting minutes.

        An **active host** is defined as any user who has hosted at least one
        meeting during the during the month specified in the `from` and `to`
        range.



        * The **Inactive Hosts** report pulls a list of users who were not
        active during a specific period of time.   

        An **inactive host** is defined as any user who has not hosted any
        meetings during the specified period of time for the report. to be
        inactive.  




         
         
         
        **Prerequisites:**  
         
        * Pro or higher plan.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: string
          description: |-
            Active or inactive hosts.  
             `active` - Active hosts.   
             `inactive` - Inactive hosts.
          example: inactive
        - name: from
          in: query
          schema:
            type: string
          description: >-
            (Required) Start date in 'yyyy-mm-dd' format. The date range defined
            by the `from` and `to` parameters should only be one month as the
            report includes only one month worth of data at once.
          example: <date>
        - name: to
          in: query
          schema:
            type: string
          description: (Required) End date.
          example: <date>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: The page number of the current page in the returned records.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: <string>
        - name: group_id
          in: query
          schema:
            type: string
          description: >-
            The group ID. To get a group ID, use the [**List
            groups**](/api-reference/zoom-api/methods#operation/groups) API. 

             **Note:** The API response will only contain users who are members of the queried group ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/participants:
    get:
      tags:
        - report > webinars > {webinarId} > participants
      summary: Get webinar participant reports
      description: >-
        Get a detailed report on each webinar attendee. You can get webinar
        participant reports for the last 6 months. 

         **Prerequisites:** 
        * A Pro or a higher plan with Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: include_fields
          in: query
          schema:
            type: string
          description: >-
            The additional query parameters to include. 

            * `registrant_id` - Include the registrant's ID in the API response.
            The registrant ID is the webinar participant's unique ID.
          example: registrant_id
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the webinar
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_size: 30
                total_records: <integer>
                participants:
                  - customer_key: <string>
                    duration: <integer>
                    failover: <boolean>
                    id: <string>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    name: <string>
                    registrant_id: <string>
                    status: in_waiting_room
                    user_email: pa2SVS.sWdoVD.Z$.QP%b.E/krc/p}yl@aGBRv.rta
                    user_id: <string>
                    participant_user_id: <string>
                  - customer_key: <string>
                    duration: <integer>
                    failover: <boolean>
                    id: <string>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    name: <string>
                    registrant_id: <string>
                    status: in_waiting_room
                    user_email: >-
                      JA87FIm.iMR|i.CVTsc{i.G}Fa`.^@RSAgC6ozL.4.-HOafM.3cFNJWUcPJR.xYgpOpmpzcx.fZ3.Qtsl1nuuUn.FA61y.Ql
                    user_id: <string>
                    participant_user_id: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/polls:
    get:
      tags:
        - report > webinars > {webinarId} > polls
      summary: Get webinar poll reports
      description: >-
        Retrieve a report on past [webinar
        polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the webinar
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <string>
                        polling_id: <string>
                        question: <string>
                start_time: <dateTime>
                uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/qa:
    get:
      tags:
        - report > webinars > {webinarId} > qa
      summary: Get webinar Q&A report
      description: >-
        Retrieve a report on questions asked by participants and answered by
        panelists, co-hosts and hosts from past webinars.   


           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with the Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the webinar
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - user_id: <string>
                    email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                  - user_id: <string>
                    email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                      - answer: <string>
                        question: <string>
                        question_id: <string>
                        create_time: <string>
                        answer_details:
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                          - user_id: <string>
                            name: <string>
                            email: <string>
                            content: <string>
                            create_time: <string>
                            type: default
                start_time: <dateTime>
                uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}/survey:
    get:
      tags:
        - report > webinars > {webinarId} > survey
      summary: Get webinar survey report
      description: >-
        Retrieve a report on past [webinar
        survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with Webinar add-on enabled.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** double-encode the webinar
            UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                webinar_id: <long>
                webinar_uuid: <string>
                start_time: <dateTime>
                survey_id: <string>
                survey_name: <string>
                survey_answers:
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    answer_details:
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
                  - email: <email>
                    name: <string>
                    first_name: <string>
                    last_name: <string>
                    answer_details:
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
                      - question: <string>
                        question_id: <string>
                        answer: <string>
                        date_time: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /report/webinars/{webinarId}:
    get:
      tags:
        - report > webinars > {webinarId}
      summary: Get webinar detail reports
      description: >-
        Retrieve a
        [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting)
        containing past webinar details.    
           
         
        **Prerequisites:**  
         
        * Pro or higher plan with Webinar add-on.


        **Scopes:** `report:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Heavy`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_keys:
                  - key: <string>
                    value: <string>
                  - key: <string>
                    value: <string>
                dept: <string>
                duration: <integer>
                end_time: <dateTime>
                id: <long>
                participants_count: <integer>
                start_time: <dateTime>
                topic: <string>
                total_minutes: <integer>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: <integer>
                user_email: <string>
                user_name: <string>
                uuid: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /sip_phones/{phoneId}:
    delete:
      tags:
        - sip_phones > {phoneId}
      summary: Delete SIP phone
      description: >-
        Use this API to delete a Zoom account's SIP phone. 

         **Prerequisites**: 
        * Currently only supported on Cisco and Avaya PBX systems. 

        * The user must enable **SIP Phone Integration** by contacting the [Zoom
        Sales](https://zoom.us/contactsales) team.


        **Scopes:** `sip_phone:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: phoneId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The SIP phone ID. It can be retrieved from the List SIP
            Phones API.
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - sip_phones > {phoneId}
      summary: Update SIP phone
      description: >-
        Zoom's Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to update information of a specific SIP Phone on a Zoom account.  
           
         
        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * The account owner or account admin must first enable SIP Phone
        Integration by contacting the [Sales](https://zoom.us/contactsales)
        team.  
          

        **Scopes:** `sip_phone:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                authorization_name: <string>
                domain: <string>
                password: <string>
                proxy_server: <string>
                proxy_server2: <string>
                proxy_server3: <string>
                register_server: <string>
                register_server2: <string>
                register_server3: <string>
                user_name: <string>
                voice_mail: <string>
                registration_expire_time: 60
                transport_protocol: UDP
                transport_protocol2: AUTO
                transport_protocol3: UDP
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: phoneId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The SIP phone ID. This can be retrieved from the List SIP
            Phones API.
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /sip_phones:
    get:
      tags:
        - sip_phones
      summary: List SIP phones
      description: >-
        Zoom's Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to list SIP phones on an account.  
           
         
        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * User must enable SIP Phone Integration by contacting the
        [Sales](https://zoom.us/contactsales) team.  
          

        **Scopes:** `sip_phone:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          example: '1'
        - name: search_key
          in: query
          schema:
            type: string
          description: >-
            User name or email address of a user. If this parameter is provided,
            only the SIP phone system integration enabled for that specific user
            will be returned. Otherwise, all SIP phones on an account will be
            returned.
          example: <string>
        - name: page_size
          in: query
          schema:
            type: string
          description: The number of records returned within a single API call.
          example: <integer>
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            The next page token is used to paginate through large result sets. A
            next page token will be returned whenever the set of available
            results exceeds the current page size. The expiration period for
            this token is 15 minutes.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: <integer>
                page_size: <integer>
                phones:
                  - authorization_name: <string>
                    domain: <string>
                    id: <string>
                    password: <string>
                    proxy_server: <string>
                    proxy_server2: <string>
                    proxy_server3: <string>
                    register_server: <string>
                    register_server2: <string>
                    register_server3: <string>
                    registration_expire_time: <integer>
                    transport_protocol: UDP
                    transport_protocol2: UDP
                    transport_protocol3: UDP
                    user_email: <email>
                    user_name: <string>
                    voice_mail: <string>
                  - authorization_name: <string>
                    domain: <string>
                    id: <string>
                    password: <string>
                    proxy_server: <string>
                    proxy_server2: <string>
                    proxy_server3: <string>
                    register_server: <string>
                    register_server2: <string>
                    register_server3: <string>
                    registration_expire_time: <integer>
                    transport_protocol: UDP
                    transport_protocol2: TLS
                    transport_protocol3: UDP
                    user_email: <email>
                    user_name: <string>
                    voice_mail: <string>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - sip_phones
      summary: Enable SIP phone
      description: >-
        Zoom's Phone System Integration (PSI), also referred as SIP phones,
        enables an organization to leverage the Zoom client to complete a
        softphone registration to supported premise based PBX system. End users
        will have the ability to have softphone functionality within a single
        client while maintaining a comparable interface to Zoom Phone. Use this
        API to enable a user to use SIP phone.  
           
         
        **Prerequisites**:

        * Currently only supported on Cisco and Avaya PBX systems. 

        * The account owner or account admin must first enable SIP Phone
        Integration by contacting the [Sales](https://zoom.us/contactsales)
        team.  
          

        **Scopes:** `sip_phone:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                authorization_name: <string>
                domain: <string>
                password: <string>
                proxy_server: <string>
                register_server: <string>
                user_email: <email>
                user_name: <string>
                voice_mail: <string>
                proxy_server2: <string>
                proxy_server3: <string>
                register_server2: <string>
                register_server3: <string>
                registration_expire_time: 60
                transport_protocol: TLS
                transport_protocol2: TLS
                transport_protocol3: TCP
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                authorization_name: <string>
                domain: <string>
                password: <string>
                proxy_server: <string>
                proxy_server2: <string>
                proxy_server3: <string>
                register_server: <string>
                register_server2: <string>
                register_server3: <string>
                registration_expire_time: 60
                transport_protocol: AUTO
                transport_protocol2: TLS
                transport_protocol3: UDP
                user_email: <email>
                user_name: <string>
                voice_mail: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /tsp:
    get:
      tags:
        - tsp
      summary: Get account's TSP information
      description: >-
        Get information on Telephony Service Provider on an account level.  
           
         
        **Prerequisites:**  
         
        * A Pro or a higher plan.


        **Scopes:** `tsp:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dial_in_number_unrestricted: <boolean>
                dial_in_numbers:
                  - code: <string>
                    number: <string>
                    type: <string>
                  - code: <string>
                    number: <string>
                    type: <string>
                enable: <boolean>
                master_account_setting_extended: <boolean>
                modify_credential_forbidden: <boolean>
                tsp_bridge: EU_TSP_TB
                tsp_enabled: <boolean>
                tsp_provider: <string>
    patch:
      tags:
        - tsp
      summary: Update account's TSP information
      description: >-
        Update information of the Telephony Service Provider set up on an
        account.  
         
        **Prerequisites**:  
         
        TSP account option should be enabled.  
         


        **Scopes:** `tsp:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dial_in_number_unrestricted: <boolean>
                enable: <boolean>
                master_account_setting_extended: <boolean>
                modify_credential_forbidden: <boolean>
                tsp_bridge: US_TSP_TB
                tsp_enabled: <boolean>
                tsp_provider: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /tracking_fields/{fieldId}:
    get:
      tags:
        - tracking_fields > {fieldId}
      summary: Get a tracking field
      description: >-
        Use this API to return information about a [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: fieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Tracking Field ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                field: <string>
                recommended_values:
                  - <string>
                  - <string>
                required: <boolean>
                visible: <boolean>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - tracking_fields > {fieldId}
      summary: Delete a tracking field
      description: >-
        Use this API to delete a [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: fieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Tracking Field ID
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - tracking_fields > {fieldId}
      summary: Update a tracking field
      description: >-
        Use this API to update a [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                field: <string>
                recommended_values:
                  - <string>
                  - <string>
                required: <boolean>
                visible: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: fieldId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The Tracking Field ID
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /tracking_fields:
    get:
      tags:
        - tracking_fields
      summary: List tracking fields
      description: >-
        Use this API to list all the [tracking
        fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
        on your Zoom account. Tracking fields let you analyze usage by various
        fields within an organization. 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: <integer>
                tracking_fields:
                  - id: <string>
                    field: <string>
                    recommended_values:
                      - <string>
                      - <string>
                    required: <boolean>
                    visible: <boolean>
                  - id: <string>
                    field: <string>
                    recommended_values:
                      - <string>
                      - <string>
                    required: <boolean>
                    visible: <boolean>
    post:
      tags:
        - tracking_fields
      summary: Create a tracking field
      description: >-
        Use this API to create a new [tracking
        field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields).
        Tracking fields let you analyze usage by various fields within an
        organization. When scheduling a meeting, tracking fields will be
        included in the meeting options. 


        **Prerequisites:** 

        * A Business, Education, API or higher plan.


        **Scopes:** `tracking_fields:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                field: <string>
                recommended_values:
                  - <string>
                  - <string>
                required: <boolean>
                visible: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                field: <string>
                recommended_values:
                  - <string>
                  - <string>
                required: <boolean>
                visible: <boolean>
  /live_webinars/{webinarId}/chat/messages/{messageId}:
    delete:
      tags:
        - live_webinars > {webinarId} > chat > messages > {messageId}
      summary: Delete a live webinar message
      description: >-
        Deletes a message in a live webinar based on ID. 


        **Prerequisites:** 

        * Have Zoom enable the DLP for the in-meeting chat feature to use this
        API.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: file_ids
          in: query
          schema:
            type: string
          description: >-
            The live webinar chat file's universally unique identifier (UUID),
            in base64-encoded format. Separate multiple values with commas.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The live webinar chat message's unique identifier (UUID),
            in base64-encoded format.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/absentees:
    get:
      tags:
        - past_webinars > {webinarId} > absentees
      summary: Get webinar absentees
      description: >-
        List absentees of a webinar.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API will return a response for
            the latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                registrants:
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: ''
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: More than 6 months
                    role_in_purchase_process: Not involved
                    state: <string>
                    status: approved
                    zip: <string>
                    create_time: <dateTime>
                    join_url: <string>
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 101-250
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: 1-3 months
                    role_in_purchase_process: Decision Maker
                    state: <string>
                    status: denied
                    zip: <string>
                    create_time: <dateTime>
                    join_url: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/instances:
    get:
      tags:
        - past_webinars > {webinarId} > instances
      summary: List past webinar instances
      description: >-
        List past webinar instances.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                webinars:
                  - start_time: <dateTime>
                    uuid: <string>
                  - start_time: <dateTime>
                    uuid: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/participants:
    get:
      tags:
        - past_webinars > {webinarId} > participants
      summary: List webinar participants
      description: >-
        Retrieve a list of all the participants who attended a webinar hosted in
        the past. 


        **Prerequisites:** 

        * A Pro or higher plan with a webinar add-on.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_size: 30
                participants:
                  - id: <string>
                    name: <string>
                    user_id: <string>
                    registrant_id: <string>
                    user_email: <email>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    duration: <integer>
                    failover: <boolean>
                    status: in_waiting_room
                  - id: <string>
                    name: <string>
                    user_id: <string>
                    registrant_id: <string>
                    user_email: <email>
                    join_time: <dateTime>
                    leave_time: <dateTime>
                    duration: <integer>
                    failover: <boolean>
                    status: in_meeting
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/polls:
    get:
      tags:
        - past_webinars > {webinarId} > polls
      summary: List past webinar poll results
      description: >-
        The polling feature for webinar lets you create single-choice or
        multiple-choice polling questions for your webinars. This API endpoint
        retrieves the results for webinar polls of a specific webinar.


        **Prerequisites:**  
         
        * [Webinar license](https://zoom.us/webinar)  
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                      - answer: <string>
                        date_time: <dateTime>
                        polling_id: <string>
                        question: <string>
                start_time: <dateTime>
                uuid: <string>
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /past_webinars/{webinarId}/qa:
    get:
      tags:
        - past_webinars > {webinarId} > qa
      summary: List Q&As of a past webinar
      description: >-
        List the Q&amp;A of a specific past webinar. 


        The [question &amp; answer
        (Q&amp;A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
        feature for webinars lets attendees ask questions during the webinar and
        for the panelists, co-hosts and host to answer their questions. 


        **Prerequisites**  
         
        * [Webinar license](https://zoom.us/webinar)  
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The webinar's ID or universally unique ID (UUID). 

            * If you provide a webinar ID, the API returns a response for the
            latest webinar instance. 

            * If you provide a webinar UUID that begins with a `/` character or
            contains the `//` characters, you **must** [double
            encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
            the webinar UUID before making an API request.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                questions:
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                      - answer: <string>
                        question: <string>
                  - email: <string>
                    name: <string>
                    question_details:
                      - answer: <string>
                        question: <string>
                      - answer: <string>
                        question: <string>
                start_time: <dateTime>
                uuid: <string>
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/batch_registrants:
    post:
      tags:
        - webinars > {webinarId} > batch_registrants
      summary: Perform batch registration
      description: >-
        Register up to 30 registrants at once for a scheduled webinar that
        requires
        [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration).   
         

        **Prerequisites:**  
         
        * The webinar host must be a licensed user.

        * The webinar should be type `5`, a scheduled webinar. Other types of
        webinars are not supported by this API.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `HEAVY`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                auto_approve: <boolean>
                registrants:
                  - email: <email>
                    first_name: <string>
                    last_name: <string>
                  - email: <email>
                    first_name: <string>
                    last_name: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's unique identifier.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                registrants:
                  - email: <string>
                    join_url: <string>
                    registrant_id: <string>
                  - email: <string>
                    join_url: <string>
                    registrant_id: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/branding/name_tags/{nameTagId}:
    patch:
      tags:
        - webinars > {webinarId} > branding > name_tags > {nameTagId}
      summary: Update a webinar's branding name tag
      description: >-
        Use this API to update a webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        name tag. **Prerequisites:** 

        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                text_color: <string>
                accent_color: <string>
                background_color: <string>
                is_default: false
                set_default_for_all_panelists: true
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: nameTagId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The name tag's ID.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/branding/name_tags:
    post:
      tags:
        - webinars > {webinarId} > branding > name_tags
      summary: Create a webinar's branding name tag
      description: >-
        Use this API to create a webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        name tag. There's a limit of 20 name tags per webinar.
        **Prerequisites:** 

        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                accent_color: <string>
                background_color: <string>
                name: <string>
                text_color: <string>
                is_default: false
                set_default_for_all_panelists: true
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                text_color: <string>
                accent_color: <string>
                background_color: <string>
                is_default: <boolean>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > branding > name_tags
      summary: Delete a webinar's branding name tag
      description: >-
        Use this API to delete a webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        name tag. 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: name_tag_ids
          in: query
          schema:
            type: string
          description: A comma-separated list of the name tag IDs to delete.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/branding/virtual_backgrounds:
    post:
      tags:
        - webinars > {webinarId} > branding > virtual_backgrounds
      summary: Upload a webinar's branding Virtual Background
      description: >-
        Use this API to upload a webinar's session branding [Virtual
        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background).
        Hosts and panelists can select and use these Virtual Backgrounds during
        the webinar. Branding Virtual Background files have the following
        restrictions: 

        * A webinar cannot exceed more than 10 Virtual Background files. 

        * You can only upload image files that are in JPG/JPEG, GIF or PNG
        format. 

        * The Virtual Background file size cannot exceed 15 megabytes (MB). 

         **Prerequisites:** 
        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: >-
                    (Required) The Virtual Background's file path, in binary
                    format.
                  example: <string>
                default:
                  type: boolean
                  description: Whether set the file as the default Virtual Background file.
                  example: 'false'
                set_default_for_all_panelists:
                  type: boolean
                  description: >-
                    Whether to set the Virtual Background file as the new
                    default for all panelists. This includes panelists not
                    currently assigned a default Virtual Background.
                  example: 'true'
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                is_default: <boolean>
                size: <integer>
                type: image
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > branding > virtual_backgrounds
      summary: Delete a webinar's branding Virtual Backgrounds
      description: >-
        Use this API to delete a webinar's session branding [Virtual
        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: ids
          in: query
          schema:
            type: string
          description: A comma-separated list of the Virtual Background file IDs to delete.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars > {webinarId} > branding > virtual_backgrounds
      summary: Set webinar's default branding Virtual Background
      description: >-
        Use this API to set a webinar's default session branding [Virtual
        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: The Virtual Background file ID to update.
          example: <string>
        - name: set_default_for_all_panelists
          in: query
          schema:
            type: string
          description: >-
            Whether to set the Virtual Background file as the new default for
            all panelists. This includes panelists not currently assigned a
            default Virtual Background.
          example: <boolean>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/branding/wallpaper:
    post:
      tags:
        - webinars > {webinarId} > branding > wallpaper
      summary: Upload a webinar's branding wallpaper
      description: >-
        Use this API to upload a webinar's session branding wallpaper file.
        Webinar branding wallpaper files have the following requirements: 

        * A webinar can only have one wallpaper file. 

        * You can only upload image files that are in JPG/JPEG, GIF, or PNG
        format. 

        * Image files must be 16:9 ratio. The recommended image size is 1920 x
        1080 pixels (px). 

        * The wallpaper file size cannot exceed 15 megabytes (MB). 

         **Prerequisites:** 
        *  The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: (Required) The wallpaper's file path, in binary format.
                  example: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                size: <integer>
                type: image
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > branding > wallpaper
      summary: Delete a webinar's branding wallpaper
      description: >-
        Use this API to delete a webinar's session branding wallpaper file. 

         **Prerequisites:** 
        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/branding:
    get:
      tags:
        - webinars > {webinarId} > branding
      summary: Get webinar's session branding
      description: >-
        Use this API to get the webinar's [Session
        Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
        information. Session branding lets hosts visually customize a webinar by
        setting a webinar wallpaper that displays behind video tiles. Session
        branding also lets hosts set the Virtual Background for and apply name
        tags to hosts, alternative hosts, panelists, interpreters, and
        speakers. 

         **Prerequisites:** 
        * A Pro or higher plan with the Webinar add-on. 

        * The **Webinar Session Branding** setting enabled.


        **Scopes:** `webinar:read`,`webinar:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                wallpaper:
                  id: <string>
                virtual_backgrounds:
                  - id: <string>
                    name: <string>
                    is_default: <boolean>
                  - id: <string>
                    name: <string>
                    is_default: <boolean>
                name_tags:
                  - id: <string>
                    name: <string>
                    text_color: <string>
                    accent_color: <string>
                    background_color: <string>
                    is_default: <boolean>
                  - id: <string>
                    name: <string>
                    text_color: <string>
                    accent_color: <string>
                    background_color: <string>
                    is_default: <boolean>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/invite_links:
    post:
      tags:
        - webinars > {webinarId} > invite_links
      summary: Create webinar's invite links
      description: >-
        Create a batch of invitation links for a webinar.


        **Prerequisites:**


        * Business, Education or API Plan with the Webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                attendees:
                  - name: <string>
                ttl: 7200
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attendees:
                  - join_url: <string>
                    name: <string>
                  - join_url: <string>
                    name: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/jointoken/live_streaming:
    get:
      tags:
        - webinars > {webinarId} > jointoken > live_streaming
      summary: Get a webinar's join token for live streaming
      description: >-
        Use this API to get a webinar's archive token to allow live streaming.
        The join token allows a recording bot implemented using Zoom meeting SDK
        to connect to a Zoom meeting &quot;hosted by the issuer of the
        token&quot;, and can call the streaming method automatically. It
        supports both regular live streaming, and raw streaming. 

         **Prerequisites:** 
        * A Pro or higher plan with a Webinar Add-on. 

        * The **Allow livestreaming of webinars** user setting enabled in the
        Zoom web portal.


        **Scopes:**
        `webinar_token:read:admin:live_streaming`,`webinar_token:read:live_streaming`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                expire_in: 120
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/jointoken/local_archiving:
    get:
      tags:
        - webinars > {webinarId} > jointoken > local_archiving
      summary: Get a webinar's archive token for local archiving
      description: >-
        Use this API to get a webinar's archive token to allow local archiving.
        The archive token allows a meeting SDK app or bot to get archive
        permission to access the webinar's raw audio and video media stream in
        real-time. 

         **Prerequisites:** 
        * A Pro or higher plan with a Webinar Add-on. 

        * The **Archive meetings and webinars** account setting enabled in the
        Zoom web portal.


        **Scopes:** `webinar_token:read:admin:local_archiving`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                expire_in: 120
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/jointoken/local_recording:
    get:
      tags:
        - webinars > {webinarId} > jointoken > local_recording
      summary: Get a webinar's join token for local recording
      description: >-
        Use this API to get a webinar's join token to allow for local recording.
        The join token lets a recording bot implemented using Zoom Meeting SDK
        to connect to a Zoom webinar. The recording bot can then automatically
        start locally recording. This supports both regular and raw local
        recording types. 

         **Prerequisites:** 
        * A Pro or higher plan with a Webinar Add-on. 

        * The **Local recording** user setting enabled in the Zoom web portal.


        **Scopes:**
        `webinar_token:read:admin:local_recording`,`webinar_token:read:local_recording`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                expire_in: 120
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/livestream/status:
    patch:
      tags:
        - webinars > {webinarId} > livestream > status
      summary: Update live stream status
      description: >-
        Let users [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform. Update the status of a webinar's live stream.  
           
         
        **Prerequisites:**  
         
        * Pro or higher plan with a Webinar Add-on.  
         
        * Live streaming details must be
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: stop
                settings:
                  active_speaker_name: <boolean>
                  display_name: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/livestream:
    get:
      tags:
        - webinars > {webinarId} > livestream
      summary: Get live stream details
      description: >-
        Get a webinar's live stream configuration details, such as Stream URL,
        Stream Key and Page URL.


        Zoom allows users to [live stream a
        webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
        to a custom platform.

         
        **Prerequisites:**  
         
        * Pro or higher plan with the webinar add-on.  
         
        * Live streaming details must have been
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.  





        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's unique ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                page_url: <string>
                stream_key: <string>
                stream_url: <string>
                resolution: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars > {webinarId} > livestream
      summary: Update a live stream
      description: >-
        Update a webinar's live stream information. 
           
         
        **Prerequisites:**  
         
        * Pro or higher plan with the webinar add-on.  
         
        * Live streaming details must be
        [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
        for the webinar.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                page_url: <uri>
                stream_key: <string>
                stream_url: <string>
                resolution: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/panelists/{panelistId}:
    delete:
      tags:
        - webinars > {webinarId} > panelists > {panelistId}
      summary: Remove a panelist
      description: >-
        [Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb)
        a single panelist from a webinar.  
          Retrieve the `panelistId` by calling **List Panelists API**.  
           
         
        **Prerequisites:**  
         
        * Pro or a higher plan with the [webinar
        add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: panelistId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The panelist's ID or email.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/panelists:
    get:
      tags:
        - webinars > {webinarId} > panelists
      summary: List panelists
      description: >-
        List all of a webinar's panelists.  


        Webinar panelists can view and send video, screen share, annotate, and
        do much more compared to webinar attendees. 



        **Prerequisites:**  
         
        * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                panelists:
                  - id: <string>
                    email: <email>
                    name: <string>
                    join_url: <string>
                    virtual_background_id: <string>
                    name_tag_id: <string>
                    name_tag_name: <string>
                    name_tag_pronouns: <string>
                    name_tag_description: <string>
                  - id: <string>
                    email: <email>
                    name: <string>
                    join_url: <string>
                    virtual_background_id: <string>
                    name_tag_id: <string>
                    name_tag_name: <string>
                    name_tag_pronouns: <string>
                    name_tag_description: <string>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - webinars > {webinarId} > panelists
      summary: Add panelists
      description: >-
        Panelists in a webinar can view and send video, screen share, annotate,
        and do much more compared to attendees in a webinar.  
         [Add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.  
           
         
        **Prerequisites:**

        * Pro or a higher plan with the [Webinar
        Add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                panelists:
                  - email: <email>
                    name: <string>
                    virtual_background_id: <string>
                    name_tag_id: <string>
                    name_tag_name: <string>
                    name_tag_pronouns: <string>
                    name_tag_description: <string>
                  - email: <email>
                    name: <string>
                    virtual_background_id: <string>
                    name_tag_id: <string>
                    name_tag_name: <string>
                    name_tag_pronouns: <string>
                    name_tag_description: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                updated_at: <dateTime>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > panelists
      summary: Remove webinar panelists
      description: >-
        Remove all the panelists from a webinar.  
         
        **Prerequisites:**  
         
        * Pro or a higher plan with the [webinar
        add-on](https://zoom.us/webinar).  
          

        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/polls/{pollId}:
    get:
      tags:
        - webinars > {webinarId} > polls > {pollId}
      summary: Get a webinar poll
      description: >-
        Get a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        details.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                status: notstart
                anonymous: false
                poll_type: 3
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: multiple
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: matching
                title: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - webinars > {webinarId} > polls > {pollId}
      summary: Update a webinar poll
      description: >-
        Update a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                anonymous: false
                poll_type: 2
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: rank_order
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: fill_in_the_blank
                title: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > polls > {pollId}
      summary: Delete a webinar poll
      description: >-
        Delete a webinar's
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: pollId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The poll ID
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/polls:
    get:
      tags:
        - webinars > {webinarId} > polls
      summary: 'List a webinar''s polls '
      description: >-
        List all the
        [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        of a Webinar.  
           
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: anonymous
          in: query
          schema:
            type: string
          description: >-
            Whether to query for polls with the **Anonymous** option enabled: 

            * `true` &mdash; Query for polls with the **Anonymous** option
            enabled. 

            * `false` &mdash; Do not query for polls with the **Anonymous**
            option enabled.
          example: <boolean>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                polls:
                  - id: <string>
                    status: ended
                    anonymous: false
                    poll_type: 2
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: rank_order
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: fill_in_the_blank
                    title: <string>
                  - id: <string>
                    status: ended
                    anonymous: false
                    poll_type: 1
                    questions:
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: multiple
                      - answer_max_character: <integer>
                        answer_min_character: <integer>
                        answer_required: false
                        answers:
                          - <string>
                          - <string>
                        case_sensitive: false
                        name: <string>
                        prompts:
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                          - prompt_question: <string>
                            prompt_right_answers:
                              - <string>
                              - <string>
                        rating_max_label: <string>
                        rating_max_value: <integer>
                        rating_min_label: <string>
                        rating_min_value: <integer>
                        right_answers:
                          - <string>
                        show_as_dropdown: false
                        type: rank_order
                    title: <string>
                total_records: <integer>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - webinars > {webinarId} > polls
      summary: Create a webinar's poll
      description: >-
        Create a
        [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
        for a webinar.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                anonymous: false
                poll_type: 1
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: short_answer
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: rank_order
                title: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                status: sharing
                anonymous: false
                poll_type: 3
                questions:
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: long_answer
                  - answer_max_character: <integer>
                    answer_min_character: <integer>
                    answer_required: false
                    answers:
                      - <string>
                      - <string>
                    case_sensitive: false
                    name: <string>
                    prompts:
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                      - prompt_question: <string>
                        prompt_right_answers:
                          - <string>
                          - <string>
                    rating_max_label: <string>
                    rating_max_value: <integer>
                    rating_min_label: <string>
                    rating_min_value: <integer>
                    right_answers:
                      - <string>
                    show_as_dropdown: false
                    type: matching
                title: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants/questions:
    get:
      tags:
        - webinars > {webinarId} > registrants > questions
      summary: List registration questions
      description: >-
        List registration questions and fields that are to be answered by users
        while registering for a webinar. 

         Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  
          
        **Prerequisites:**  
          
        * Pro or higher plan with the webinar add-on.



        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_questions:
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single_dropdown
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single_radio
                questions:
                  - field_name: country
                    required: <boolean>
                  - field_name: state
                    required: <boolean>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars > {webinarId} > registrants > questions
      summary: Update registration questions
      description: >-
        Update registration questions and fields of a scheduled webinar for
        users to answer during webinar registration. Scheduling a [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form with fields and
        questions before they can receive the link to join the webinar.  
           
         
        **Prerequisites:**  
           
        * Pro or higher plan with a Webinar Add-on.

        * Registration option for Webinar should be set as required to use this
        API. 



        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_questions:
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: multiple
                  - answers:
                      - <string>
                      - <string>
                    required: <boolean>
                    title: <string>
                    type: single_radio
                questions:
                  - field_name: last_name
                    required: <boolean>
                  - field_name: last_name
                    required: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants/status:
    put:
      tags:
        - webinars > {webinarId} > registrants > status
      summary: Update registrant's status
      description: >-
        Update webinar registrants' registration status. You can approve or deny
        a registrant, or revoke a registrant's approval. 


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: deny
                registrants:
                  - email: <email>
                    id: <string>
                  - email: <email>
                    id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants/{registrantId}:
    get:
      tags:
        - webinars > {webinarId} > registrants > {registrantId}
      summary: Get a webinar registrant
      description: >-
        Zoom users with a [webinar plan](https://zoom.us/webinar) have access to
        creating and managing webinars. The webinar feature lets a host
        broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a
        [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the webinar.  
         Use this API to get details on a specific user who has registered for the webinar.  
           
         
        **Prerequisites:**  
         
        * The account must have a webinar plan.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The registrant ID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                email: <email>
                first_name: <string>
                id: <string>
                address: <string>
                city: <string>
                comments: <string>
                country: <string>
                custom_questions:
                  - title: <string>
                    value: <string>
                  - title: <string>
                    value: <string>
                industry: <string>
                job_title: <string>
                last_name: <string>
                no_of_employees: 1-20
                org: <string>
                phone: <string>
                purchasing_time_frame: ''
                role_in_purchase_process: Not involved
                state: <string>
                status: denied
                zip: <string>
                language: de-DE
                create_time: <dateTime>
                join_url: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > registrants > {registrantId}
      summary: Delete a webinar registrant
      description: >-
        Delete a webinar registrant.  
           
         


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The webinar occurrence ID.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar ID.
          example: <integer>
        - name: registrantId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The registrant ID.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/registrants:
    get:
      tags:
        - webinars > {webinarId} > registrants
      summary: List webinar registrants
      description: >-
        List all users that have registered for a given webinar. Zoom users with
        a [webinar plan](https://zoom.us/webinar) have access to creating and
        managing webinars. The webinar functionality lets a host broadcast a
        Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the webinar.  



        **Prerequisites**

        * Pro or higher plan with a Webinar Add-on.  
         


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: status
          in: query
          schema:
            type: string
          description: |-
            Query by the registrant's status. 
            * `pending` - The registration is pending. 
            * `approved` - The registrant is approved. 
            * `denied` - The registration is denied.
          example: approved
        - name: tracking_source_id
          in: query
          schema:
            type: string
          description: >-
            The tracking source ID for the registrants. Useful if you share the
            webinar registration page in multiple locations. See [Creating
            source tracking links for webinar
            registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration)
            for details.
          example: <string>
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            **Deprecated** This field will be deprecated. We will no longer
            support this field in a future release. Instead, use the
            `next_page_token` for pagination.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                registrants:
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 51-100
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: No timeframe
                    role_in_purchase_process: Influencer
                    state: <string>
                    status: approved
                    zip: <string>
                    create_time: <dateTime>
                    join_url: <string>
                  - email: <email>
                    first_name: <string>
                    id: <string>
                    address: <string>
                    city: <string>
                    comments: <string>
                    country: <string>
                    custom_questions:
                      - title: <string>
                        value: <string>
                      - title: <string>
                        value: <string>
                    industry: <string>
                    job_title: <string>
                    last_name: <string>
                    no_of_employees: 5,001-10,000
                    org: <string>
                    phone: <string>
                    purchasing_time_frame: No timeframe
                    role_in_purchase_process: Influencer
                    state: <string>
                    status: approved
                    zip: <string>
                    create_time: <dateTime>
                    join_url: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    post:
      tags:
        - webinars > {webinarId} > registrants
      summary: Add a webinar registrant
      description: >-
        Create and submit a user's registration for a webinar. Zoom users with a
        [Webinar plan](https://zoom.us/webinar) have access to creating and
        managing webinars. Webinars allow hosts to broadcast a Zoom meeting to
        up to 10,000 attendees. Scheduling a [webinar with
        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
        requires your registrants to complete a brief form before receiving the
        link to join the webinar. 


        **Prerequisites:** 

        * A Pro or higher plan with the Webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: <email>
                first_name: <string>
                last_name: <string>
                address: <string>
                city: <string>
                state: <string>
                zip: <string>
                country: <string>
                phone: <string>
                comments: <string>
                custom_questions:
                  - title: <string>
                    value: <string>
                  - title: <string>
                    value: <string>
                industry: <string>
                job_title: <string>
                no_of_employees: ''
                org: <string>
                purchasing_time_frame: 1-3 months
                role_in_purchase_process: Not involved
                language: jp-JP
                source_id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_ids
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of webinar occurrence IDs. Get this value
            with the [Get a
            webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar)
            API. Make sure the `registration_type` is 3 if updating multiple
            occurrences with this API.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <long>
                join_url: <string>
                registrant_id: <string>
                start_time: <dateTime>
                topic: <string>
                occurrences:
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: <string>
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '429':
          description: Too Many Requests
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/sip_dialing:
    post:
      tags:
        - webinars > {webinarId} > sip_dialing
      summary: Get a webinar SIP URI with Passcode
      description: >-
        Get a webinar's SIP URI. The URI consists of the webinar ID, an optional
        user-supplied passcode, and participant identifier code. The API return
        data also includes additional fields to indicate whether the API caller
        has a valid Cloud Room Connector subscription, the participant
        identifier code from the URI, and the SIP URI validity period in
        seconds. 


        **Scopes:**
        `webinar:write:admin:sip_dialing`,`webinar:write:sip_dialing`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                passcode: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: |-
            (Required) The webinar's ID. 

             When storing this value in your database, store it as a long format integer and **not** an integer. Webinar IDs can exceed 10 digits.
          example: <long>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sip_dialing: <string>
                paid_crc_plan_participant: <boolean>
                participant_identifier_code: <string>
                expire_in: <long>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/status:
    put:
      tags:
        - webinars > {webinarId} > status
      summary: Update webinar status
      description: >-
        Update a webinar's status. Use this API to end an ongoing webinar.  
           
         
        **Prerequisites:**  
         
        * The account must hold a valid [Webinar plan](https://zoom.us/webinar).


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                action: end
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/survey:
    get:
      tags:
        - webinars > {webinarId} > survey
      summary: Get a webinar survey
      description: >-
        Return information about a [webinar
        survey](https://support.zoom.us/hc/en-us/articles/360048745651). 

         **Prerequisites:** 
        * A Pro or higher plan with the Webinar add-on. 

        * The [**Webinar
        Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
        feature enabled in the host's account.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_survey:
                  title: <string>
                  anonymous: false
                  numbered_questions: false
                  show_question_type: false
                  feedback: <string>
                  questions:
                    - name: <string>
                      type: multiple
                      answer_required: false
                      show_as_dropdown: false
                      answers:
                        - <string>
                        - <string>
                      prompts:
                        - prompt_question: <string>
                        - prompt_question: <string>
                      answer_min_character: <integer>
                      answer_max_character: <integer>
                      rating_min_value: <integer>
                      rating_max_value: <integer>
                      rating_min_label: <string>
                      rating_max_label: <string>
                show_in_the_browser: true
                show_in_the_follow_up_email: false
                third_party_survey: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId} > survey
      summary: Delete a webinar survey
      description: >-
        Use this API to delete a [webinar
        survey](https://support.zoom.us/hc/en-us/articles/360048745651). 

         **Prerequisites:** 
        * A Pro or higher plan with the Webinar Add-on. 

        * The [**Webinar
        Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
        feature enabled in the host's account.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars > {webinarId} > survey
      summary: Update a webinar survey
      description: >-
        Update a [webinar
        survey](https://support.zoom.us/hc/en-us/articles/360048745651). 
        **Prerequisites:** * A Pro or higher plan with the Webinar add-on. *
        Enable the [**Webinar
        Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
        feature in the host's account.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_survey:
                  title: <string>
                  anonymous: false
                  numbered_questions: false
                  show_question_type: false
                  feedback: <string>
                  questions:
                    - name: <string>
                      type: matching
                      answer_required: false
                      show_as_dropdown: false
                      answers:
                        - <string>
                        - <string>
                      prompts:
                        - prompt_question: <string>
                        - prompt_question: <string>
                      answer_min_character: <integer>
                      answer_max_character: <integer>
                      rating_min_value: <integer>
                      rating_max_value: <integer>
                      rating_min_label: <string>
                      rating_max_label: <string>
                show_in_the_browser: true
                show_in_the_follow_up_email: false
                third_party_survey: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/token:
    get:
      tags:
        - webinars > {webinarId} > token
      summary: Get webinar's token
      description: >-
        Use this API to get a webinar's [closed caption token (caption
        URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service).
        This token lets you use a third-party service to stream text to their
        closed captioning software to the Zoom webinar. 


        **Prerequisites:** 

        * A Pro or higher plan with the Webinar add-on. 

        * The **Closed captioning** setting enabled in the Zoom web portal. 

        * 

        * The **Allow use of caption API Token to integrate with 3rd-party
        Closed Captioning services** setting enabled.


        **Scopes:** `webinar:read`,`webinar:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: type
          in: query
          schema:
            type: string
          description: >-
            The webinar token type: 

            * `closed_caption_token` &mdash; The third-party closed caption API
            token. 


            This defaults to `closed_caption_token`.
          example: closed_caption_token
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /webinars/{webinarId}/tracking_sources:
    get:
      tags:
        - webinars > {webinarId} > tracking_sources
      summary: Get webinar tracking sources
      description: >-
        [Webinar Registration Tracking
        Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking)
        allow you to see where your registrants are coming from if you share the
        webinar registration page in multiple platforms. You can then use the
        source tracking to see the number of registrants generated from each
        platform.  
          Use this API to list information on all the tracking sources of a Webinar.  
         
        **Prerequisites**:  
         
        * [Webinar license](https://zoom.us/webinar).

        * Registration must be required for the Webinar.



        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `MEDIUM`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_records: <integer>
                tracking_sources:
                  - id: <string>
                    registration_count: <integer>
                    source_name: <string>
                    tracking_url: <string>
                    visitor_count: <integer>
                  - id: <string>
                    registration_count: <integer>
                    source_name: <string>
                    tracking_url: <string>
                    visitor_count: <integer>
  /webinars/{webinarId}:
    get:
      tags:
        - webinars > {webinarId}
      summary: Get a webinar
      description: >-
        Get details for a scheduled Zoom Webinar.
          
           
         
        **Prerequisites:**

        * Pro or higher plan with a Webinar add-on.


        **Scopes:** `webinar:read:admin`,`webinar:read`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Unique identifier for an occurrence of a recurring webinar.
            [Recurring
            webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
            can have a maximum of 50 occurrences. When you create a recurring
            Webinar using [**Create a
            webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate)
            API, you can retrieve the Occurrence ID from the response of the API
            call.
          example: <string>
        - name: show_previous_occurrences
          in: query
          schema:
            type: string
          description: >-
            Set the value of this field to `true` if you would like to view
            Webinar details of all previous occurrences of a recurring Webinar.
          example: <boolean>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID or universally unique ID (UUID).
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                host_email: <email>
                host_id: <string>
                id: <long>
                uuid: <string>
                agenda: <string>
                created_at: <dateTime>
                duration: <integer>
                join_url: <string>
                occurrences:
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: available
                  - duration: <integer>
                    occurrence_id: <string>
                    start_time: <dateTime>
                    status: available
                password: <string>
                encrypted_passcode: <string>
                h323_passcode: <string>
                recurrence:
                  type: 3
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: <integer>
                  monthly_week: 2
                  monthly_week_day: 7
                  repeat_interval: <integer>
                  weekly_days: <string>
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  attendees_and_panelists_reminder_email_notification:
                    enable: <boolean>
                    type: 4
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  close_registration: <boolean>
                  contact_email: <string>
                  contact_name: <string>
                  email_language: <string>
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  follow_up_absentees_email_notification:
                    enable: <boolean>
                    type: 4
                  follow_up_attendees_email_notification:
                    enable: <boolean>
                    type: 6
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  hd_video: false
                  hd_video_for_attendees: false
                  host_video: <boolean>
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  panelist_authentication: <boolean>
                  meeting_authentication: <boolean>
                  add_watermark: <boolean>
                  add_audio_watermark: <boolean>
                  notify_registrants: <boolean>
                  on_demand: false
                  panelists_invitation_email_notification: <boolean>
                  panelists_video: <boolean>
                  post_webinar_survey: <boolean>
                  practice_session: false
                  question_and_answer:
                    allow_submit_questions: <boolean>
                    allow_anonymous_questions: <boolean>
                    answer_questions: all
                    attendees_can_comment: <boolean>
                    attendees_can_upvote: <boolean>
                    allow_auto_reply: <boolean>
                    auto_reply_text: <string>
                    enable: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registrants_restrict_number: 0
                  registration_type: 1
                  send_1080p_video_to_attendees: false
                  show_share_button: <boolean>
                  survey_url: <string>
                  enable_session_branding: <boolean>
                start_time: <dateTime>
                start_url: <string>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: 5
                is_simulive: <boolean>
                record_file_id: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    delete:
      tags:
        - webinars > {webinarId}
      summary: Delete a webinar
      description: >-
        Delete a webinar. 



        **Prerequisites:**  
         
        * Pro or higher plan with the webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      security:
        - oauth2Auth: []
      parameters:
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: The meeting or webinar occurrence ID.
          example: <string>
        - name: cancel_webinar_reminder
          in: query
          schema:
            type: string
          description: >-
            `true` - Notify panelists and registrants about the webinar
            cancellation via email. 


            `false` - Do not send any email notification to webinar registrants
            and panelists. 


            The default value of this field is `false`.
          example: <boolean>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - webinars > {webinarId}
      summary: Update a webinar
      description: >-
        Make updates to a scheduled webinar. 


        **100 requests per day**. The rate limit is applied to the `userId` of
        the **webinar host** used to make the request. 


        **Prerequisites** 

        * A Pro or higher plan with a webinar add-on.


        **Scopes:** `webinar:write`,`webinar:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `LIGHT`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                agenda: <string>
                duration: <integer>
                password: <string>
                schedule_for: <string>
                recurrence:
                  type: 1
                  end_date_time: <dateTime>
                  end_times: 1
                  monthly_day: 1
                  monthly_week: 1
                  monthly_week_day: 4
                  repeat_interval: <integer>
                  weekly_days: '1'
                settings:
                  allow_multiple_devices: <boolean>
                  alternative_hosts: <string>
                  alternative_host_update_polls: <boolean>
                  approval_type: 2
                  attendees_and_panelists_reminder_email_notification:
                    enable: <boolean>
                    type: 4
                  audio: both
                  audio_conference_info: <string>
                  authentication_domains: <string>
                  authentication_name: <string>
                  authentication_option: <string>
                  auto_recording: none
                  close_registration: <boolean>
                  contact_email: <string>
                  contact_name: <string>
                  email_language: <string>
                  enforce_login: <boolean>
                  enforce_login_domains: <string>
                  follow_up_absentees_email_notification:
                    enable: <boolean>
                    type: 2
                  follow_up_attendees_email_notification:
                    enable: <boolean>
                    type: 2
                  global_dial_in_countries:
                    - <string>
                    - <string>
                  hd_video: false
                  hd_video_for_attendees: false
                  host_video: <boolean>
                  language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        languages: <string>
                      - email: <email>
                        languages: <string>
                  sign_language_interpretation:
                    enable: <boolean>
                    interpreters:
                      - email: <email>
                        sign_language: <string>
                      - email: <email>
                        sign_language: <string>
                  panelist_authentication: <boolean>
                  meeting_authentication: <boolean>
                  add_watermark: <boolean>
                  add_audio_watermark: <boolean>
                  notify_registrants: <boolean>
                  on_demand: false
                  panelists_invitation_email_notification: <boolean>
                  panelists_video: <boolean>
                  post_webinar_survey: <boolean>
                  practice_session: false
                  question_and_answer:
                    allow_submit_questions: <boolean>
                    allow_anonymous_questions: <boolean>
                    answer_questions: all
                    attendees_can_comment: <boolean>
                    attendees_can_upvote: <boolean>
                    allow_auto_reply: <boolean>
                    auto_reply_text: <string>
                    enable: <boolean>
                  registrants_confirmation_email: <boolean>
                  registrants_email_notification: <boolean>
                  registrants_restrict_number: 0
                  registration_type: 1
                  send_1080p_video_to_attendees: false
                  show_share_button: <boolean>
                  survey_url: <string>
                  enable_session_branding: <boolean>
                start_time: <dateTime>
                timezone: <string>
                topic: <string>
                tracking_fields:
                  - field: <string>
                    value: <string>
                  - field: <string>
                    value: <string>
                type: 5
                is_simulive: <boolean>
                record_file_id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: occurrence_id
          in: query
          schema:
            type: string
          description: >-
            Webinar occurrence ID. Support change of agenda, start time,
            duration, and settings `host_video`, `panelist_video`, `hd_video,
            watermark`, `auto_recording`.
          example: <string>
        - name: webinarId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The webinar's ID.
          example: <long>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /h323/devices/{deviceId}:
    delete:
      tags:
        - h323 > devices > {deviceId}
      summary: Delete a H.323/SIP device
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete
        a H.323/SIP device from your Zoom account.  
           
         


        **Scopes:** `h323:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      security:
        - oauth2Auth: []
      parameters:
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device ID.
          example: <string>
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    patch:
      tags:
        - h323 > devices > {deviceId}
      summary: Update a H.323/SIP device
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit
        information of a H.323/SIP device from your Zoom account.  
           
         


        **Scopes:** `h323:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                encryption: auto
                ip: <string>
                name: <string>
                protocol: SIP
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The device ID.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /h323/devices:
    get:
      tags:
        - h323 > devices
      summary: List H.323/SIP devices
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to list
        all H.323/SIP Devices on a Zoom account.  
           
         


        **Scopes:** `h323:read:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Medium`
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page_size
          in: query
          schema:
            type: integer
          description: The number of records returned within a single API call.
          example: '30'
        - name: page_number
          in: query
          schema:
            type: integer
          description: >-
            **Deprecated.** We will no longer support this field in a future
            release. Instead, use the `next_page_token` for pagination.
          example: '1'
        - name: next_page_token
          in: query
          schema:
            type: string
          description: >-
            Use the next page token to paginate through large result sets. A
            next page token is returned whenever the set of available results
            exceeds the current page size. This token's expiration period is 15
            minutes.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                next_page_token: <string>
                page_count: <integer>
                page_number: 1
                page_size: 30
                total_records: <integer>
                devices:
                  - encryption: 'no'
                    ip: <string>
                    name: <string>
                    protocol: H.323
                    id: <string>
                  - encryption: 'yes'
                    ip: <string>
                    name: <string>
                    protocol: H.323
                    id: <string>
    post:
      tags:
        - h323 > devices
      summary: Create a H.323/SIP device
      description: >-
        A H.323 or SIP device can make a video call to a [Room
        Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
        to join a Zoom cloud meeting. A Room Connector can also call out to a
        H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a
        H.323/SIP device to your Zoom account  
           
         


        **Scopes:** `h323:write:admin`


        **[Rate Limit
        Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
        `Light`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                encryption: auto
                ip: <string>
                name: <string>
                protocol: SIP
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                encryption: auto
                ip: <string>
                name: <string>
                protocol: SIP
                id: <string>
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''

