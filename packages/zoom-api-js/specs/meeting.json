{
	"info": {
		"_postman_id": "c8edb919-3fec-41da-9b81-69176b0b4d84",
		"name": "Zoom Meeting API",
		"description": "The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [documentation](https://developers.zoom.us/docs/).\n\nAll endpoints are available via `https` and are located at `api.zoom.us/v2/`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39930852",
		"_collection_link": "https://www.postman.com/zoom-developer/zoom-public-workspace/collection/3pbxf5o/zoom-meeting-api?action=share&source=collection_link&creator=39930852"
	},
	"item": [
		{
			"name": "archive_files",
			"item": [
				{
					"name": "statistics",
					"item": [
						{
							"name": "Get archived file statistics",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/archive_files/statistics?from=<dateTime>&to=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive_files",
										"statistics"
									],
									"query": [
										{
											"key": "from",
											"value": "<dateTime>",
											"description": "The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days."
										},
										{
											"key": "to",
											"value": "<dateTime>",
											"description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days."
										}
									]
								},
								"description": "Get statistics about an account's archived meeting or webinar files. \n\n Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA and other compliance requirements. \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**Scopes:** `recording:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`   \n \n The statistics of Archived files returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/archive_files/statistics?from=<dateTime>&to=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive_files",
												"statistics"
											],
											"query": [
												{
													"key": "from",
													"value": "<dateTime>",
													"description": "The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days."
												},
												{
													"key": "to",
													"value": "<dateTime>",
													"description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"<dateTime>\",\n  \"to\": \"<dateTime>\",\n  \"total_records\": \"<integer>\",\n  \"statistic_by_file_extension\": {\n    \"mp4_file_count\": \"<integer>\",\n    \"m4a_file_count\": \"<integer>\",\n    \"txt_file_count\": \"<integer>\",\n    \"json_file_count\": \"<integer>\",\n    \"vtt_file_count\": \"<integer>\"\n  },\n  \"statistic_by_file_status\": {\n    \"processing_file_count\": \"<integer>\",\n    \"completed_file_count\": \"<integer>\",\n    \"failed_file_count\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `2001` <br>\nAccount does not exist: {accountId}\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/archive_files/statistics?from=<dateTime>&to=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive_files",
												"statistics"
											],
											"query": [
												{
													"key": "from",
													"value": "<dateTime>",
													"description": "The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days."
												},
												{
													"key": "to",
													"value": "<dateTime>",
													"description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{fileId}",
					"item": [
						{
							"name": "Update an archived file's auto-delete status",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"auto_delete\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/archive_files/:fileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive_files",
										":fileId"
									],
									"variable": [
										{
											"key": "fileId",
											"value": "<string>"
										}
									]
								},
								"description": "Update an archived file's auto-delete status. \n\n **Prerequisites:** \n* [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) must enable the [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) for your account.\n* Open the disabling auto-delete feature in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open.\n\n**Scopes:** `recording:write`,`recording:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
							},
							"response": [
								{
									"name": "204 response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"auto_delete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/archive_files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive_files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n ",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"auto_delete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/archive_files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive_files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"auto_delete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/archive_files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive_files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List archived files",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/archive_files?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>&query_date_type=meeting_start_time&group_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"archive_files"
							],
							"query": [
								{
									"key": "page_size",
									"value": "30",
									"description": "The number of records returned within a single API call."
								},
								{
									"key": "next_page_token",
									"value": "<string>",
									"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
								},
								{
									"key": "from",
									"value": "<dateTime>",
									"description": "The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days."
								},
								{
									"key": "to",
									"value": "<dateTime>",
									"description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days."
								},
								{
									"key": "query_date_type",
									"value": "meeting_start_time",
									"description": "The type of query date.\n* `meeting_start_time` \n* `archive_complete_time` \n\n This value defaults to `meeting_start_time`."
								},
								{
									"key": "group_id",
									"value": "<string>",
									"description": "The group ID. To get a group ID, use the [List groups](https://developers.zoom.us/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List) API."
								}
							]
						},
						"description": "Get an account's archived meeting or webinar files. \n\n Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA or other compliance requirements. \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**Scopes:** `recording:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `200`   \n \n Archived files returned.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/archive_files?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>&query_date_type=meeting_start_time&group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive_files"
									],
									"query": [
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										},
										{
											"key": "from",
											"value": "<dateTime>",
											"description": "The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days."
										},
										{
											"key": "to",
											"value": "<dateTime>",
											"description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days."
										},
										{
											"key": "query_date_type",
											"value": "meeting_start_time",
											"description": "The type of query date.\n* `meeting_start_time` \n* `archive_complete_time` \n\n This value defaults to `meeting_start_time`."
										},
										{
											"key": "group_id",
											"value": "<string>",
											"description": "The group ID. To get a group ID, use the [List groups](https://developers.zoom.us/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List) API."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"from\": \"<dateTime>\",\n  \"meetings\": [\n    {\n      \"account_name\": \"<string>\",\n      \"archive_files\": [\n        {\n          \"download_url\": \"<string>\",\n          \"encryption_fingerprint\": \"<string>\",\n          \"file_extension\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"file_type\": \"CC\",\n          \"id\": \"<string>\",\n          \"individual\": \"<boolean>\",\n          \"participant_join_time\": \"<dateTime>\",\n          \"participant_leave_time\": \"<dateTime>\",\n          \"recording_type\": \"chat_message\",\n          \"status\": \"failed\",\n          \"file_path\": \"<string>\",\n          \"participant_email\": \"<email>\",\n          \"number_of_messages\": \"<integer>\",\n          \"storage_location\": \"CA\",\n          \"auto_delete\": \"<boolean>\"\n        },\n        {\n          \"download_url\": \"<string>\",\n          \"encryption_fingerprint\": \"<string>\",\n          \"file_extension\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"file_type\": \"CHAT\",\n          \"id\": \"<string>\",\n          \"individual\": \"<boolean>\",\n          \"participant_join_time\": \"<dateTime>\",\n          \"participant_leave_time\": \"<dateTime>\",\n          \"recording_type\": \"audio_only\",\n          \"status\": \"completed\",\n          \"file_path\": \"<string>\",\n          \"participant_email\": \"<email>\",\n          \"number_of_messages\": \"<integer>\",\n          \"storage_location\": \"AU\",\n          \"auto_delete\": \"<boolean>\"\n        }\n      ],\n      \"complete_time\": {},\n      \"duration\": \"<integer>\",\n      \"duration_in_second\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<long>\",\n      \"is_breakout_room\": \"<boolean>\",\n      \"meeting_type\": \"external\",\n      \"recording_count\": \"<integer>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"processing\",\n      \"timezone\": \"<string>\",\n      \"topic\": \"<string>\",\n      \"total_size\": \"<integer>\",\n      \"type\": 6,\n      \"uuid\": \"<string>\",\n      \"parent_meeting_id\": \"<string>\",\n      \"group_id\": \"<string>\"\n    },\n    {\n      \"account_name\": \"<string>\",\n      \"archive_files\": [\n        {\n          \"download_url\": \"<string>\",\n          \"encryption_fingerprint\": \"<string>\",\n          \"file_extension\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"file_type\": \"CC\",\n          \"id\": \"<string>\",\n          \"individual\": \"<boolean>\",\n          \"participant_join_time\": \"<dateTime>\",\n          \"participant_leave_time\": \"<dateTime>\",\n          \"recording_type\": \"chat_message\",\n          \"status\": \"completed\",\n          \"file_path\": \"<string>\",\n          \"participant_email\": \"<email>\",\n          \"number_of_messages\": \"<integer>\",\n          \"storage_location\": \"BR\",\n          \"auto_delete\": \"<boolean>\"\n        },\n        {\n          \"download_url\": \"<string>\",\n          \"encryption_fingerprint\": \"<string>\",\n          \"file_extension\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"file_type\": \"CC\",\n          \"id\": \"<string>\",\n          \"individual\": \"<boolean>\",\n          \"participant_join_time\": \"<dateTime>\",\n          \"participant_leave_time\": \"<dateTime>\",\n          \"recording_type\": \"audio_only\",\n          \"status\": \"completed\",\n          \"file_path\": \"<string>\",\n          \"participant_email\": \"<email>\",\n          \"number_of_messages\": \"<integer>\",\n          \"storage_location\": \"IN\",\n          \"auto_delete\": \"<boolean>\"\n        }\n      ],\n      \"complete_time\": {},\n      \"duration\": \"<integer>\",\n      \"duration_in_second\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<long>\",\n      \"is_breakout_room\": \"<boolean>\",\n      \"meeting_type\": \"internal\",\n      \"recording_count\": \"<integer>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"processing\",\n      \"timezone\": \"<string>\",\n      \"topic\": \"<string>\",\n      \"total_size\": \"<integer>\",\n      \"type\": 8,\n      \"uuid\": \"<string>\",\n      \"parent_meeting_id\": \"<string>\",\n      \"group_id\": \"<string>\"\n    }\n  ],\n  \"next_page_token\": \"<string>\",\n  \"page_size\": \"<integer>\",\n  \"to\": \"<dateTime>\",\n  \"total_records\": \"<integer>\"\n}"
						},
						{
							"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist: {accountId} <br>\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/archive_files?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>&query_date_type=meeting_start_time&group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive_files"
									],
									"query": [
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										},
										{
											"key": "from",
											"value": "<dateTime>",
											"description": "The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days."
										},
										{
											"key": "to",
											"value": "<dateTime>",
											"description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days."
										},
										{
											"key": "query_date_type",
											"value": "meeting_start_time",
											"description": "The type of query date.\n* `meeting_start_time` \n* `archive_complete_time` \n\n This value defaults to `meeting_start_time`."
										},
										{
											"key": "group_id",
											"value": "<string>",
											"description": "The group ID. To get a group ID, use the [List groups](https://developers.zoom.us/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List) API."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "past_meetings",
			"item": [
				{
					"name": "{meetingUUID}",
					"item": [
						{
							"name": "archive_files",
							"item": [
								{
									"name": "Get a meeting's archived files",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingUUID",
												"archive_files"
											],
											"variable": [
												{
													"key": "meetingUUID",
													"value": "<string>",
													"description": "(Required) The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. After a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID when using the meeting UUID for other API calls."
												}
											]
										},
										"description": "Return a specific meeting instance's [archived files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators). \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**Scopes:** `recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n\n Meeting archived files returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingUUID",
														"archive_files"
													],
													"variable": [
														{
															"key": "meetingUUID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_name\": \"<string>\",\n  \"archive_files\": [\n    {\n      \"download_url\": \"<string>\",\n      \"encryption_fingerprint\": \"<string>\",\n      \"file_extension\": \"<string>\",\n      \"file_size\": \"<integer>\",\n      \"file_type\": \"M4A\",\n      \"id\": \"<string>\",\n      \"individual\": \"<boolean>\",\n      \"participant_join_time\": \"<dateTime>\",\n      \"participant_leave_time\": \"<dateTime>\",\n      \"recording_type\": \"audio_only\",\n      \"status\": \"processing\",\n      \"file_path\": \"<string>\",\n      \"participant_email\": \"<email>\",\n      \"number_of_messages\": \"<integer>\",\n      \"storage_location\": \"BR\",\n      \"auto_delete\": \"<boolean>\"\n    },\n    {\n      \"download_url\": \"<string>\",\n      \"encryption_fingerprint\": \"<string>\",\n      \"file_extension\": \"<string>\",\n      \"file_size\": \"<integer>\",\n      \"file_type\": \"M4A\",\n      \"id\": \"<string>\",\n      \"individual\": \"<boolean>\",\n      \"participant_join_time\": \"<dateTime>\",\n      \"participant_leave_time\": \"<dateTime>\",\n      \"recording_type\": \"chat_message\",\n      \"status\": \"failed\",\n      \"file_path\": \"<string>\",\n      \"participant_email\": \"<email>\",\n      \"number_of_messages\": \"<integer>\",\n      \"storage_location\": \"BR\",\n      \"auto_delete\": \"<boolean>\"\n    }\n  ],\n  \"complete_time\": {},\n  \"duration\": \"<integer>\",\n  \"duration_in_second\": \"<integer>\",\n  \"host_id\": \"<string>\",\n  \"id\": \"<long>\",\n  \"is_breakout_room\": \"<boolean>\",\n  \"meeting_type\": \"external\",\n  \"recording_count\": \"<integer>\",\n  \"start_time\": \"<dateTime>\",\n  \"status\": \"completed\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"total_size\": \"<integer>\",\n  \"type\": 4,\n  \"uuid\": \"<string>\",\n  \"parent_meeting_id\": \"<string>\",\n  \"group_id\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting {meetingUUId} does not exist. <br> <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingUUID",
														"archive_files"
													],
													"variable": [
														{
															"key": "meetingUUID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a meeting's archived files",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingUUID",
												"archive_files"
											],
											"variable": [
												{
													"key": "meetingUUID",
													"value": "<string>",
													"description": "(Required) The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. For example, after a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID when using the meeting UUID for other API calls."
												}
											]
										},
										"description": "Use this API to delete all of a meeting's archived files. \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \n Meeting archived files returned.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingUUID",
														"archive_files"
													],
													"variable": [
														{
															"key": "meetingUUID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nOnly available for Paid account.\n\n**Error Code:** `200` <br>\nNot available for this account.\n\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingUUID",
														"archive_files"
													],
													"variable": [
														{
															"key": "meetingUUID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {0}\n\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingUUID/archive_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingUUID",
														"archive_files"
													],
													"variable": [
														{
															"key": "meetingUUID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{meetingId}",
					"item": [
						{
							"name": "instances",
							"item": [
								{
									"name": "List past meeting instances",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId",
												"instances"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The past meeting's ID."
												}
											]
										},
										"description": "Return a list of past meeting instances. \n\n \n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \n List of ended meeting instances returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"instances"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"meetings\": [\n    {\n      \"start_time\": \"<dateTime>\",\n      \"uuid\": \"<string>\"\n    },\n    {\n      \"start_time\": \"<dateTime>\",\n      \"uuid\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"instances"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "participants",
							"item": [
								{
									"name": "Get past meeting participants",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId/participants?page_size=30&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId",
												"participants"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
												}
											]
										},
										"description": "Retrieve information on participants from a past meeting. Note the API doesn't return results if there's only one participant in a meeting.  \n   \n \n**Prerequisites:**  \n \n* Paid account on a Pro or higher plan.\n\n  \n    \n   **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nMeeting participants' report returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/participants?page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"participants\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"user_email\": \"<string>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"status\": \"in_meeting\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"user_email\": \"<string>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"status\": \"in_meeting\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User {userId} not exist or not belong to this account.<br><br> <br>\n**Error Code:** `300` <br>\n Cannot access meeting information.<br><br> <br>\n**Error Code:** `200` <br>\n Only",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/participants?page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br> <br>\n**Error Code:** `3001` <br>\n This meeting is not available or ID is not valid.<br",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/participants?page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "polls",
							"item": [
								{
									"name": "List past meeting's poll results",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId/polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId",
												"polls"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
												}
											]
										},
										"description": "[Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) allow the meeting host to survey attendees. List poll results of a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro**.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nPolls returned successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `12702` <br>\n Can not access a meeting a year ago. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "qa",
							"item": [
								{
									"name": "List past meetings' Q&A",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId/qa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId",
												"qa"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
												}
											]
										},
										"description": "The question &amp; answer (Q&amp;A) feature for Zoom Meetings lets attendees ask questions during a meeting and lets the other attendees answer those questions.  \n \nList Q&amp;A of a specific meeting.\n\n**Prerequisites:**  \n \n* \n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nQ&amp;A returned successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"qa"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"qa"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Meeting ID is invalid or not end.<br>\nThis Meeting id does not belong to you:{meetingId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_meetings/:meetingId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_meetings",
														":meetingId",
														"qa"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get past meeting details",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/past_meetings/:meetingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"past_meetings",
										":meetingId"
									],
									"variable": [
										{
											"key": "meetingId",
											"value": "<integer>",
											"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID before making an API request."
										}
									]
								},
								"description": "Get information about a past meeting. \n\n \n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`   \n \nMeeting information returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId"
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<long>\",\n  \"uuid\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"host_id\": \"<string>\",\n  \"dept\": \"<string>\",\n  \"participants_count\": \"<integer>\",\n  \"source\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"total_minutes\": \"<integer>\",\n  \"type\": 7,\n  \"user_email\": \"<email>\",\n  \"user_name\": \"<string>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\n* User does not exist: {userId} \n* User \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `300` <br>\nCannot access meeting information.\n\n**Error Code:*",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId"
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\n* This meeting is not available or the meeting ID is invalid. \n* The meeting ID is invalid or the meeting has not ended.\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_meetings/:meetingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_meetings",
												":meetingId"
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "devices",
			"item": [
				{
					"name": "groups",
					"item": [
						{
							"name": "Get zdm group info",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/groups?page_size=<integer>&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										"groups"
									],
									"query": [
										{
											"key": "page_size",
											"value": "<integer>",
											"description": "The total number of records returned from a single API call.\nDefault - 30.\nMax -100."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period token is 15 minutes."
										}
									]
								},
								"description": "Get Zoom Device Manager (ZDM) group information for an account.\n\n**Scopes:** `device:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200` **OK**  Version detail returned successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/groups?page_size=<integer>&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												"groups"
											],
											"query": [
												{
													"key": "page_size",
													"value": "<integer>",
													"description": "The total number of records returned from a single API call.\nDefault - 30.\nMax -100."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period token is 15 minutes."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"groups\": [\n    {\n      \"zdm_group_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"zdm_group_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"next_page_token\": \"<string>\",\n  \"page_size\": \"<integer>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30051037` <br>\n Invalid parameters. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/groups?page_size=<integer>&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												"groups"
											],
											"query": [
												{
													"key": "page_size",
													"value": "<integer>",
													"description": "The total number of records returned from a single API call.\nDefault - 30.\nMax -100."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period token is 15 minutes."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `30055008` <br>\n No permission. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/groups?page_size=<integer>&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												"groups"
											],
											"query": [
												{
													"key": "page_size",
													"value": "<integer>",
													"description": "The total number of records returned from a single API call.\nDefault - 30.\nMax -100."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period token is 15 minutes."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "zpa",
					"item": [
						{
							"name": "assignment",
							"item": [
								{
									"name": "Assign a device to a user or commonarea",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mac_address\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"extension_number\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/zpa/assignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												"zpa",
												"assignment"
											]
										},
										"description": "Assign a device to a user or common area, or move a device to another user or common area, or remove a device.\n\n**Prerequisites:**\n* Device must be enrolled in Zoom Device Management (ZDM).\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204` **No Content**   Request processed successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mac_address\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"extension_number\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/zpa/assignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"zpa",
														"assignment"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30055003` <br>\n Device vendor does not support. <br>\n**Error Code:** `30055007` <br>\n Mac address is wrong. <br>\n**Error Code:** `30051039` <br>\n Device not exists. <br>\n**Error Code:** `3",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mac_address\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"extension_number\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/zpa/assignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"zpa",
														"assignment"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upgrade",
							"item": [
								{
									"name": "upgrade zpa os/app",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"upgrade_type\": \"UPGRADE_FIRMWARE\",\n    \"firmware_versions\": [\n      {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\",\n        \"model\": \"<string>\"\n      },\n      {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ]\n  },\n  \"zdm_group_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/zpa/upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												"zpa",
												"upgrade"
											]
										},
										"description": "Upgrade ZPA firmware or app by Zoom Device Manager (ZDM) group ID.\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
									},
									"response": [
										{
											"name": "The upgrade request has been accepted and is currently being processed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"upgrade_type\": \"UPGRADE_FIRMWARE\",\n    \"firmware_versions\": [\n      {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\",\n        \"model\": \"<string>\"\n      },\n      {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ]\n  },\n  \"zdm_group_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/zpa/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"zpa",
														"upgrade"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30052029` <br>\n Missing required input: firmware_versions. <br>\n**Error Code:** `30055020` <br>\n Upgrade type dose not exist. <br>\n**Error Code:** `30055018` <br>\n Zdm group id dose not ex",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"upgrade_type\": \"UPGRADE_FIRMWARE\",\n    \"firmware_versions\": [\n      {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\",\n        \"model\": \"<string>\"\n      },\n      {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\",\n        \"model\": \"<string>\"\n      }\n    ]\n  },\n  \"zdm_group_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/zpa/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														"zpa",
														"upgrade"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "vendors",
							"item": [
								{
									"name": "{vendor}",
									"item": [
										{
											"name": "mac_addresses",
											"item": [
												{
													"name": "{macAddress}",
													"item": [
														{
															"name": "Delete ZPA device by vendor and mac address",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																			"type": "string"
																		},
																		{
																			"key": "authUrl",
																			"value": "/",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "authorization_code",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/devices/zpa/vendors/:vendor/mac_addresses/:macAddress",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"zpa",
																		"vendors",
																		":vendor",
																		"mac_addresses",
																		":macAddress"
																	],
																	"variable": [
																		{
																			"key": "vendor",
																			"value": "<string>",
																			"description": "(Required) The device's manufacturer."
																		},
																		{
																			"key": "macAddress",
																			"value": "<string>",
																			"description": "(Required) The device's mac address."
																		}
																	]
																},
																"description": "Remove a ZPA device from the device manager, by vendor and mac address.\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
															},
															"response": [
																{
																	"name": "**HTTP Status Code:** `204` **No Content** Device deleted successfully.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": "Added as a part of security scheme: oauth2"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/zpa/vendors/:vendor/mac_addresses/:macAddress",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				"zpa",
																				"vendors",
																				":vendor",
																				"mac_addresses",
																				":macAddress"
																			],
																			"variable": [
																				{
																					"key": "vendor"
																				},
																				{
																					"key": "macAddress"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30052026` <br>\n Device is not ZPA. <br>\n**Error Code:** `30055003` <br>\n Device vendor does not support. <br>\n**Error Code:** `30055007` <br>\n Mac address is wrong. <br>\n",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": "Added as a part of security scheme: oauth2"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/zpa/vendors/:vendor/mac_addresses/:macAddress",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				"zpa",
																				"vendors",
																				":vendor",
																				"mac_addresses",
																				":macAddress"
																			],
																			"variable": [
																				{
																					"key": "vendor"
																				},
																				{
																					"key": "macAddress"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `30051039` <br>\n Zdm device not found. <br>\n",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": "Added as a part of security scheme: oauth2"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/zpa/vendors/:vendor/mac_addresses/:macAddress",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				"zpa",
																				"vendors",
																				":vendor",
																				"mac_addresses",
																				":macAddress"
																			],
																			"variable": [
																				{
																					"key": "vendor"
																				},
																				{
																					"key": "macAddress"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "zdm_groups",
							"item": [
								{
									"name": "{zdmGroupId}",
									"item": [
										{
											"name": "versions",
											"item": [
												{
													"name": "Get ZPA version info",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/zpa/zdm_groups/:zdmGroupId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																"zpa",
																"zdm_groups",
																":zdmGroupId",
																"versions"
															],
															"variable": [
																{
																	"key": "zdmGroupId",
																	"value": "<string>",
																	"description": "(Required) The Zoom Device Management (ZDM) group ID."
																}
															]
														},
														"description": "Get ZPA firmware and app version information that can be upgraded for devices.\n\n**Scopes:** `device:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `200` **OK**  Version detail returned successfully.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/zpa/zdm_groups/:zdmGroupId/versions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"zpa",
																		"zdm_groups",
																		":zdmGroupId",
																		"versions"
																	],
																	"variable": [
																		{
																			"key": "zdmGroupId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"firmware_versions\": [\n    {\n      \"vendor\": \"<string>\",\n      \"model\": \"<string>\",\n      \"version\": \"<string>\",\n      \"warn_info\": \"<string>\"\n    },\n    {\n      \"vendor\": \"<string>\",\n      \"model\": \"<string>\",\n      \"version\": \"<string>\",\n      \"warn_info\": \"<string>\"\n    }\n  ],\n  \"app_versions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														},
														{
															"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30051037` <br>\n * AccountId is empty. <br>\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/zpa/zdm_groups/:zdmGroupId/versions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"zpa",
																		"zdm_groups",
																		":zdmGroupId",
																		"versions"
																	],
																	"variable": [
																		{
																			"key": "zdmGroupId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `30052027` <br>\n * ZdmGroup not found. <br>\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/zpa/zdm_groups/:zdmGroupId/versions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		"zpa",
																		"zdm_groups",
																		":zdmGroupId",
																		"versions"
																	],
																	"variable": [
																		{
																			"key": "zdmGroupId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{deviceId}",
					"item": [
						{
							"name": "assignment",
							"item": [
								{
									"name": "Change device association",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"room_id\": \"<string>\",\n  \"app_type\": \"ZR\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId/assignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId",
												"assignment"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "<string>",
													"description": "(Required) Unique identifier of the device."
												}
											]
										},
										"description": "This Device API lets you change device association from one Zoom Room to another. \n\n**Prerequisites:**\n* Device must be enrolled in ZMD (Zoom Device Management) \n\n\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204` **No Content**  \n \nRequest processed successfully.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"room_id\": \"<string>\",\n  \"app_type\": \"ZR\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:deviceId/assignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":deviceId",
														"assignment"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `8500` <br>\nDevice not enrolled in Zoom Device Management.\n\n**Error Code:** `8501` <br>\nDevice does not support this app.\n\n**Error Code:** `8502` <br>\nRoom does not support this app.\n\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"room_id\": \"<string>\",\n  \"app_type\": \"ZR\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:deviceId/assignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":deviceId",
														"assignment"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1012` <br>\nRoom does not exist: {roomId}.\n\n**Error Code:** `8503` <br>\nDevice does not exist: {deviceId}.\n\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"room_id\": \"<string>\",\n  \"app_type\": \"ZR\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:deviceId/assignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":deviceId",
														"assignment"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get device detail",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "<string>",
											"description": "(Required) The device's unique identifier."
										}
									]
								},
								"description": "Retrieve a device's details.\n\n**Scopes:** `device:read:admin`,`device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200` **OK** \n \nDevice detail returned successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"device_id\": \"<string>\",\n  \"device_name\": \"<string>\",\n  \"mac_address\": \"<string>\",\n  \"serial_number\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"model\": \"<string>\",\n  \"platform_os\": \"<string>\",\n  \"app_version\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"enrolled_in_zdm\": \"<boolean>\",\n  \"connected_to_zdm\": \"<boolean>\",\n  \"room_id\": \"<string>\",\n  \"room_name\": \"<string>\",\n  \"device_type\": 2,\n  \"sdk_version\": \"<string>\",\n  \"device_status\": 1,\n  \"last_online\": \"<string>\",\n  \"user_email\": \"<string>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055008` <br>\n No permission. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `30055012` <br>\n No found unified deviceId. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete device",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "<string>",
											"description": "(Required) Unique identifier of the device."
										}
									]
								},
								"description": "Delete a device from a Zoom account. \n\n**Prerequisites:**\n* Device must be enrolled in ZMD (Zoom Device Management)\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204` **No Content** Device deleted successfully.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055008` <br>\n no permission. <br>\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `30055012` <br>\n no found unified deviceId. <br>\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change device ",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"device_name\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"device_type\": 1\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "<string>",
											"description": "(Required) Unique identifier of the device."
										}
									]
								},
								"description": "Change device name. \n\n**Prerequisites:**\n* Device must be enrolled in ZMD (Zoom Device Management)\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204` **No Content** \n \nRequest processed successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"device_name\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"device_type\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055001` <br>\n zoom room does not exist. . <br>\n**Error Code:** `30055002` <br>\n required param can not be empty or null. <br>\n**Error Code:** `30055003` <br>\n device type does not support",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"device_name\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"device_type\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `30055012` <br>\n Device does not exist: {deviceId}. <br>\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"device_name\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"device_type\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List devices",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices?search_text=<string>&platform_os=iphone&is_enrolled_in_zdm=true&device_type=-1&device_vendor=<string>&device_model=<string>&device_status=-1&page_size=30&next_page_token=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices"
							],
							"query": [
								{
									"key": "search_text",
									"value": "<string>",
									"description": "Filter devices by name or serial number."
								},
								{
									"key": "platform_os",
									"value": "iphone",
									"description": "Filter devices by platform operating system."
								},
								{
									"key": "is_enrolled_in_zdm",
									"value": "true",
									"description": "Filter devices by enrollment of ZDM (Zoom Device Management)."
								},
								{
									"key": "device_type",
									"value": "-1",
									"description": "Filter devices by device type.  \n  Device Type:  \n `-1` - All Zoom Room device(0,1,2,3,4,6).  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display.  \n `3` - Zoom Rooms Control System.  \n `4` -  Zoom Rooms Whiteboard.  \n `5` - Zoom Phone Appliance.  \n `6` - Zoom Rooms Computer (with Controller)."
								},
								{
									"key": "device_vendor",
									"value": "<string>",
									"description": "Filter devices by vendor."
								},
								{
									"key": "device_model",
									"value": "<string>",
									"description": "Filter devices by model."
								},
								{
									"key": "device_status",
									"value": "-1",
									"description": "Filter devices by status.   \n  Device Status:  \n `0` - offline.  \n `1` - online.  \n `-1` - unlink"
								},
								{
									"key": "page_size",
									"value": "30",
									"description": "The number of records returned within a single API call."
								},
								{
									"key": "next_page_token",
									"value": "<string>",
									"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
								}
							]
						},
						"description": "This API lets you list devices. \n\n\n\n**Scopes:** `device:read:admin`,`device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `200` **OK**  \n \nDevice detail returned successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices?search_text=<string>&platform_os=iphone&is_enrolled_in_zdm=true&device_type=-1&device_vendor=<string>&device_model=<string>&device_status=-1&page_size=30&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									],
									"query": [
										{
											"key": "search_text",
											"value": "<string>",
											"description": "Filter devices by name or serial number."
										},
										{
											"key": "platform_os",
											"value": "iphone",
											"description": "Filter devices by platform operating system."
										},
										{
											"key": "is_enrolled_in_zdm",
											"value": "true",
											"description": "Filter devices by enrollment of ZDM (Zoom Device Management)."
										},
										{
											"key": "device_type",
											"value": "-1",
											"description": "Filter devices by device type.  \n  Device Type:  \n `-1` - All Zoom Room device(0,1,2,3,4,6).  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display.  \n `3` - Zoom Rooms Control System.  \n `4` -  Zoom Rooms Whiteboard.  \n `5` - Zoom Phone Appliance.  \n `6` - Zoom Rooms Computer (with Controller)."
										},
										{
											"key": "device_vendor",
											"value": "<string>",
											"description": "Filter devices by vendor."
										},
										{
											"key": "device_model",
											"value": "<string>",
											"description": "Filter devices by model."
										},
										{
											"key": "device_status",
											"value": "-1",
											"description": "Filter devices by status.   \n  Device Status:  \n `0` - offline.  \n `1` - online.  \n `-1` - unlink"
										},
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_size\": \"<integer>\",\n  \"devices\": [\n    {\n      \"device_id\": \"<string>\",\n      \"device_name\": \"<string>\",\n      \"mac_address\": \"<string>\",\n      \"serial_number\": \"<string>\",\n      \"vendor\": \"<string>\",\n      \"model\": \"<string>\",\n      \"platform_os\": \"<string>\",\n      \"app_version\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"enrolled_in_zdm\": \"<boolean>\",\n      \"connected_to_zdm\": \"<boolean>\",\n      \"room_id\": \"<string>\",\n      \"room_name\": \"<string>\",\n      \"device_type\": 2,\n      \"skd_version\": \"<string>\",\n      \"device_status\": 1,\n      \"last_online\": \"<string>\",\n      \"user_email\": \"<string>\"\n    },\n    {\n      \"device_id\": \"<string>\",\n      \"device_name\": \"<string>\",\n      \"mac_address\": \"<string>\",\n      \"serial_number\": \"<string>\",\n      \"vendor\": \"<string>\",\n      \"model\": \"<string>\",\n      \"platform_os\": \"<string>\",\n      \"app_version\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"enrolled_in_zdm\": \"<boolean>\",\n      \"connected_to_zdm\": \"<boolean>\",\n      \"room_id\": \"<string>\",\n      \"room_name\": \"<string>\",\n      \"device_type\": 1,\n      \"skd_version\": \"<string>\",\n      \"device_status\": 0,\n      \"last_online\": \"<string>\",\n      \"user_email\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `30055008` <br>\nno permission.\n\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices?search_text=<string>&platform_os=iphone&is_enrolled_in_zdm=true&device_type=-1&device_vendor=<string>&device_model=<string>&device_status=-1&page_size=30&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									],
									"query": [
										{
											"key": "search_text",
											"value": "<string>",
											"description": "Filter devices by name or serial number."
										},
										{
											"key": "platform_os",
											"value": "iphone",
											"description": "Filter devices by platform operating system."
										},
										{
											"key": "is_enrolled_in_zdm",
											"value": "true",
											"description": "Filter devices by enrollment of ZDM (Zoom Device Management)."
										},
										{
											"key": "device_type",
											"value": "-1",
											"description": "Filter devices by device type.  \n  Device Type:  \n `-1` - All Zoom Room device(0,1,2,3,4,6).  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display.  \n `3` - Zoom Rooms Control System.  \n `4` -  Zoom Rooms Whiteboard.  \n `5` - Zoom Phone Appliance.  \n `6` - Zoom Rooms Computer (with Controller)."
										},
										{
											"key": "device_vendor",
											"value": "<string>",
											"description": "Filter devices by vendor."
										},
										{
											"key": "device_model",
											"value": "<string>",
											"description": "Filter devices by model."
										},
										{
											"key": "device_status",
											"value": "-1",
											"description": "Filter devices by status.   \n  Device Status:  \n `0` - offline.  \n `1` - online.  \n `-1` - unlink"
										},
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a new device",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_name\": \"<string>\",\n  \"device_type\": 5,\n  \"mac_address\": \"<string>\",\n  \"model\": \"<string>\",\n  \"serial_number\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"user_email\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"zdm_group_id\": \"<string>\",\n  \"extension_number\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices"
							]
						},
						"description": "Add a new device to Zoom account. \n\n**Scope:** `device:write:admin`   \n \n **[Rate Limit Label](https://developers.zoom.us/docs/api/rest/rate-limits/):** `Medium`\n\n**Scopes:** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
					},
					"response": [
						{
							"name": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"device_name\": \"<string>\",\n  \"device_type\": 5,\n  \"mac_address\": \"<string>\",\n  \"model\": \"<string>\",\n  \"serial_number\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"user_email\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"zdm_group_id\": \"<string>\",\n  \"extension_number\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055001` <br>\n zoom room does not exist.  <br>\n**Error Code:** `30055002` <br>\n required param can not be empty or null. <br>\n**Error Code:** `30055003` <br>\n device type does not support.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"device_name\": \"<string>\",\n  \"device_type\": 5,\n  \"mac_address\": \"<string>\",\n  \"model\": \"<string>\",\n  \"serial_number\": \"<string>\",\n  \"vendor\": \"<string>\",\n  \"room_id\": \"<string>\",\n  \"user_email\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"zdm_group_id\": \"<string>\",\n  \"extension_number\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{userId}",
					"item": [
						{
							"name": "recordings",
							"item": [
								{
									"name": "List all recordings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/recordings?page_size=30&next_page_token=<string>&mc=false&trash=false&from=<date>&to=<date>&trash_type=meeting_recordings&meeting_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"recordings"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												},
												{
													"key": "mc",
													"value": "false",
													"description": "The query metadata of the recording if using an on-premise meeting connector for the meeting."
												},
												{
													"key": "trash",
													"value": "false",
													"description": "The query trash.\n* `true` - List recordings from trash.  \n* `false` - Do not list recordings from the trash.  \n\nThe default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. "
												},
												{
													"key": "from",
													"value": "<date>",
													"description": "The start date in 'yyyy-mm-dd' UTC format for the date range where you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. \n\nFor example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of 'from' field will be `2020-06-30` and the value of the 'to' field will be `2020-07-01`. \n\n**Note**: The `trash` files cannot be filtered by date range and thus, the `from` and `to` fields should not be used for trash files."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "The end date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
												},
												{
													"key": "trash_type",
													"value": "meeting_recordings",
													"description": "The type of cloud recording to retrieve from the trash. \n \n *   `meeting_recordings`: List all meeting recordings from the trash.  \n *  `recording_file`: List all individual recording files from the trash. "
												},
												{
													"key": "meeting_id",
													"value": "<integer>",
													"description": "The meeting ID."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's ID or email address. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "Lists all [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) for a user.  \n\nFor user-level apps, pass the [`me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.  To access a user's passcode protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a bearer token in the authorization header.  \n\nExample:  `curl -H \"Authorization: Bearer <ACCESS_TOKEN>\" https://{{base-domain}}/rec/archive/download/xyz`  \n\n**Prerequisites:**  \n* Must have a Pro or a higher plan.  \n* Must enable Cloud Recording on the user's account.\n\n**Scopes:** `recording:read:admin`,`recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nList of recording objects returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/recordings?page_size=30&next_page_token=<string>&mc=false&trash=false&from=<date>&to=<date>&trash_type=meeting_recordings&meeting_id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"recordings"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
														},
														{
															"key": "mc",
															"value": "false",
															"description": "The query metadata of the recording if using an on-premise meeting connector for the meeting."
														},
														{
															"key": "trash",
															"value": "false",
															"description": "The query trash.\n* `true` - List recordings from trash.  \n* `false` - Do not list recordings from the trash.  \n\nThe default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. "
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date in 'yyyy-mm-dd' UTC format for the date range where you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. \n\nFor example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of 'from' field will be `2020-06-30` and the value of the 'to' field will be `2020-07-01`. \n\n**Note**: The `trash` files cannot be filtered by date range and thus, the `from` and `to` fields should not be used for trash files."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
														},
														{
															"key": "trash_type",
															"value": "meeting_recordings",
															"description": "The type of cloud recording to retrieve from the trash. \n \n *   `meeting_recordings`: List all meeting recordings from the trash.  \n *  `recording_file`: List all individual recording files from the trash. "
														},
														{
															"key": "meeting_id",
															"value": "<integer>",
															"description": "The meeting ID."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"from\": \"<date>\",\n  \"to\": \"<date>\",\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"meetings\": [\n    {\n      \"account_id\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"recording_count\": \"<integer>\",\n      \"start_time\": \"<dateTime>\",\n      \"topic\": \"<string>\",\n      \"total_size\": \"<long>\",\n      \"type\": \"8\",\n      \"uuid\": \"<string>\",\n      \"recording_play_passcode\": \"<string>\",\n      \"recording_files\": [\n        {\n          \"deleted_time\": \"<string>\",\n          \"download_url\": \"<string>\",\n          \"file_path\": \"<string>\",\n          \"file_size\": \"<number>\",\n          \"file_type\": \"MP4\",\n          \"file_extension\": \"M4A\",\n          \"id\": \"<string>\",\n          \"meeting_id\": \"<string>\",\n          \"play_url\": \"<string>\",\n          \"recording_end\": \"<string>\",\n          \"recording_start\": \"<string>\",\n          \"recording_type\": \"thumbnail\",\n          \"status\": \"completed\"\n        },\n        {\n          \"deleted_time\": \"<string>\",\n          \"download_url\": \"<string>\",\n          \"file_path\": \"<string>\",\n          \"file_size\": \"<number>\",\n          \"file_type\": \"CHAT_MESSAGE\",\n          \"file_extension\": \"MP4\",\n          \"id\": \"<string>\",\n          \"meeting_id\": \"<string>\",\n          \"play_url\": \"<string>\",\n          \"recording_end\": \"<string>\",\n          \"recording_start\": \"<string>\",\n          \"recording_type\": \"poll\",\n          \"status\": \"completed\"\n        }\n      ]\n    },\n    {\n      \"account_id\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"recording_count\": \"<integer>\",\n      \"start_time\": \"<dateTime>\",\n      \"topic\": \"<string>\",\n      \"total_size\": \"<long>\",\n      \"type\": \"99\",\n      \"uuid\": \"<string>\",\n      \"recording_play_passcode\": \"<string>\",\n      \"recording_files\": [\n        {\n          \"deleted_time\": \"<string>\",\n          \"download_url\": \"<string>\",\n          \"file_path\": \"<string>\",\n          \"file_size\": \"<number>\",\n          \"file_type\": \"TB\",\n          \"file_extension\": \"VTT\",\n          \"id\": \"<string>\",\n          \"meeting_id\": \"<string>\",\n          \"play_url\": \"<string>\",\n          \"recording_end\": \"<string>\",\n          \"recording_start\": \"<string>\",\n          \"recording_type\": \"shared_screen_with_speaker_view(CC)\",\n          \"status\": \"completed\"\n        },\n        {\n          \"deleted_time\": \"<string>\",\n          \"download_url\": \"<string>\",\n          \"file_path\": \"<string>\",\n          \"file_size\": \"<number>\",\n          \"file_type\": \"TRANSCRIPT\",\n          \"file_extension\": \"VTT\",\n          \"id\": \"<string>\",\n          \"meeting_id\": \"<string>\",\n          \"play_url\": \"<string>\",\n          \"recording_end\": \"<string>\",\n          \"recording_start\": \"<string>\",\n          \"recording_type\": \"sign_interpretation\",\n          \"status\": \"completed\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/recordings?page_size=30&next_page_token=<string>&mc=false&trash=false&from=<date>&to=<date>&trash_type=meeting_recordings&meeting_id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"recordings"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
														},
														{
															"key": "mc",
															"value": "false",
															"description": "The query metadata of the recording if using an on-premise meeting connector for the meeting."
														},
														{
															"key": "trash",
															"value": "false",
															"description": "The query trash.\n* `true` - List recordings from trash.  \n* `false` - Do not list recordings from the trash.  \n\nThe default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. "
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date in 'yyyy-mm-dd' UTC format for the date range where you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. \n\nFor example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of 'from' field will be `2020-06-30` and the value of the 'to' field will be `2020-07-01`. \n\n**Note**: The `trash` files cannot be filtered by date range and thus, the `from` and `to` fields should not be used for trash files."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
														},
														{
															"key": "trash_type",
															"value": "meeting_recordings",
															"description": "The type of cloud recording to retrieve from the trash. \n \n *   `meeting_recordings`: List all meeting recordings from the trash.  \n *  `recording_file`: List all individual recording files from the trash. "
														},
														{
															"key": "meeting_id",
															"value": "<integer>",
															"description": "The meeting ID."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist, or does not belong to this account. <br>\n**Error Code:** `3301` <br>\n There is no recording for this session. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/recordings?page_size=30&next_page_token=<string>&mc=false&trash=false&from=<date>&to=<date>&trash_type=meeting_recordings&meeting_id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"recordings"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
														},
														{
															"key": "mc",
															"value": "false",
															"description": "The query metadata of the recording if using an on-premise meeting connector for the meeting."
														},
														{
															"key": "trash",
															"value": "false",
															"description": "The query trash.\n* `true` - List recordings from trash.  \n* `false` - Do not list recordings from the trash.  \n\nThe default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. "
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date in 'yyyy-mm-dd' UTC format for the date range where you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. \n\nFor example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of 'from' field will be `2020-06-30` and the value of the 'to' field will be `2020-07-01`. \n\n**Note**: The `trash` files cannot be filtered by date range and thus, the `from` and `to` fields should not be used for trash files."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. "
														},
														{
															"key": "trash_type",
															"value": "meeting_recordings",
															"description": "The type of cloud recording to retrieve from the trash. \n \n *   `meeting_recordings`: List all meeting recordings from the trash.  \n *  `recording_file`: List all individual recording files from the trash. "
														},
														{
															"key": "meeting_id",
															"value": "<integer>",
															"description": "The meeting ID."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "meeting_templates",
							"item": [
								{
									"name": "List meeting templates",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/meeting_templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"meeting_templates"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user ID retrievable from the [List users](/api-reference/zoom-api/methods#operation/users) API."
												}
											]
										},
										"description": "List available [meeting templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates) for a user. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**   \n ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meeting_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meeting_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"templates\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<integer>\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meeting_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meeting_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User not exist: {userId}.<br>\nUser {userId} does not exist or does not belong to this account. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meeting_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meeting_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a meeting template from an existing meeting",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"meeting_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/meeting_templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"meeting_templates"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user ID retrievable from the [List users](/api-reference/zoom-api/methods#operation/users) API."
												}
											]
										},
										"description": "Create a meeting template from an existing meeting. \n\n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nMeeting template created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"meeting_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meeting_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meeting_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n* Meeting ID does not exist. \n* Invalid meeting ID. \n* You can only create up to 40 meeting templates.\n\n**Error Code:** `3000` <br>\n* Cannot access webinar information. \n* Meeting t",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"meeting_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meeting_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meeting_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\n* User not exist: {userId}. \n* User {userId} does not exist or does not belong to this account.\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"meeting_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meeting_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meeting_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "meetings",
							"item": [
								{
									"name": "List meetings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/meetings?type=scheduled&page_size=30&next_page_token=<string>&page_number=<integer>&from=<date>&to=<date>&timezone=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"meetings"
											],
											"query": [
												{
													"key": "type",
													"value": "scheduled",
													"description": "The type of meeting. \n* `scheduled` - All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. \n* `live` - All the ongoing meetings. \n* `upcoming` - All upcoming meetings, including live meetings. \n* `upcoming_meetings` - All upcoming meetings, including live meetings. \n* `previous_meetings` - All the previous meetings."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												},
												{
													"key": "page_number",
													"value": "<integer>",
													"description": "The page number of the current page in the returned records."
												},
												{
													"key": "from",
													"value": "<date>",
													"description": "The start date."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "The end date."
												},
												{
													"key": "timezone",
													"value": "<string>",
													"description": "The timezone to assign to the `from` and `to` value. For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's user ID or email address. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "List a meeting host user's scheduled meetings. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n**Note** \n* This API **only** supports scheduled meetings. This API does not return information about instant meetings. \n* This API only returns a user's [unexpired meetings](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). \n\n \n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nList of meeting objects returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings?type=scheduled&page_size=30&next_page_token=<string>&page_number=<integer>&from=<date>&to=<date>&timezone=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"query": [
														{
															"key": "type",
															"value": "scheduled",
															"description": "The type of meeting. \n* `scheduled` - All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. \n* `live` - All the ongoing meetings. \n* `upcoming` - All upcoming meetings, including live meetings. \n* `upcoming_meetings` - All upcoming meetings, including live meetings. \n* `previous_meetings` - All the previous meetings."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "page_number",
															"value": "<integer>",
															"description": "The page number of the current page in the returned records."
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date."
														},
														{
															"key": "timezone",
															"value": "<string>",
															"description": "The timezone to assign to the `from` and `to` value. For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"meetings\": [\n    {\n      \"agenda\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<long>\",\n      \"join_url\": \"<string>\",\n      \"pmi\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"timezone\": \"<string>\",\n      \"topic\": \"<string>\",\n      \"type\": 8,\n      \"uuid\": \"<string>\"\n    },\n    {\n      \"agenda\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<long>\",\n      \"join_url\": \"<string>\",\n      \"pmi\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"timezone\": \"<string>\",\n      \"topic\": \"<string>\",\n      \"type\": 8,\n      \"uuid\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings?type=scheduled&page_size=30&next_page_token=<string>&page_number=<integer>&from=<date>&to=<date>&timezone=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"query": [
														{
															"key": "type",
															"value": "scheduled",
															"description": "The type of meeting. \n* `scheduled` - All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. \n* `live` - All the ongoing meetings. \n* `upcoming` - All upcoming meetings, including live meetings. \n* `upcoming_meetings` - All upcoming meetings, including live meetings. \n* `previous_meetings` - All the previous meetings."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "page_number",
															"value": "<integer>",
															"description": "The page number of the current page in the returned records."
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date."
														},
														{
															"key": "timezone",
															"value": "<string>",
															"description": "The timezone to assign to the `from` and `to` value. For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} not exist or not belong to this account.<br> <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings?type=scheduled&page_size=30&next_page_token=<string>&page_number=<integer>&from=<date>&to=<date>&timezone=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"query": [
														{
															"key": "type",
															"value": "scheduled",
															"description": "The type of meeting. \n* `scheduled` - All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. \n* `live` - All the ongoing meetings. \n* `upcoming` - All upcoming meetings, including live meetings. \n* `upcoming_meetings` - All upcoming meetings, including live meetings. \n* `previous_meetings` - All the previous meetings."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "page_number",
															"value": "<integer>",
															"description": "The page number of the current page in the returned records."
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date."
														},
														{
															"key": "timezone",
															"value": "<string>",
															"description": "The timezone to assign to the `from` and `to` value. For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a meeting",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"default_password\": false,\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 6,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"additional_data_center_regions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_notification\": true,\n    \"encryption_type\": \"enhanced_encryption\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": \"<boolean>\",\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/meetings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"meetings"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's user ID or email address. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "[Create a meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings) for a user. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n* A meeting's `start_url` value is the URL a host or an alternative host can use to start a meeting. The expiration time for the `start_url` value is **two hours** for all regular users.\n* For `custCreate` meeting hosts (users created with the `custCreate` parameter via the [**Create users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/userCreate) API), the expiration time of the `start_url` parameter is **90 days** from the generation of the `start_url`.\n\n**Note:** \n\nFor security reasons, the recommended way to programmatically get the updated `start_url` value after expiry is to call the [**Get a meeting**](/api-reference/zoom-api/methods#operation/meeting) API. Refer to the `start_url` value in the response. \n\n **100 requests per day**. The rate limit is applied against the `userId` of the **meeting host** used to make the request.\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nMeeting created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"default_password\": false,\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 6,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"additional_data_center_regions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_notification\": true,\n    \"encryption_type\": \"enhanced_encryption\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": \"<boolean>\",\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"assistant_id\": \"<string>\",\n  \"host_email\": \"<email>\",\n  \"id\": \"<long>\",\n  \"registration_url\": \"<string>\",\n  \"agenda\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"duration\": \"<integer>\",\n  \"h323_password\": \"<string>\",\n  \"join_url\": \"<string>\",\n  \"chat_join_url\": \"<string>\",\n  \"occurrences\": [\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"deleted\"\n    },\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"available\"\n    }\n  ],\n  \"password\": \"<string>\",\n  \"pmi\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 4,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 1,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"enhanced_encryption\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"toll\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 0,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\",\n      \"channel_id\": \"<string>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"start_url\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"visible\": \"<boolean>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"visible\": \"<boolean>\"\n    }\n  ],\n  \"type\": 2\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n**Error Code:** `3000` <br>\n Instant meetings do not support the `schedule_for` parameter, an",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"default_password\": false,\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 6,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"additional_data_center_regions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_notification\": true,\n    \"encryption_type\": \"enhanced_encryption\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": \"<boolean>\",\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"default_password\": false,\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 6,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"additional_data_center_regions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_notification\": true,\n    \"encryption_type\": \"enhanced_encryption\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": \"<boolean>\",\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests  \n\n ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"default_password\": false,\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 6,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"additional_data_center_regions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_notification\": true,\n    \"encryption_type\": \"enhanced_encryption\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": \"<boolean>\",\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/meetings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"meetings"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upcoming_meetings",
							"item": [
								{
									"name": "List upcoming meetings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/upcoming_meetings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"upcoming_meetings"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's user ID or email address. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)."
												}
											]
										},
										"description": "List a Zoom user's upcoming meetings. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n**Note**\n* This API includes the meetings that Zoom users schedule and the meetings they are invited to join.\n* This API **only** includes upcoming meetings within the next 24 hours.\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` List of upcoming meeting objects returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/upcoming_meetings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"upcoming_meetings"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"total_records\": \"<integer>\",\n  \"meetings\": [\n    {\n      \"id\": \"<long>\",\n      \"topic\": \"<string>\",\n      \"type\": 2,\n      \"start_time\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"timezone\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"join_url\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"topic\": \"<string>\",\n      \"type\": 1,\n      \"start_time\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"timezone\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"join_url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "pac",
							"item": [
								{
									"name": "List a user's PAC accounts",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/pac",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"pac"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's user ID or email address. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "Retrieve a list of a user's [personal audio conference (PAC)](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) accounts. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n PAC allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only. \n\n **Prerequisites** \n* A Pro or higher plan with an [Audio Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) subscription. \n* The [**Personal Audio Conference**](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference#h_01F5BPM447M6QDJXX50RSFXKJ3) setting enabled in the user's profile.\n\n**Scopes:** `pac:read:admin`,`pac:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \n PAC account list returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/pac",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"pac"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"pac_accounts\": [\n    {\n      \"conference_id\": \"<long>\",\n      \"dedicated_dial_in_number\": [\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        },\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        }\n      ],\n      \"global_dial_in_numbers\": [\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        },\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        }\n      ],\n      \"listen_only_password\": \"<string>\",\n      \"participant_password\": \"<string>\"\n    },\n    {\n      \"conference_id\": \"<long>\",\n      \"dedicated_dial_in_number\": [\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        },\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        }\n      ],\n      \"global_dial_in_numbers\": [\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        },\n        {\n          \"country\": \"<string>\",\n          \"number\": \"<string>\"\n        }\n      ],\n      \"listen_only_password\": \"<string>\",\n      \"participant_password\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `2024` <br>\n User does not have PAC enabled. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/pac",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"pac"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User does not exist: $userId <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/pac",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"pac"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "tsp",
							"item": [
								{
									"name": "settings",
									"item": [
										{
											"name": "Set global dial-in URL for a TSP user",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"audio_url\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp",
														"settings"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The userId or email address of the user."
														}
													]
												},
												"description": "A global dial-in page can provide a list of global access numbers using which audio conferencing can be conducted. By calling this API, you can set the url for the global dial-in page of a user whose Zoom account has TSP and special TSP with third-party audio conferencing options enabled. &lt;p&gt;&lt;/p&gt;\n\n\n**Scopes:** `tsp:write:admin`,`tsp:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**Status Code:** `204` **No Content**   \n \nURL set successfully.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"audio_url\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																"settings"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `2000` <br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n\n**Error Code:** `2024` <br>\nAcc",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"audio_url\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																"settings"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} not exist or not belong to this account.\n\n**Error Code:** `1120` <br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user did not a",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"audio_url\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																"settings"
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{tspId}",
									"item": [
										{
											"name": "Get a user's TSP account",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp",
														":tspId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
														},
														{
															"key": "tspId",
															"value": "2",
															"description": "(Required) TSP account ID."
														}
													]
												},
												"description": "Each user can have a maximum of two TSP accounts. Use this API to retrieve details of a specific TSP account enabled for a specific user.  \n   \n \n\n\n**Scopes:** `tsp:read:admin`,`tsp:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nTSP account retrieved successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"tollfree\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"toll\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"tsp_bridge\": \"EU_TSP_TB\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nThe TSP id provided does not exist.<br>\n\n**Error Code:** `300` <br>\nTSP Config does not exist.<br>\n\n**Error Code:** `2024` <br>\nAccount has not enabled TSP.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: $userId.<br>\n\n**Error Code:** `1120` <br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user i",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a user's TSP account",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp",
														":tspId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
														},
														{
															"key": "tspId",
															"value": "2",
															"description": "(Required) TSP account ID."
														}
													]
												},
												"description": "Delete a user's TSP account.  \n   \n \n\n\n**Scopes:** `tsp:write:admin`,`tsp:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**Status Code:** `204` **No Content**  \n \nTSP account deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `2024` <br>\nAccount not enable TSP.<br>\n\n**Error Code:** `300` <br>\nThe TSP id provided does not exist.<br>\n\n**Error Code:** `300` <br>\nTSP Config does not exist.<br>\n\n**Error Code:** `300` <b",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: $userId.<br>\n\n**Error Code:** `1120` <br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user i",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update a TSP account",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"toll\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp",
														":tspId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
														},
														{
															"key": "tspId",
															"value": "2",
															"description": "(Required) TSP account ID."
														}
													]
												},
												"description": "Update a user's TSP account.  \n   \n \n\n\n**Scopes:** `tsp:write:admin`,`tsp:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:**`204` **No Content**  \n \nTSP account updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"toll\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `2024` <br>\nAccount has not enabled TSP.<br>\n\n**Error Code:** `300` <br>\nThe TSP id provided does not exist.<br>\n\n**Error Code:** `300` <br>\nTSP Config does not exist.<br>\n\n**Error Code:** `30",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"toll\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: $userId.<br>\n\n**Error Code:** `1120` <br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user i",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"toll\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:userId/tsp/:tspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":userId",
																"tsp",
																":tspId"
															],
															"variable": [
																{
																	"key": "userId"
																},
																{
																	"key": "tspId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List user's TSP accounts",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/tsp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"tsp"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "A user can have a maximum of two TSP accounts. Use this API to list all TSP accounts of a user.  \n   \n \n\n\n**Scopes:** `tsp:read:admin`,`tsp:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nTSP account list returned successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tsp_accounts\": [\n    {\n      \"conference_code\": \"<string>\",\n      \"leader_pin\": \"<string>\",\n      \"dial_in_numbers\": [\n        {\n          \"code\": \"<string>\",\n          \"country_label\": \"<string>\",\n          \"number\": \"<string>\",\n          \"type\": \"toll\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"country_label\": \"<string>\",\n          \"number\": \"<string>\",\n          \"type\": \"media_link\"\n        }\n      ],\n      \"id\": \"1\",\n      \"tsp_bridge\": \"US_TSP_TB\"\n    },\n    {\n      \"conference_code\": \"<string>\",\n      \"leader_pin\": \"<string>\",\n      \"dial_in_numbers\": [\n        {\n          \"code\": \"<string>\",\n          \"country_label\": \"<string>\",\n          \"number\": \"<string>\",\n          \"type\": \"toll\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"country_label\": \"<string>\",\n          \"number\": \"<string>\",\n          \"type\": \"tollfree\"\n        }\n      ],\n      \"id\": \"1\",\n      \"tsp_bridge\": \"US_TSP_TB\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `2024` <br>\nAccount has not enabled TSP.\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: $userId.<br>\n\n**Error Code:** `1120` <br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user i",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a user's TSP account",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/tsp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"tsp"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "Add a user's TSP account.  \n   \n \n\n\n**Scopes:** `tsp:write:admin`,`tsp:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nTSP account added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"id\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"tollfree\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `2024` <br>\nAccount has not enabled TSP.<br>\n\n**Error Code:** `300` <br>\nMedia link is required for AT&T TSP accounts.<br>\n\n**Error Code:** `300` <br>\nYou can add a max of two tsp configs.\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: $userId.<br>\n\n**Error Code:** `1120` <br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user i",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conference_code\": \"<string>\",\n  \"leader_pin\": \"<string>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"country_label\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"media_link\"\n    }\n  ],\n  \"tsp_bridge\": \"US_TSP_TB\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/tsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"tsp"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "webinar_templates",
							"item": [
								{
									"name": "List webinar templates",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/webinar_templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"webinar_templates"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's ID. To get a user's ID, use the [**List users**](/docs/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me` value instead of the user ID value."
												}
											]
										},
										"description": "Display a list of a user's [webinar templates](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates). For user-level apps, pass [the `me` value](/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. When you schedule a webinar, save the settings for that webinar as a template for scheduling future webinars.  To use a template when scheduling a webinar, use the `id` value in this API response in the `template_id` field of the [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API. **Prerequisites:** * A Pro or a higher account with the [Zoom Webinar plan](https://zoom.us/pricing/webinar).\n\n**Scopes:** `webinar:read:admin`,`webinar:read`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  List of existing templates returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinar_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinar_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"templates\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<integer>\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br> <br>\n**Error Code:** `1001` <br>\n * User not exist: {userId}.\n* Use",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinar_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinar_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a webinar template",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"webinar_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/webinar_templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"webinar_templates"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user ID retrievable from the [List users](/api-reference/zoom-api/methods#operation/users) API."
												}
											]
										},
										"description": "Use this API to create a webinar template from an existing webinar. \n\n\n\n**Scopes:** `webinar:write:admin`,`webinar:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nWebinar template created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"webinar_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinar_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinar_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nWebinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.\n\n**Error Code:** `300` <br>\nYou can only",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"webinar_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinar_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinar_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\n* User does not exist. \n* User {userId} does not exist or does not belong to this account.\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"webinar_id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"save_recurrence\": false,\n  \"overwrite\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinar_templates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinar_templates"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "webinars",
							"item": [
								{
									"name": "List webinars",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/webinars?type=scheduled&page_size=30&page_number=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"webinars"
											],
											"query": [
												{
													"key": "type",
													"value": "scheduled",
													"description": "The type of webinar. \n* `scheduled` - All valid previous (unexpired) webinars, live webinars, and upcoming scheduled webinars. \n* `upcoming` - All upcoming webinars, including live webinars."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "**Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user's user ID or email address. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "List all the webinars scheduled by or on behalf a webinar host. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars let a host broadcast a Zoom meeting to up to 10,000 attendees. \n\n**Note** This API only returns a user's [unexpired webinars](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). \n\n **Prerequisites** \n* A Pro or higher plan with the webinar add-on.\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nList of webinar objects returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinars?type=scheduled&page_size=30&page_number=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinars"
													],
													"query": [
														{
															"key": "type",
															"value": "scheduled",
															"description": "The type of webinar. \n* `scheduled` - All valid previous (unexpired) webinars, live webinars, and upcoming scheduled webinars. \n* `upcoming` - All upcoming webinars, including live webinars."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"webinars\": [\n    {\n      \"agenda\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<long>\",\n      \"join_url\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"timezone\": \"<string>\",\n      \"topic\": \"<string>\",\n      \"type\": 5,\n      \"uuid\": \"<string>\",\n      \"is_simulive\": \"<boolean>\"\n    },\n    {\n      \"agenda\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"host_id\": \"<string>\",\n      \"id\": \"<long>\",\n      \"join_url\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"timezone\": \"<string>\",\n      \"topic\": \"<string>\",\n      \"type\": 5,\n      \"uuid\": \"<string>\",\n      \"is_simulive\": \"<boolean>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} not exist or not belong to this account. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinars?type=scheduled&page_size=30&page_number=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinars"
													],
													"query": [
														{
															"key": "type",
															"value": "scheduled",
															"description": "The type of webinar. \n* `scheduled` - All valid previous (unexpired) webinars, live webinars, and upcoming scheduled webinars. \n* `upcoming` - All upcoming webinars, including live webinars."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a webinar",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 5,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 5\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"only\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/webinars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"webinars"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
												}
											]
										},
										"description": "Schedule a webinar for a user who is a webinar host. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. \n\n**Rate limit:**\nUp to a maximum of **100 requests per day**. The rate limit is applied to the `userId` of the **webinar host** used to make the request. \n\n**Prerequisites:** \n* A Pro or higher plan with a [Webinar plan](https://zoom.us/webinar) add-on.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nWebinar created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 5,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 5\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"only\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinars"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"host_email\": \"<email>\",\n  \"host_id\": \"<string>\",\n  \"id\": \"<long>\",\n  \"registrants_confirmation_email\": \"<boolean>\",\n  \"template_id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"agenda\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"duration\": \"<integer>\",\n  \"join_url\": \"<string>\",\n  \"occurrences\": [\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"deleted\"\n    },\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"available\"\n    }\n  ],\n  \"password\": \"<string>\",\n  \"encrypted_passcode\": \"<string>\",\n  \"h323_passcode\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 7,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 3\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"notify_registrants\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"all\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"start_url\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>\n**Error Code:** `300` <br>\n The",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 5,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 5\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"only\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinars"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 5,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 5\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"only\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinars"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests  \n\n **Error Code:** `429` <br>\n A maximum of ({rateLimitNumber}) webinars can be created and updated for a single user in one day. <br>\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 2,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 5,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"schedule_for\": \"<string>\",\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 5\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 1\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"only\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/webinars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"webinars"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "meetings",
			"item": [
				{
					"name": "{meetingId}",
					"item": [
						{
							"name": "recordings",
							"item": [
								{
									"name": "analytics_details",
									"item": [
										{
											"name": "Get Meeting Recording's Analytics Details",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_details?page_size=30&next_page_token=<string>&from=<date>&to=<date>&type=by_download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														"analytics_details"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date for the monthly range to query. The maximum range can be a month."
														},
														{
															"key": "type",
															"value": "by_download",
															"description": "The type of analytics details: \n* `by_view` &mdash; by_view. \n* `by_download` &mdash; by_download."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
														}
													]
												},
												"description": "Use this API to return a meeting recording's [analytics details](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163). **Maximum duration: 1 Month**. To access a password-protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer token in the Authorization header. For example, \n\n `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` \n\n \n\n**Scopes:** `recording:read:admin`,`recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nAnalytics Detail listed successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_details?page_size=30&next_page_token=<string>&from=<date>&to=<date>&type=by_download",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"analytics_details"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "The end date for the monthly range to query. The maximum range can be a month."
																},
																{
																	"key": "type",
																	"value": "by_download",
																	"description": "The type of analytics details: \n* `by_view` &mdash; by_view. \n* `by_download` &mdash; by_download."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"from\": \"<date>\",\n  \"to\": \"<date>\",\n  \"next_page_token\": \"<string>\",\n  \"page_size\": \"<integer>\",\n  \"total_records\": \"<integer>\",\n  \"analytics_details\": [\n    {\n      \"date_time\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"duration\": \"<integer>\"\n    },\n    {\n      \"date_time\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"duration\": \"<integer>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser not found on this account: {accountId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_details?page_size=30&next_page_token=<string>&from=<date>&to=<date>&type=by_download",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"analytics_details"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "The end date for the monthly range to query. The maximum range can be a month."
																},
																{
																	"key": "type",
																	"value": "by_download",
																	"description": "The type of analytics details: \n* `by_view` &mdash; by_view. \n* `by_download` &mdash; by_download."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_details?page_size=30&next_page_token=<string>&from=<date>&to=<date>&type=by_download",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"analytics_details"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "The end date for the monthly range to query. The maximum range can be a month."
																},
																{
																	"key": "type",
																	"value": "by_download",
																	"description": "The type of analytics details: \n* `by_view` &mdash; by_view. \n* `by_download` &mdash; by_download."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "analytics_summary",
									"item": [
										{
											"name": "Get Meeting Recording's Analytics Summary",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_summary?from=<date>&to=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														"analytics_summary"
													],
													"query": [
														{
															"key": "from",
															"value": "<date>",
															"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "The end date for the monthly range to query. The maximum range can be a month."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
														}
													]
												},
												"description": "Use this API to return a meeting recording's [analytics summary](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163). **Maximum duration: 1 Month**. To access a password-protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer token in the Authorization header. For example, \n\n `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` \n\n \n\n**Scopes:** `recording:read:admin`,`recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nAnalytics Summary listed successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_summary?from=<date>&to=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"analytics_summary"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "The end date for the monthly range to query. The maximum range can be a month."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"from\": \"<date>\",\n  \"to\": \"<date>\",\n  \"analytics_summary\": [\n    {\n      \"date\": \"<string>\",\n      \"views_total_count\": \"<integer>\",\n      \"downloads_total_count\": \"<integer>\"\n    },\n    {\n      \"date\": \"<string>\",\n      \"views_total_count\": \"<integer>\",\n      \"downloads_total_count\": \"<integer>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser not found on this account: {accountId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_summary?from=<date>&to=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"analytics_summary"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "The end date for the monthly range to query. The maximum range can be a month."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/analytics_summary?from=<date>&to=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"analytics_summary"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "The end date for the monthly range to query. The maximum range can be a month."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "registrants",
									"item": [
										{
											"name": "questions",
											"item": [
												{
													"name": "Get registration questions",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId",
																	"value": "<string>",
																	"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
																}
															]
														},
														"description": "For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\nUse this API to retrieve a list of questions that are displayed for users to complete when registering to view the recording of a specific meeting.  \n \n\n\n**Scopes:** `recording:read:admin`,`recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `200`  \n \nRecording Registrant Question object returned.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/questions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		"registrants",
																		"questions"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"short\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}"
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/questions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		"registrants",
																		"questions"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update registration questions",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"short\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId",
																	"value": "<string>",
																	"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
																}
															]
														},
														"description": "For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\nUse this API to update registration questions that are to be answered by users while registering to view a recording.  \n \n\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `200`  \n \nRecording Registrant Questions Updated",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"short\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/questions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		"registrants",
																		"questions"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"short\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"industry\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/questions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		"registrants",
																		"questions"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "status",
											"item": [
												{
													"name": "Update registrant's status",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"approve\",\n  \"registrants\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants",
																"status"
															],
															"variable": [
																{
																	"key": "meetingId",
																	"value": "<long>",
																	"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
																}
															]
														},
														"description": "A registrant can either be approved or denied from viewing the [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) recording. \nUse this API to update a registrant's status.\n\n\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `204`  \n \nRegistrant status updated.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"approve\",\n  \"registrants\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		"registrants",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"approve\",\n  \"registrants\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		"registrants",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List recording registrants",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants?status=approved&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														"registrants"
													],
													"query": [
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status: \n* `pending` &mdash; The registration is pending. \n* `approved` &mdash; The registrant is approved. \n* `denied` &mdash; The registration is denied."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Use this API to list registrants of a past meeting's [on-demand cloud recordings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-recordings). Users must [register](/docs/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate) to view the recordings. \n\n \n\n**Scopes:** `recording:read:admin`,`recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \n Registrants returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants?status=approved&page_size=30&page_number=1&next_page_token=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants"
															],
															"query": [
																{
																	"key": "status",
																	"value": "approved",
																	"description": "Query by the registrant's status: \n* `pending` &mdash; The registration is pending. \n* `approved` &mdash; The registrant is approved. \n* `denied` &mdash; The registration is denied."
																},
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "page_number",
																	"value": "1",
																	"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"51-100\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"\",\n      \"role_in_purchase_process\": \"Decision Maker\",\n      \"state\": \"<string>\",\n      \"status\": \"pending\",\n      \"zip\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"251-500\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"No timeframe\",\n      \"role_in_purchase_process\": \"Not involved\",\n      \"state\": \"<string>\",\n      \"status\": \"denied\",\n      \"zip\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants?status=approved&page_size=30&page_number=1&next_page_token=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants"
															],
															"query": [
																{
																	"key": "status",
																	"value": "approved",
																	"description": "Query by the registrant's status: \n* `pending` &mdash; The registration is pending. \n* `approved` &mdash; The registrant is approved. \n* `denied` &mdash; The registration is denied."
																},
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "page_number",
																	"value": "1",
																	"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a recording registrant",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"country\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"no_of_employees\": \"1-20\",\n  \"org\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"purchasing_time_frame\": \"Within a month\",\n  \"role_in_purchase_process\": \"\",\n  \"state\": \"<string>\",\n  \"status\": \"pending\",\n  \"zip\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														"registrants"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Cloud Recordings of past Zoom Meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](/docs/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate) to view these recordings.\n\nUse this API to register a user to gain access to **On-demand Cloud Recordings** of a past meeting.  \n \n\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `201`   \n \nRegistration submitted.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"country\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"no_of_employees\": \"1-20\",\n  \"org\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"purchasing_time_frame\": \"Within a month\",\n  \"role_in_purchase_process\": \"\",\n  \"state\": \"<string>\",\n  \"status\": \"pending\",\n  \"zip\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<long>\",\n  \"registrant_id\": \"<string>\",\n  \"share_url\": \"<string>\",\n  \"topic\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"country\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"no_of_employees\": \"1-20\",\n  \"org\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"purchasing_time_frame\": \"Within a month\",\n  \"role_in_purchase_process\": \"\",\n  \"state\": \"<string>\",\n  \"status\": \"pending\",\n  \"zip\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/registrants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"registrants"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "Get meeting recording settings",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														"settings"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) The meeting ID enables you to get cloud recording of a:\n- Meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\n- Webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double encode** the UUID before making an API request. "
														}
													]
												},
												"description": "Retrieves settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  \n   \n \n\n\n**Scopes:** `recording:read:admin`,`recording:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`    Meeting recording settings returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"settings"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"approval_type\": 2,\n  \"authentication_domains\": \"<string>\",\n  \"authentication_option\": \"<string>\",\n  \"on_demand\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"recording_authentication\": \"<boolean>\",\n  \"send_email_to_host\": \"<boolean>\",\n  \"share_recording\": \"publicly\",\n  \"show_social_share_buttons\": \"<boolean>\",\n  \"topic\": \"<string>\",\n  \"viewer_download\": \"<boolean>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"settings"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update meeting recording settings",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"approval_type\": 0,\n  \"authentication_domains\": \"<string>\",\n  \"authentication_option\": \"<string>\",\n  \"on_demand\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"recording_authentication\": \"<boolean>\",\n  \"send_email_to_host\": \"<boolean>\",\n  \"share_recording\": \"none\",\n  \"show_social_share_buttons\": \"<boolean>\",\n  \"topic\": \"<string>\",\n  \"viewer_download\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														"settings"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double encode** the UUID before making an API request. "
														}
													]
												},
												"description": "Updates settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).      \n\n**Scopes:** `recording:write`,`recording:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`    Meeting recording setting's updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"approval_type\": 0,\n  \"authentication_domains\": \"<string>\",\n  \"authentication_option\": \"<string>\",\n  \"on_demand\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"recording_authentication\": \"<boolean>\",\n  \"send_email_to_host\": \"<boolean>\",\n  \"share_recording\": \"none\",\n  \"show_social_share_buttons\": \"<boolean>\",\n  \"topic\": \"<string>\",\n  \"viewer_download\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"settings"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"approval_type\": 0,\n  \"authentication_domains\": \"<string>\",\n  \"authentication_option\": \"<string>\",\n  \"on_demand\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"recording_authentication\": \"<boolean>\",\n  \"send_email_to_host\": \"<boolean>\",\n  \"share_recording\": \"none\",\n  \"show_social_share_buttons\": \"<boolean>\",\n  \"topic\": \"<string>\",\n  \"viewer_download\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																"settings"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{recordingId}",
									"item": [
										{
											"name": "status",
											"item": [
												{
													"name": "Recover a single recording",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"recover\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																":recordingId",
																"status"
															],
															"variable": [
																{
																	"key": "meetingId",
																	"value": "<string>",
																	"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
																},
																{
																	"key": "recordingId",
																	"value": "<string>",
																	"description": "(Required) The recording ID."
																}
															]
														},
														"description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover a single recording file from the meeting.  \n \n\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `204`   \n  Meeting recording recovered.\n\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"recover\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		":recordingId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "recordingId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.\n\n**Error Code:** `3309` <br>\nNot enough cloud storage available. Either purchase additional storage or delete cloud recordings to",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"recover\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		":recordingId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "recordingId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting.\n\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"action\": \"recover\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"meetings",
																		":meetingId",
																		"recordings",
																		":recordingId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "recordingId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Delete a meeting recording file",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId?action=trash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings",
														":recordingId"
													],
													"query": [
														{
															"key": "action",
															"value": "trash",
															"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
														},
														{
															"key": "recordingId",
															"value": "<string>",
															"description": "(Required) The recording ID."
														}
													]
												},
												"description": "Delete a specific recording file from a meeting.&lt;p style=&quot;background-color:#e1f5fe; color:#01579b; padding:8px&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; To use this API, you must enable the &lt;b&gt;The host can delete cloud recordings&lt;/b&gt; setting. You can find this setting in the &lt;b&gt;Recording&lt;/b&gt; tab of the &lt;b&gt;Settings&lt;/b&gt; interface in the [Zoom web portal](https://zoom.us/).&lt;/p&gt;\n\n\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nRecording deleted. \n\n**Error Code:** `200`  \n \nYou do not have the right permissions.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId?action=trash",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																":recordingId"
															],
															"query": [
																{
																	"key": "action",
																	"value": "trash",
																	"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "recordingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `204`   \n \nMeeting recording file deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId?action=trash",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																":recordingId"
															],
															"query": [
																{
																	"key": "action",
																	"value": "trash",
																	"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "recordingId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n\n**Error Code:** `3303` <br>\nYou can not delete an uncompleted meeting. <br/>\n\n**Error Code:** `3332` <br>\nThis recording was",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId?action=trash",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																":recordingId"
															],
															"query": [
																{
																	"key": "action",
																	"value": "trash",
																	"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "recordingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting.\n\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/recordings/:recordingId?action=trash",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"recordings",
																":recordingId"
															],
															"query": [
																{
																	"key": "action",
																	"value": "trash",
																	"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "recordingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get meeting recordings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/recordings?include_fields=<string>&ttl=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"recordings"
											],
											"query": [
												{
													"key": "include_fields",
													"value": "<string>",
													"description": "The `download_access_token` value for downloading the meeting's recordings."
												},
												{
													"key": "ttl",
													"value": "<integer>",
													"description": "The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the `download_access_token` value."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) To get a meeting's cloud recordings, provide the meeting ID or UUID. If providing the meeting ID instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar's ID or UUID. If providing the webinar ID instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//` (example: `/ajXp112QmuoKj4854875==`), **[double encode](/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the UUID** before making an API request. "
												}
											]
										},
										"description": "Returns all of a meeting's [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4).\n\n Use the `download_url` property listed in the response to download the recording files.  To access a passcode-protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer token in the Authorization header. \n \n Example:  `curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz`  \n\n**Scopes:** `recording:read`,`phone_recording:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \nRecording object returned. \n\n**Error Code:** `200`   \n \nYou do not have the right permissions.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?include_fields=<string>&ttl=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "<string>",
															"description": "The `download_access_token` value for downloading the meeting's recordings."
														},
														{
															"key": "ttl",
															"value": "<integer>",
															"description": "The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the `download_access_token` value."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"host_id\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"recording_count\": \"<integer>\",\n  \"start_time\": \"<dateTime>\",\n  \"topic\": \"<string>\",\n  \"total_size\": \"<long>\",\n  \"type\": \"5\",\n  \"uuid\": \"<string>\",\n  \"recording_play_passcode\": \"<string>\",\n  \"recording_files\": [\n    {\n      \"deleted_time\": \"<string>\",\n      \"download_url\": \"<string>\",\n      \"file_path\": \"<string>\",\n      \"file_size\": \"<number>\",\n      \"file_type\": \"CHAT_MESSAGE\",\n      \"file_extension\": \"VTT\",\n      \"id\": \"<string>\",\n      \"meeting_id\": \"<string>\",\n      \"play_url\": \"<string>\",\n      \"recording_end\": \"<string>\",\n      \"recording_start\": \"<string>\",\n      \"recording_type\": \"audio_interpretation\",\n      \"status\": \"completed\"\n    },\n    {\n      \"deleted_time\": \"<string>\",\n      \"download_url\": \"<string>\",\n      \"file_path\": \"<string>\",\n      \"file_size\": \"<number>\",\n      \"file_type\": \"TB\",\n      \"file_extension\": \"VTT\",\n      \"id\": \"<string>\",\n      \"meeting_id\": \"<string>\",\n      \"play_url\": \"<string>\",\n      \"recording_end\": \"<string>\",\n      \"recording_start\": \"<string>\",\n      \"recording_type\": \"audio_transcript\",\n      \"status\": \"completed\"\n    }\n  ],\n  \"download_access_token\": \"<string>\",\n  \"password\": \"<string>\",\n  \"participant_audio_files\": [\n    {\n      \"download_url\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"file_path\": \"<string>\",\n      \"file_size\": \"<number>\",\n      \"file_type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"play_url\": \"<string>\",\n      \"recording_end\": \"<dateTime>\",\n      \"recording_start\": \"<dateTime>\",\n      \"status\": \"completed\"\n    },\n    {\n      \"download_url\": \"<string>\",\n      \"file_name\": \"<string>\",\n      \"file_path\": \"<string>\",\n      \"file_size\": \"<number>\",\n      \"file_type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"play_url\": \"<string>\",\n      \"recording_end\": \"<dateTime>\",\n      \"recording_start\": \"<dateTime>\",\n      \"status\": \"completed\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User not found on this account: {accountId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?include_fields=<string>&ttl=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "<string>",
															"description": "The `download_access_token` value for downloading the meeting's recordings."
														},
														{
															"key": "ttl",
															"value": "<integer>",
															"description": "The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the `download_access_token` value."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User \"{userId}\" does not exist or does not belong to this account. <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?include_fields=<string>&ttl=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "<string>",
															"description": "The `download_access_token` value for downloading the meeting's recordings."
														},
														{
															"key": "ttl",
															"value": "<integer>",
															"description": "The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the `download_access_token` value."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete meeting recordings",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/recordings?action=trash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"recordings"
											],
											"query": [
												{
													"key": "action",
													"value": "trash",
													"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance. \n\nTo get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)** the UUID before making an API request. "
												}
											]
										},
										"description": "Delete all recording files of a meeting.  \n   \n \n\n**Prerequisites**:\n* Cloud Recording should be enabled on the user's account.  \n \n\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \nRecordings deleted. \n\n**Error Code:** `200`   \n \nYou do not have the right permission.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?action=trash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "action",
															"value": "trash",
															"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `204`   \n \nMeeting recording deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?action=trash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "action",
															"value": "trash",
															"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}. <br/>\n\n**Error Code:** `3332` <br>\nThis recording was selected for a simulive webinar. You cannot delete or trash it.\n\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?action=trash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "action",
															"value": "trash",
															"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting.\n\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/recordings?action=trash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"recordings"
													],
													"query": [
														{
															"key": "action",
															"value": "trash",
															"description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "batch_polls",
							"item": [
								{
									"name": "Perform batch poll creation",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"polls\": [\n    {\n      \"anonymous\": false,\n      \"poll_type\": 1,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"short_answer\"\n        }\n      ],\n      \"title\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/batch_polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"batch_polls"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Polls allow the meeting host to survey attendees. Create batch [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`   \n \nMeeting Poll Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"polls\": [\n    {\n      \"anonymous\": false,\n      \"poll_type\": 1,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"short_answer\"\n        }\n      ],\n      \"title\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/batch_polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"batch_polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"polls\": [\n    {\n      \"anonymous\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"poll_type\": 2,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": \"<boolean>\",\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": \"<boolean>\",\n          \"type\": \"short_answer\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": \"<boolean>\",\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": \"<boolean>\",\n          \"type\": \"matching\"\n        }\n      ],\n      \"status\": \"sharing\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"anonymous\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"poll_type\": 1,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": \"<boolean>\",\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": \"<boolean>\",\n          \"type\": \"matching\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": \"<boolean>\",\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": \"<boolean>\",\n          \"type\": \"fill_in_the_blank\"\n        }\n      ],\n      \"status\": \"ended\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid Meeting ID.\n\n**Error Code:** `300` <br>\nMeeting id does not exist.\n\n**Error Code:** `3000` <br>\nCannot access meeting information.\n\n**Error Code:** `3001` <br>\nMeeting does ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"polls\": [\n    {\n      \"anonymous\": false,\n      \"poll_type\": 1,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"short_answer\"\n        }\n      ],\n      \"title\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/batch_polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"batch_polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "batch_registrants",
							"item": [
								{
									"name": "Perform batch registration",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants_confirmation_email\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/batch_registrants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"batch_registrants"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) Unique identifier of the meeting (Meeting Number)."
												}
											]
										},
										"description": "Register up to 30 registrants at once for a meeting that requires [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).   \n \n\n**Prerequisites:**  \n \n* The meeting host must be a Licensed user.\n* The meeting must require registration and should be of type `2`, i.e., they should be scheduled meetings. Instant meetings and Recurring meetings are not supported by this API.  \n   \n \n\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**   \n \nRegistrants added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants_confirmation_email\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"registrants\": [\n    {\n      \"email\": \"<string>\",\n      \"join_url\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"participant_pin_code\": \"<long>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"join_url\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"participant_pin_code\": \"<long>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3038` <br>\nMeeting is over, you can not register now. If you have any questions, please contact the Meeting host.<br><br>\n\n**Error Code:** `303` <br>\nThis API can only be used for scheduled m",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants_confirmation_email\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}.<br>\n\n**Error Code:** `3043` <br>\nMeeting has reached maximum attendee capacity.<br>\n\n**Error Code:** `404` <br>\nRegistration has not been enabled",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants_confirmation_email\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "invitation",
							"item": [
								{
									"name": "Get meeting invitation",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"invitation"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Retrieve the meeting invitation note for a specific meeting.\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nMeeting invitation returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/invitation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"invitation"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"invitation\": \"<string>\",\n  \"sip_links\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/invitation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"invitation"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "invite_links",
							"item": [
								{
									"name": "Create meeting's invite links",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attendees\": [\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"ttl\": 7200\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/invite_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"invite_links"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Create a batch of invitation links for a meeting.\n\n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`   \n \nMeeting invitation links created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"attendees\": [\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"ttl\": 7200\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/invite_links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"invite_links"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"attendees\": [\n    {\n      \"join_url\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"join_url\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n* Meeting ID does not exist. \n* Invalid meeting ID.\n\n**Error Code:** `3000` <br>\nCannot access webinar information.\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"attendees\": [\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"ttl\": 7200\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/invite_links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"invite_links"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "jointoken",
							"item": [
								{
									"name": "live_streaming",
									"item": [
										{
											"name": "Get a meeting's join token for live streaming",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/live_streaming",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"jointoken",
														"live_streaming"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Get a meeting's join token to allow live streaming. The join token allows a recording bot implemented using Zoom meeting SDK to connect to a Zoom meeting &quot;hosted by the issuer of the token&quot;, and can call the streaming method automatically. It supports both regular live streaming, and raw streaming. \n\n**Prerequisites:** \n* A Pro or higher plan for the meeting host. \n* The **Allow livestreaming of meetings** user setting enabled in the Zoom web portal.\n\n**Scopes:** `meeting_token:read:admin:live_streaming`,`meeting_token:read:live_streaming`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nMeeting live streaming token returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/live_streaming",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"live_streaming"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"expire_in\": 120,\n  \"token\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid meeting ID.\n\n**Error Code:** `3000` <br>\nCannot access Webinar information.\n\n**Error Code:** `124` <br>\nThis API only supports OAuth2 authorization.\n\n**Error Code:** `3000` ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/live_streaming",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"live_streaming"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nMeeting ID does not exist.\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/live_streaming",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"live_streaming"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "local_archiving",
									"item": [
										{
											"name": "Get a meeting's archive token for local archiving",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_archiving",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"jointoken",
														"local_archiving"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Get a meeting's archive token to allow local archiving. The archive token allows a meeting SDK app or bot to get archive permission to access the meeting's raw audio and video media stream in real-time. \n\n**Prerequisites:** \n* A Pro or higher plan for the meeting host. \n* The **Archive meetings and webinars** account setting enabled in the Zoom web portal.\n\n**Scopes:** `meeting_token:read:admin:local_archiving`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nMeeting local archiving token returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_archiving",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"local_archiving"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"expire_in\": 120,\n  \"token\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid meeting ID.\n\n**Error Code:** `3000` <br>\nCannot access Webinar information.\n\n**Error Code:** `124` <br>\nThis API only supports OAuth2 authorization.\n\n**Error Code:** `3000` ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_archiving",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"local_archiving"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nMeeting ID does not exist.\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_archiving",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"local_archiving"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "local_recording",
									"item": [
										{
											"name": "Get a meeting's join token for local recording",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_recording?bypass_waiting_room=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"jointoken",
														"local_recording"
													],
													"query": [
														{
															"key": "bypass_waiting_room",
															"value": "<boolean>",
															"description": "Whether to bypass the waiting room."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Get a meeting's join token to allow for local recording. The join token lets a recording bot implemented using Zoom Meeting SDK to connect to a Zoom meeting. The recording bot can then automatically start locally recording. This supports both regular and raw local recording types. \n\n**Prerequisites:** \n* The **Local recording** user setting enabled in the Zoom web portal.\n\n**Scopes:** `meeting_token:read:local_recording`,`meeting_token:read:admin:local_recording`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nMeeting local recording token returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_recording?bypass_waiting_room=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"local_recording"
															],
															"query": [
																{
																	"key": "bypass_waiting_room",
																	"value": "<boolean>",
																	"description": "Whether to bypass the waiting room."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"expire_in\": 120,\n  \"token\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access Webinar information. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Err",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_recording?bypass_waiting_room=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"local_recording"
															],
															"query": [
																{
																	"key": "bypass_waiting_room",
																	"value": "<boolean>",
																	"description": "Whether to bypass the waiting room."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/jointoken/local_recording?bypass_waiting_room=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"jointoken",
																"local_recording"
															],
															"query": [
																{
																	"key": "bypass_waiting_room",
																	"value": "<boolean>",
																	"description": "Whether to bypass the waiting room."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "livestream",
							"item": [
								{
									"name": "status",
									"item": [
										{
											"name": "Update livestream status",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"start\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"layout\": \"follow_host\",\n    \"close_caption\": \"burnt-in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream",
														"status"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Update the status of a meeting's livestream.  \n\n**Prerequisites:**\n* Meeting host must have a Pro license.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204` <br> Meeting livestream updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"start\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"layout\": \"follow_host\",\n    \"close_caption\": \"burnt-in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/livestream/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"livestream",
																"status"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n**Error Code:** `4400` <br>\n En",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"start\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"layout\": \"follow_host\",\n    \"close_caption\": \"burnt-in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/livestream/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"livestream",
																"status"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"start\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"layout\": \"follow_host\",\n    \"close_caption\": \"burnt-in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/livestream/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"livestream",
																"status"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests  \n\n ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"start\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"layout\": \"follow_host\",\n    \"close_caption\": \"burnt-in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/livestream/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"livestream",
																"status"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get livestream details",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"livestream"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) Unique identifier of the meeting."
												}
											]
										},
										"description": "Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Get a meeting's livestream configuration details such as Stream URL, Stream Key and Page URL.  \n   \n \n**Prerequisites:**  \n \n* Meeting host must be a licensed user with a Pro or higher plan.  \n \n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the meeting.  \n   \n \n\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nLive Stream details returned.\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page_url\": \"<string>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nMissing meetingId<br>\nInvalid meetingId<br><br>\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}\n\n**Error Code:** `3161` <br>\nMeeting hosting and sched",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} does not exist.\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a livestream",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"livestream"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Update a meeting's livestream information. Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform.\n\n**Prerequisites:** \n* Meeting host must have a Pro license.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`  \n \nMeeting livestream updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n\n**Error Code:** `3000` <br>\nCannot access webinar info.\n\n**Error Code:** `3161` <br>\nMeeting hosting and scheduling capabili",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} does not exist.\n\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"livestream"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "meeting_summary",
							"item": [
								{
									"name": "Get a meeting summary",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/meeting_summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"meeting_summary"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "The meeting's universally unique ID (UUID). When you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
												}
											]
										},
										"description": "Displays information about a meeting summary.\n\n**Prerequisites**:\n* Host user type must be Pro or higher plan.\n* The Meeting Summary with AI Companion feature enabled in the host's account.\n* E2ee meetings do not have summary feature enabled.\n\n**Scopes:** `meeting_summary:read:admin`,`meeting_summary:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`Meeting Poll object returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/meeting_summary",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"meeting_summary"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"meeting_host_id\": \"<string>\",\n  \"meeting_host_email\": \"<email>\",\n  \"meeting_uuid\": \"<string>\",\n  \"meeting_id\": \"<long>\",\n  \"meeting_topic\": \"<string>\",\n  \"meeting_start_time\": \"<dateTime>\",\n  \"meeting_end_time\": \"<dateTime>\",\n  \"summary_start_time\": \"<dateTime>\",\n  \"summary_end_time\": \"<dateTime>\",\n  \"summary_created_time\": \"<dateTime>\",\n  \"summary_last_modified_time\": \"<dateTime>\",\n  \"summary_title\": \"<string>\",\n  \"summary_overview\": \"<string>\",\n  \"summary_details\": [\n    {\n      \"label\": \"<string>\",\n      \"summary\": \"<string>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"summary\": \"<string>\"\n    }\n  ],\n  \"next_steps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"edited_summary\": {\n    \"summary_details\": \"<string>\",\n    \"next_steps\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "polls",
							"item": [
								{
									"name": "{pollId}",
									"item": [
										{
											"name": "Get a meeting poll",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls",
														":pollId"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														},
														{
															"key": "pollId",
															"value": "<string>",
															"description": "(Required) The poll ID"
														}
													]
												},
												"description": "Polls allow the meeting host to survey attendees. Retrieve information about a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  \n   \n \n\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nMeeting Poll object returned",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"status\": \"ended\",\n  \"anonymous\": false,\n  \"poll_type\": 1,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"long_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rating_scale\"\n    }\n  ],\n  \"title\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `4400` <br>\nMeeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface.\n\n**Error Code:** `3161` <br>\nMeeting hosti",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nMeeting Poll not found.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update a meeting poll",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls",
														":pollId"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														},
														{
															"key": "pollId",
															"value": "<string>",
															"description": "(Required) The poll ID"
														}
													]
												},
												"description": "Polls allow the meeting host to survey attendees. Update information of a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)  \n   \n \n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \nMeeting Poll Updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `4400` <br>\n* Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced meeting polls disabled. To e",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nMeeting Poll not found\n\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a meeting poll",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls",
														":pollId"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														},
														{
															"key": "pollId",
															"value": "<string>",
															"description": "(Required) The poll ID"
														}
													]
												},
												"description": "Polls allow the meeting host to survey attendees. Delete a meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  \n \n**Prerequisites**:  \n \n* Host user type must be **Pro**.\n* Polling feature should be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \nMeeting Poll deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `4400` <br>\nMeeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface.\n\n**Error Code:** `3161` <br>\nMeeting hosti",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nMeeting Poll not found\n\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List meeting polls",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/polls?anonymous=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"polls"
											],
											"query": [
												{
													"key": "anonymous",
													"value": "<boolean>",
													"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Polls allow the meeting host to survey attendees. List all [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) of a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro** or higher plan.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:**   \n \nList polls of a Meeting  returned",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls?anonymous=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls"
													],
													"query": [
														{
															"key": "anonymous",
															"value": "<boolean>",
															"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"polls\": [\n    {\n      \"id\": \"<string>\",\n      \"status\": \"ended\",\n      \"anonymous\": false,\n      \"poll_type\": 2,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"fill_in_the_blank\"\n        }\n      ],\n      \"title\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"status\": \"ended\",\n      \"anonymous\": false,\n      \"poll_type\": 1,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"multiple\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        }\n      ],\n      \"title\": \"<string>\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `4400` <br>\nMeeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface.\n\n**Error Code:** `3161` <br>\nMeeting hosti",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls?anonymous=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls"
													],
													"query": [
														{
															"key": "anonymous",
															"value": "<boolean>",
															"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nMeeting Poll not found\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls?anonymous=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls"
													],
													"query": [
														{
															"key": "anonymous",
															"value": "<boolean>",
															"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a meeting poll",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"polls"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Polls allow the meeting host to survey attendees. Create a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`   \n \nMeeting Poll Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"status\": \"ended\",\n  \"anonymous\": false,\n  \"poll_type\": 1,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"long_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rating_scale\"\n    }\n  ],\n  \"title\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `4400` <br>\n* Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced meeting polls disabled. To e",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nMeeting not found\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"polls"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "registrants",
							"item": [
								{
									"name": "questions",
									"item": [
										{
											"name": "List registration questions ",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants",
														"questions"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "List registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  \n \n\n\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nMeeting Registrant Question object returned",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"address\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"role_in_purchase_process\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update registration questions",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"address\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"role_in_purchase_process\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants",
														"questions"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Update registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  \n   \n \n\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`  \n \nMeeting Registrant Questions Updated",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"address\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"role_in_purchase_process\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3161` <br>\nMeeting hosting and scheduling capabilities are not allowed for your user account.\n\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"address\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"role_in_purchase_process\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"address\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"role_in_purchase_process\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "status",
									"item": [
										{
											"name": "Update registrant's status",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants/status?occurrence_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants",
														"status"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														}
													]
												},
												"description": "Update a meeting registrant's status by either approving, cancelling or denying a registrant from joining the meeting.  \n   \n \n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`  \n \nRegistrant status updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n\n**Error Code:** `3000` <br>\nCannot access meeting information.<br>\n\n**Error Code:** `3003` <br>\nYou're not the meeting host.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: {userId}.<br>\n\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{registrantId}",
									"item": [
										{
											"name": "Get a meeting registrant",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants",
														":registrantId"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<long>",
															"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
														},
														{
															"key": "registrantId",
															"value": "<string>",
															"description": "(Required) The registrant ID."
														}
													]
												},
												"description": "Retrieve details on a specific user who has registered for the meeting. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n\n**Prerequisites:** \n* The account must have a Meeting plan\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "Success.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																":registrantId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"country\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"no_of_employees\": \"5,001-10,000\",\n  \"org\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"purchasing_time_frame\": \"4-6 months\",\n  \"role_in_purchase_process\": \"Influencer\",\n  \"state\": \"<string>\",\n  \"status\": \"denied\",\n  \"zip\": \"<string>\",\n  \"create_time\": \"<dateTime>\",\n  \"join_url\": \"<string>\",\n  \"participant_pin_code\": \"<long>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: \"{accountId}\"<br> <br>\n**Error Code:** `3003` <br>\n You are not the meeting host.<br> <br>\n**Error Code:** `3000` <br>\n >\nCannot access mee",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																":registrantId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n Meeting host does not exist: \"{userId}\" <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																":registrantId"
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a meeting registrant",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId?occurrence_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants",
														":registrantId"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting occurrence ID."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<integer>",
															"description": "(Required) The meeting ID."
														},
														{
															"key": "registrantId",
															"value": "<string>",
															"description": "(Required) The meeting registrant ID."
														}
													]
												},
												"description": "Delete a meeting registrant.  \n   \n \n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP status code:** `204`   \n \nOK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nOnly available for paid users: {0}.<br>\n\n**Error Code:** `300` <br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Erro",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List meeting registrants",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_id=<string>&status=approved&page_size=30&page_number=1&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"registrants"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "status",
													"value": "approved",
													"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "A host or a user with admin permission can require [registration for a Zoom meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). List users that have registered for a meeting.  \n   \n \n\n\n**Scopes:** `meeting:read:admin`,`meeting:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nSuccessfully listed meeting registrants.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_id=<string>&status=approved&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"1,001-5,000\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"\",\n      \"role_in_purchase_process\": \"Decision Maker\",\n      \"state\": \"<string>\",\n      \"status\": \"denied\",\n      \"zip\": \"<string>\",\n      \"create_time\": \"<dateTime>\",\n      \"join_url\": \"<string>\",\n      \"participant_pin_code\": \"<long>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"1-20\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"1-3 months\",\n      \"role_in_purchase_process\": \"Not involved\",\n      \"state\": \"<string>\",\n      \"status\": \"pending\",\n      \"zip\": \"<string>\",\n      \"create_time\": \"<dateTime>\",\n      \"join_url\": \"<string>\",\n      \"participant_pin_code\": \"<long>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br> <br>\n**Error Code:** `3003` <br>\n You are not the meeting host.<br> <br>\n**Error Code:** `3000` <br>\n Cannot access meetin",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_id=<string>&status=approved&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n Meeting host does not exist: {userId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_id=<string>&status=approved&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a meeting registrant",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"No timeframe\",\n  \"role_in_purchase_process\": \"Evaluator/Recommender\",\n  \"language\": \"Tr-TR\",\n  \"auto_approve\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_ids=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"registrants"
											],
											"query": [
												{
													"key": "occurrence_ids",
													"value": "<string>",
													"description": "A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/docs/api-reference/zoom-api/methods#operation/meeting) API."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Create and submit a user's registration to a meeting. See [Customizing webinar registration](https://support.zoom.us/hc/en-us/articles/202835649-Customizing-webinar-registration) for details on how to set the requirements for these fields. Note that there is a maximum limit of 4,999 registrants per meeting and users will see an error if the meeting's capacity is reached. \n\n **Prerequisites:** \n* The host must be a **Licensed** user type.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`   \n \nMeeting registration created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"No timeframe\",\n  \"role_in_purchase_process\": \"Evaluator/Recommender\",\n  \"language\": \"Tr-TR\",\n  \"auto_approve\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/docs/api-reference/zoom-api/methods#operation/meeting) API."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"join_url\": \"<string>\",\n  \"registrant_id\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"topic\": \"<string>\",\n  \"occurrences\": [\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"<string>\"\n    },\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"<string>\"\n    }\n  ],\n  \"participant_pin_code\": \"<long>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}\n\n**Error Code:** `3003` <br>\nYou are not the meeting host.\n\n**Error Code:** `3043` <br>\nMeeting has reached maximum attendee capac",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"No timeframe\",\n  \"role_in_purchase_process\": \"Evaluator/Recommender\",\n  \"language\": \"Tr-TR\",\n  \"auto_approve\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/docs/api-reference/zoom-api/methods#operation/meeting) API."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nMeeting host does not exist: {userId}\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"No timeframe\",\n  \"role_in_purchase_process\": \"Evaluator/Recommender\",\n  \"language\": \"Tr-TR\",\n  \"auto_approve\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/docs/api-reference/zoom-api/methods#operation/meeting) API."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "sip_dialing",
							"item": [
								{
									"name": "Get a meeting SIP URI with Passcode",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"passcode\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/sip_dialing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"sip_dialing"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Get a meeting's SIP URI.  The URI consists of the meeting ID, (optional, user-supplied) passcode and participant identifier code.  The API return data also includes additional fields to indicate whether the API caller has a valid Cloud Room Connector subscription, the participant identifier code from the URI, and the SIP URI validity period (in seconds). \n\n\n\n**Scopes:** `meeting:write:sip_dialing`,`meeting:write:admin:sip_dialing`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \nMeeting's encoded SIP URI returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"passcode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/sip_dialing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"sip_dialing"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"sip_dialing\": \"<string>\",\n  \"paid_crc_plan_participant\": \"<boolean>\",\n  \"participant_identifier_code\": \"<string>\",\n  \"expire_in\": \"<long>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid meeting ID.\n\n**Error Code:** `3000` <br>\nThe meeting's SIP URI does not exist: {meetingId}.\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"passcode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/sip_dialing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"sip_dialing"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nMeeting ID does not exist.\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}\n\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"passcode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/sip_dialing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"sip_dialing"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Update meeting status",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"recover\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"status"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Update the status of a meeting.  \n   \n \n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`  \n \nMeeting updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"recover\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"status"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.\n\n**Error Code:** `3000` <br>\nCannot access meeting info.\n\n**Error Code:** `3003` <br>\nYou're not the meeting host.\n\n**Error Code:",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"recover\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"status"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nMeeting host does not exist: {userId}.\n\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"recover\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"status"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "survey",
							"item": [
								{
									"name": "Get a meeting survey",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/survey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"survey"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be more than 10 digits."
												}
											]
										},
										"description": "Display information about a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting).  **Prerequisites:** * The host has a **Pro** license. * The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature is enabled on the host's account. * The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \n Meeting survey object returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"short_answer\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"third_party_survey\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access Webinar information. <br>\n**Error Code:** `3000` <br>\n Meeting survey disabled. To enable this feature, enable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a meeting survey",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/survey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"survey"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Delete a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). \n\n **Prerequisites:** \n* The host must be a **Pro** user type. \n* The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature enabled in the host's account. \n* The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`   \n \n Meeting survey deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid meeting ID.\n\n**Error Code:** `3000` <br>\n* Cannot access Webinar information. <br>\n * Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nMeeting ID does not exist.\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}.\n\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a meeting survey",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"short_answer\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"third_party_survey\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/survey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"survey"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be over 10 digits."
												}
											]
										},
										"description": "Update a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting).  **Prerequisites:** * The host must be a **Pro** user type. * The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature is enabled in the host's account. * The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`   \n \n Meeting survey updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"short_answer\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"third_party_survey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `300` <br>\n Invalid third party survey: {third_party_survey}. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabiliti",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"short_answer\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"third_party_survey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"short_answer\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"third_party_survey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "token",
							"item": [
								{
									"name": "Get meeting's token",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId/token?type=closed_caption_token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId",
												"token"
											],
											"query": [
												{
													"key": "type",
													"value": "closed_caption_token",
													"description": "The meeting token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
												}
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<long>",
													"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
												}
											]
										},
										"description": "Get a meeting's [closed caption token (caption URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service). This token lets you use a third-party service to stream text to their closed captioning software to the Zoom meeting. \n\n**Prerequisites:** \n* The **Closed captioning** setting enabled in the Zoom web portal. \n* The **Allow use of caption API Token to integrate with 3rd-party Closed Captioning services** setting enabled.\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \nMeeting token returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/token?type=closed_caption_token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"token"
													],
													"query": [
														{
															"key": "type",
															"value": "closed_caption_token",
															"description": "The meeting token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid meeting ID.\n\n**Error Code:** `3000` <br>\n* Cannot access Webinar information. <br>\n* Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/token?type=closed_caption_token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"token"
													],
													"query": [
														{
															"key": "type",
															"value": "closed_caption_token",
															"description": "The meeting token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nMeeting ID does not exist.\n\n**Error Code:** `3001` <br>\nMeeting does not exist: {meetingId}\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingId/token?type=closed_caption_token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingId",
														"token"
													],
													"query": [
														{
															"key": "type",
															"value": "closed_caption_token",
															"description": "The meeting token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
														}
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get a meeting",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meetingId"
									],
									"query": [
										{
											"key": "occurrence_id",
											"value": "<string>",
											"description": "Meeting occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)."
										},
										{
											"key": "show_previous_occurrences",
											"value": "<boolean>",
											"description": "Set this field's value to `true` to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). "
										}
									],
									"variable": [
										{
											"key": "meetingId",
											"value": "<long>",
											"description": "(Required) The meeting's ID. \n\n When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be more than 10 digits."
										}
									]
								},
								"description": "Retrieve the given meeting's details. \n \n \n\n\n**Scopes:** `meeting:read`,`meeting:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nMeeting object returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)."
												},
												{
													"key": "show_previous_occurrences",
													"value": "<boolean>",
													"description": "Set this field's value to `true` to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). "
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"assistant_id\": \"<string>\",\n  \"host_email\": \"<email>\",\n  \"host_id\": \"<string>\",\n  \"id\": \"<long>\",\n  \"uuid\": \"<string>\",\n  \"agenda\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"duration\": \"<integer>\",\n  \"encrypted_password\": \"<string>\",\n  \"h323_password\": \"<string>\",\n  \"join_url\": \"<string>\",\n  \"chat_join_url\": \"<string>\",\n  \"occurrences\": [\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"available\"\n    },\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"deleted\"\n    }\n  ],\n  \"password\": \"<string>\",\n  \"pmi\": \"<string>\",\n  \"pre_schedule\": false,\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 4,\n    \"monthly_week_day\": 6,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"deny\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"e2ee\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"toll\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 0,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\",\n      \"channel_id\": \"<string>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"push_change_to_calendar\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"start_url\": \"<string>\",\n  \"status\": \"started\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"visible\": \"<boolean>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"visible\": \"<boolean>\"\n    }\n  ],\n  \"type\": 2\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)."
												},
												{
													"key": "show_previous_occurrences",
													"value": "<boolean>",
													"description": "Set this field's value to `true` to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). "
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)."
												},
												{
													"key": "show_previous_occurrences",
													"value": "<boolean>",
													"description": "Set this field's value to `true` to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). "
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a meeting",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&schedule_for_reminder=<boolean>&cancel_meeting_reminder=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meetingId"
									],
									"query": [
										{
											"key": "occurrence_id",
											"value": "<string>",
											"description": "The meeting or webinar occurrence ID."
										},
										{
											"key": "schedule_for_reminder",
											"value": "<boolean>",
											"description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification."
										},
										{
											"key": "cancel_meeting_reminder",
											"value": "<boolean>",
											"description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`."
										}
									],
									"variable": [
										{
											"key": "meetingId",
											"value": "<long>",
											"description": "(Required) The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits."
										}
									]
								},
								"description": "Delete a meeting.  \n   \n \n\n\n**Scopes:** `meeting:write:admin`,`meeting:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**HTTP Status Code**: `204`   \n \nMeeting deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&schedule_for_reminder=<boolean>&cancel_meeting_reminder=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "schedule_for_reminder",
													"value": "<boolean>",
													"description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification."
												},
												{
													"key": "cancel_meeting_reminder",
													"value": "<boolean>",
													"description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n\n**Error Code:** `3000` <br>\nCannot access meeting information.<br>Invalid occurrence_id.<br>\n\n**Error Code:** `3002` <br>\nSo",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&schedule_for_reminder=<boolean>&cancel_meeting_reminder=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "schedule_for_reminder",
													"value": "<boolean>",
													"description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification."
												},
												{
													"key": "cancel_meeting_reminder",
													"value": "<boolean>",
													"description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: {userId}.<br>\n\n**Error Code:** `3001` <br>\nMeeting with this {meetingId} is not found or has expired.\n\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>&schedule_for_reminder=<boolean>&cancel_meeting_reminder=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "schedule_for_reminder",
													"value": "<boolean>",
													"description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification."
												},
												{
													"key": "cancel_meeting_reminder",
													"value": "<boolean>",
													"description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a meeting",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"approve\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"e2ee\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										":meetingId"
									],
									"query": [
										{
											"key": "occurrence_id",
											"value": "<string>",
											"description": "Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}."
										}
									],
									"variable": [
										{
											"key": "meetingId",
											"value": "<long>",
											"description": "(Required) The meeting's ID. \n\n When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be greater than 10 digits."
										}
									]
								},
								"description": "Update meeting details.\n\n**Note** \n* The `start_time` value **must** be a future date. If the value is omitted or a date is in the past, the API ignores this value and does **not** update any recurring meetings. \n* The `recurrence` object is **required**.\n* This API has a rate limit of **100 requests per day**. You can update a meeting for a maximum of **100 times within a 24-hour period**. \n\n\n\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204`  \n \nMeeting updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"approve\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"e2ee\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n**Error Code:** `300` <br>\n The value that you entered in the `schedule_for` field is invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"approve\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"e2ee\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"approve\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"e2ee\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests  \n\n ",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"pre_schedule\": false,\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_hosts_email_notification\": true,\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"approved_or_denied_countries_or_regions\": {\n      \"approved_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"denied_list\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enable\": \"<boolean>\",\n      \"method\": \"approve\"\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_exception\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\",\n        \"join_url\": \"<string>\"\n      }\n    ],\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"breakout_room\": {\n      \"enable\": \"<boolean>\",\n      \"rooms\": [\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"participants\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"calendar_type\": 2,\n    \"close_registration\": false,\n    \"cn_meeting\": false,\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"custom_keys\": [\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"key\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"email_notification\": true,\n    \"encryption_type\": \"e2ee\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"focus_mode\": \"<boolean>\",\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"global_dial_in_numbers\": [\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      },\n      {\n        \"city\": \"<string>\",\n        \"country\": \"<string>\",\n        \"country_name\": \"<string>\",\n        \"number\": \"<string>\",\n        \"type\": \"tollfree\"\n      }\n    ],\n    \"host_video\": \"<boolean>\",\n    \"in_meeting\": false,\n    \"jbh_time\": 10,\n    \"join_before_host\": false,\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"meeting_authentication\": \"<boolean>\",\n    \"meeting_invitees\": [\n      {\n        \"email\": \"<email>\"\n      },\n      {\n        \"email\": \"<email>\"\n      }\n    ],\n    \"mute_upon_entry\": false,\n    \"participant_video\": \"<boolean>\",\n    \"private_meeting\": \"<boolean>\",\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registration_type\": 1,\n    \"show_share_button\": \"<boolean>\",\n    \"use_pmi\": false,\n    \"waiting_room\": false,\n    \"watermark\": false,\n    \"host_save_video_order\": \"<boolean>\",\n    \"internal_meeting\": false,\n    \"continuous_meeting_chat\": {\n      \"enable\": \"<boolean>\",\n      \"auto_add_invited_external_users\": \"<boolean>\"\n    },\n    \"participant_focused_meeting\": false,\n    \"resources\": [\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      },\n      {\n        \"resource_type\": \"whiteboard\",\n        \"resource_id\": \"<string>\",\n        \"permission_level\": \"editor\"\n      }\n    ],\n    \"auto_start_meeting_summary\": false,\n    \"auto_start_ai_companion_questions\": false\n  },\n  \"start_time\": \"<dateTime>\",\n  \"template_id\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 2\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/meetings/:meetingId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												":meetingId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}."
												}
											],
											"variable": [
												{
													"key": "meetingId"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{meetingUUID}",
					"item": [
						{
							"name": "recordings",
							"item": [
								{
									"name": "status",
									"item": [
										{
											"name": "Recover meeting recordings",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"recover\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/meetings/:meetingUUID/recordings/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"meetings",
														":meetingUUID",
														"recordings",
														"status"
													],
													"variable": [
														{
															"key": "meetingUUID",
															"value": "<string>",
															"description": "(Required) The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. For example, after a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID when using the meeting UUID for other API calls."
														}
													]
												},
												"description": "Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover all deleted [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a specific meeting.  \n   \n \n**Prerequisites**:  \n \n* A Pro user with Cloud Recording enabled.\n\n**Scopes:** `recording:write:admin`,`recording:write`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nRecordings recovered. \n\n**Error Code:** `200`  \n \nYou do not have the right permissions.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"recover\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingUUID/recordings/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingUUID",
																"recordings",
																"status"
															],
															"variable": [
																{
																	"key": "meetingUUID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `204`   \n \nDeleted recordings of the meeting recovered.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"recover\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingUUID/recordings/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingUUID",
																"recordings",
																"status"
															],
															"variable": [
																{
																	"key": "meetingUUID"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.\n\n**Error Code:** `3309` <br>\nNot enough cloud storage available. Either purchase additional storage or delete cloud recordings to",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"recover\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingUUID/recordings/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingUUID",
																"recordings",
																"status"
															],
															"variable": [
																{
																	"key": "meetingUUID"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: {userId}.<br>\n\n**Error Code:** `3301` <br>\nThere is no recording for this meeting.\n\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"recover\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/meetings/:meetingUUID/recordings/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"meetings",
																":meetingUUID",
																"recordings",
																"status"
															],
															"variable": [
																{
																	"key": "meetingUUID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "meeting_summaries",
					"item": [
						{
							"name": "List meeting summaries of an account",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/meeting_summaries?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										"meeting_summaries"
									],
									"query": [
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
										},
										{
											"key": "from",
											"value": "<dateTime>",
											"description": "The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
										},
										{
											"key": "to",
											"value": "<dateTime>",
											"description": "The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
										}
									]
								},
								"description": "Generates a list of all meeting summaries for an account.\n\n**Prerequisites**\n* Host user type must be Pro or higher plan.\n* The Meeting Summary with AI Companion feature enabled in the host's account.\n* E2ee meetings do not have summary feature enabled.\n\n**Scopes:** `meeting_summary:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`\n\nSuccessfully listed meeting summaries of an account.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/meeting_summaries?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												"meeting_summaries"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												},
												{
													"key": "from",
													"value": "<dateTime>",
													"description": "The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
												},
												{
													"key": "to",
													"value": "<dateTime>",
													"description": "The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"page_size\": 30,\n  \"next_page_token\": \"<string>\",\n  \"from\": \"<dateTime>\",\n  \"to\": \"<dateTime>\",\n  \"summaries\": [\n    {\n      \"meeting_host_id\": \"<string>\",\n      \"meeting_host_email\": \"<email>\",\n      \"meeting_uuid\": \"<string>\",\n      \"meeting_id\": \"<long>\",\n      \"meeting_topic\": \"<string>\",\n      \"meeting_start_time\": \"<dateTime>\",\n      \"meeting_end_time\": \"<dateTime>\",\n      \"summary_start_time\": \"<dateTime>\",\n      \"summary_end_time\": \"<dateTime>\",\n      \"summary_created_time\": \"<dateTime>\",\n      \"summary_last_modified_time\": \"<dateTime>\"\n    },\n    {\n      \"meeting_host_id\": \"<string>\",\n      \"meeting_host_email\": \"<email>\",\n      \"meeting_uuid\": \"<string>\",\n      \"meeting_id\": \"<long>\",\n      \"meeting_topic\": \"<string>\",\n      \"meeting_start_time\": \"<dateTime>\",\n      \"meeting_end_time\": \"<dateTime>\",\n      \"summary_start_time\": \"<dateTime>\",\n      \"summary_end_time\": \"<dateTime>\",\n      \"summary_created_time\": \"<dateTime>\",\n      \"summary_last_modified_time\": \"<dateTime>\"\n    }\n  ]\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `3000` <br>\n Meeting summary disabled. To enable this feature, enable the",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/meeting_summaries?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												"meeting_summaries"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												},
												{
													"key": "from",
													"value": "<dateTime>",
													"description": "The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
												},
												{
													"key": "to",
													"value": "<dateTime>",
													"description": "The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `1001` <br>\n User {userId} not exist or not belong to this account. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/meetings/meeting_summaries?page_size=30&next_page_token=<string>&from=<dateTime>&to=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"meetings",
												"meeting_summaries"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												},
												{
													"key": "from",
													"value": "<dateTime>",
													"description": "The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
												},
												{
													"key": "to",
													"value": "<dateTime>",
													"description": "The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "live_meetings",
			"item": [
				{
					"name": "{meetingId}",
					"item": [
						{
							"name": "chat",
							"item": [
								{
									"name": "messages",
									"item": [
										{
											"name": "{messageId}",
											"item": [
												{
													"name": "Delete a live meeting message",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId?file_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"live_meetings",
																":meetingId",
																"chat",
																"messages",
																":messageId"
															],
															"query": [
																{
																	"key": "file_ids",
																	"value": "<string>",
																	"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																}
															],
															"variable": [
																{
																	"key": "meetingId",
																	"value": "<long>",
																	"description": "(Required) The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits."
																},
																{
																	"key": "messageId",
																	"value": "<string>",
																	"description": "(Required) The live meeting chat message's unique identifier (UUID), in base64-encoded format."
																}
															]
														},
														"description": "Delete a message in a live meeting, based on ID. \n\n**Prerequisites:** \n* Have Zoom enable the DLP for the in-meeting chat feature to use this API.\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `204`   \n \nMeeting chat message deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId?file_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_meetings",
																		":meetingId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"query": [
																		{
																			"key": "file_ids",
																			"value": "<string>",
																			"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																		}
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n * Only available for Paid accounts. \n* DLP is not enabled. <br>\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId?file_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_meetings",
																		":meetingId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"query": [
																		{
																			"key": "file_ids",
																			"value": "<string>",
																			"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																		}
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Meeting {meetingId} does not exist. <br>\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId?file_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_meetings",
																		":meetingId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"query": [
																		{
																			"key": "file_ids",
																			"value": "<string>",
																			"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																		}
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a live meeting message",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"message_content\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"live_meetings",
																":meetingId",
																"chat",
																"messages",
																":messageId"
															],
															"variable": [
																{
																	"key": "meetingId",
																	"value": "<long>",
																	"description": "(Required) The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits."
																},
																{
																	"key": "messageId",
																	"value": "<string>",
																	"description": "(Required) The live meeting chat message's unique identifier (UUID), in base64-encoded format."
																}
															]
														},
														"description": "Update a message in a live meeting, based on ID. **Prerequisites:** * Have Zoom enable the DLP for the in-meeting chat feature to use this API.\n\n**Scopes:** `meeting:write`,`meeting:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `204` <br>\n Meeting chat message updated.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"message_content\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_meetings",
																		":meetingId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n DLP is not enabled on this account <br>\n",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"message_content\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_meetings",
																		":meetingId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Meeting {meetingId} does not exist. <br>\n",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"message_content\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/live_meetings/:meetingId/chat/messages/:messageId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_meetings",
																		":meetingId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"variable": [
																		{
																			"key": "meetingId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "events",
							"item": [
								{
									"name": "Use in-meeting controls",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"method\": \"<string>\",\n  \"params\": {\n    \"contacts\": [\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      }\n    ],\n    \"invitee_name\": \"<string>\",\n    \"phone_number\": \"<string>\",\n    \"invite_options\": {\n      \"require_greeting\": true,\n      \"require_pressing_one\": true\n    },\n    \"call_type\": \"<string>\",\n    \"device_ip\": \"<string>\",\n    \"h323_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\"\n    },\n    \"sip_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\",\n      \"from_uri\": \"<string>\",\n      \"additional_headers\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/live_meetings/:meetingId/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"live_meetings",
												":meetingId",
												"events"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<string>",
													"description": "(Required) The live meeting's ID."
												}
											]
										},
										"description": "Control [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls) features. In-meeting controls include starting and stopping a recording, pausing and resuming a recording, and inviting participants. \n\n**Note:** This API's recording control only works for cloud recordings. It does **not** work for local recordings. \n\n**Prerequisites:**\n* The meeting **must** be a live meeting **except** inviting participants to the meeting through [call out (phone)/(room system)]. \n* Recording control: [Cloud recording](https://support.zoom.us/hc/en-us/articles/360060231472-Enabling-cloud-recording) must be enabled on the account. \n* The user calling this API must be the host or an alternative meeting host.\n\n \n\n**Scopes:** `meeting:write`,`meeting:write:admin`,`meeting:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
									},
									"response": [
										{
											"name": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"method\": \"<string>\",\n  \"params\": {\n    \"contacts\": [\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      }\n    ],\n    \"invitee_name\": \"<string>\",\n    \"phone_number\": \"<string>\",\n    \"invite_options\": {\n      \"require_greeting\": true,\n      \"require_pressing_one\": true\n    },\n    \"call_type\": \"<string>\",\n    \"device_ip\": \"<string>\",\n    \"h323_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\"\n    },\n    \"sip_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\",\n      \"from_uri\": \"<string>\",\n      \"additional_headers\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/live_meetings/:meetingId/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"live_meetings",
														":meetingId",
														"events"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n * Meeting id does not exist.<br>\n* Invalid meeting id.<br>\n* Meeting does not exist.<br>\n* No permission.<br>\n* This API is not available for this account, please contact Zoom su",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"method\": \"<string>\",\n  \"params\": {\n    \"contacts\": [\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      }\n    ],\n    \"invitee_name\": \"<string>\",\n    \"phone_number\": \"<string>\",\n    \"invite_options\": {\n      \"require_greeting\": true,\n      \"require_pressing_one\": true\n    },\n    \"call_type\": \"<string>\",\n    \"device_ip\": \"<string>\",\n    \"h323_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\"\n    },\n    \"sip_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\",\n      \"from_uri\": \"<string>\",\n      \"additional_headers\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/live_meetings/:meetingId/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"live_meetings",
														":meetingId",
														"events"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Meeting {meetingId} is not found or has expired. <br>\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"method\": \"<string>\",\n  \"params\": {\n    \"contacts\": [\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      }\n    ],\n    \"invitee_name\": \"<string>\",\n    \"phone_number\": \"<string>\",\n    \"invite_options\": {\n      \"require_greeting\": true,\n      \"require_pressing_one\": true\n    },\n    \"call_type\": \"<string>\",\n    \"device_ip\": \"<string>\",\n    \"h323_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\"\n    },\n    \"sip_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\",\n      \"from_uri\": \"<string>\",\n      \"additional_headers\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/live_meetings/:meetingId/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"live_meetings",
														":meetingId",
														"events"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `429` <br>\n undefined \n\n ",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"method\": \"<string>\",\n  \"params\": {\n    \"contacts\": [\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"id\": \"<string>\"\n      }\n    ],\n    \"invitee_name\": \"<string>\",\n    \"phone_number\": \"<string>\",\n    \"invite_options\": {\n      \"require_greeting\": true,\n      \"require_pressing_one\": true\n    },\n    \"call_type\": \"<string>\",\n    \"device_ip\": \"<string>\",\n    \"h323_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\"\n    },\n    \"sip_headers\": {\n      \"from_display_name\": \"<string>\",\n      \"to_display_name\": \"<string>\",\n      \"from_uri\": \"<string>\",\n      \"additional_headers\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/live_meetings/:meetingId/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"live_meetings",
														":meetingId",
														"events"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "report",
			"item": [
				{
					"name": "activities",
					"item": [
						{
							"name": "Get sign In / sign out activity report",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/activities?from=<date>&to=<date>&page_size=<integer>&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"activities"
									],
									"query": [
										{
											"key": "from",
											"value": "<date>",
											"description": "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months."
										},
										{
											"key": "to",
											"value": "<date>",
											"description": "End date up to which you would like to view the activity logs report."
										},
										{
											"key": "page_size",
											"value": "<integer>",
											"description": "The number of records to be returned within a single API call"
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Next page token is used to paginate through large result sets"
										}
									]
								},
								"description": "Retrieve a list of sign in / sign out activity logs [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports) of users under a Zoom account.  \n \n**Prerequisites**  \n \n* Pro or higher plan.  \n \n\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nSuccess",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/activities?from=<date>&to=<date>&page_size=<integer>&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"activities"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "End date up to which you would like to view the activity logs report."
												},
												{
													"key": "page_size",
													"value": "<integer>",
													"description": "The number of records to be returned within a single API call"
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Next page token is used to paginate through large result sets"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"activity_logs\": [\n    {\n      \"client_type\": \"<string>\",\n      \"email\": \"<email>\",\n      \"ip_address\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"Sign out\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"client_type\": \"<string>\",\n      \"email\": \"<email>\",\n      \"ip_address\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"Sign out\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"from\": \"<string>\",\n  \"next_page_token\": \"<string>\",\n  \"page_size\": \"<integer>\",\n  \"to\": \"<string>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/activities?from=<date>&to=<date>&page_size=<integer>&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"activities"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "End date up to which you would like to view the activity logs report."
												},
												{
													"key": "page_size",
													"value": "<integer>",
													"description": "The number of records to be returned within a single API call"
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Next page token is used to paginate through large result sets"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "billing",
					"item": [
						{
							"name": "invoices",
							"item": [
								{
									"name": "Get billing invoice reports",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/billing/invoices?billing_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"billing",
												"invoices"
											],
											"query": [
												{
													"key": "billing_id",
													"value": "<string>",
													"description": "(Required) Unique Identifier of the Billing Report. Retrieve this ID from the response of **Get Billing Reports** API request. \n\n"
												}
											]
										},
										"description": "Get department billing invoices reports for a specific billing period. Provide the `billing_id` of the billing period for which you would like to retrieve the invoices for. This ID can be retrieved from **Get Billing Reports** API. \n\n**Prerequisites:**  \n \n* Pro or a higher account with Department Billing option enabled. Contact the Zoom Support team to enable this feature.\n\n\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nBilling Invoice reports returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/billing/invoices?billing_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"billing",
														"invoices"
													],
													"query": [
														{
															"key": "billing_id",
															"value": "<string>",
															"description": "(Required) Unique Identifier of the Billing Report. Retrieve this ID from the response of **Get Billing Reports** API request. \n\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"currency\": \"<string>\",\n  \"invoices\": [\n    {\n      \"end_date\": \"<date>\",\n      \"invoice_charge_name\": \"<string>\",\n      \"invoice_number\": \"<string>\",\n      \"quantity\": \"<integer>\",\n      \"start_date\": \"<date>\",\n      \"tax_amount\": \"<string>\",\n      \"total_amount\": \"<string>\"\n    },\n    {\n      \"end_date\": \"<date>\",\n      \"invoice_charge_name\": \"<string>\",\n      \"invoice_number\": \"<string>\",\n      \"quantity\": \"<integer>\",\n      \"start_date\": \"<date>\",\n      \"tax_amount\": \"<string>\",\n      \"total_amount\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `5010` <br>\nReport does not exist.\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/billing/invoices?billing_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"billing",
														"invoices"
													],
													"query": [
														{
															"key": "billing_id",
															"value": "<string>",
															"description": "(Required) Unique Identifier of the Billing Report. Retrieve this ID from the response of **Get Billing Reports** API request. \n\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get billing reports",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/billing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"billing"
									]
								},
								"description": "Get department billing reports of a Zoom account.\n\n**Prerequisites:**  \n \n* Pro or a higher account with Department Billing option enabled. Contact Zoom Support team for details.\n\n\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200` **OK**  \n \nBilling report returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/billing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"billing"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"billing_reports\": [\n    {\n      \"end_date\": \"<date>\",\n      \"id\": \"<string>\",\n      \"start_date\": \"<date>\",\n      \"tax_amount\": \"<string>\",\n      \"total_amount\": \"<string>\",\n      \"type\": 1\n    },\n    {\n      \"end_date\": \"<date>\",\n      \"id\": \"<string>\",\n      \"start_date\": \"<date>\",\n      \"tax_amount\": \"<string>\",\n      \"total_amount\": \"<string>\",\n      \"type\": 0\n    }\n  ],\n  \"currency\": \"<string>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/billing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"billing"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "cloud_recording",
					"item": [
						{
							"name": "Get cloud recording usage report",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/cloud_recording?from=<date>&to=<date>&group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"cloud_recording"
									],
									"query": [
										{
											"key": "from",
											"value": "<date>",
											"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
										},
										{
											"key": "to",
											"value": "<date>",
											"description": "(Required) End date."
										},
										{
											"key": "group_id",
											"value": "<string>",
											"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
										}
									]
								},
								"description": "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports that is one day earlier than the current date and for the most recent period of 6 months. The date gap between from and to dates should be smaller or equal to 30 days.   \n \n**Prerequisites**  \n \n* Pro or higher plan.  \n \n\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nCloud Recording Report Returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/cloud_recording?from=<date>&to=<date>&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"cloud_recording"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"<date>\",\n  \"to\": \"<date>\",\n  \"cloud_recording_storage\": [\n    {\n      \"date\": \"<date>\",\n      \"free_usage\": \"<string>\",\n      \"plan_usage\": \"<string>\",\n      \"usage\": \"<string>\"\n    },\n    {\n      \"date\": \"<date>\",\n      \"free_usage\": \"<string>\",\n      \"plan_usage\": \"<string>\",\n      \"usage\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.<br>\n’\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/cloud_recording?from=<date>&to=<date>&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"cloud_recording"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "daily",
					"item": [
						{
							"name": "Get daily usage report",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/daily?year=<integer>&month=<integer>&group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"daily"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "Year for this report"
										},
										{
											"key": "month",
											"value": "<integer>",
											"description": "Month for this report"
										},
										{
											"key": "group_id",
											"value": "<string>",
											"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
										}
									]
								},
								"description": "Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of new users, meetings, participants, and meeting minutes.  \n \n**Prerequisites**  \n \n* Pro or higher plan.  \n \n\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nDaily report retrieved.  \n \nThis is only available for paid accounts:{accountId}.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/daily?year=<integer>&month=<integer>&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"daily"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>",
													"description": "Year for this report"
												},
												{
													"key": "month",
													"value": "<integer>",
													"description": "Month for this report"
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dates\": [\n    {\n      \"date\": \"<date>\",\n      \"meeting_minutes\": \"<integer>\",\n      \"meetings\": \"<integer>\",\n      \"new_users\": \"<integer>\",\n      \"participants\": \"<integer>\"\n    },\n    {\n      \"date\": \"<date>\",\n      \"meeting_minutes\": \"<integer>\",\n      \"meetings\": \"<integer>\",\n      \"new_users\": \"<integer>\",\n      \"participants\": \"<integer>\"\n    }\n  ],\n  \"month\": \"<integer>\",\n  \"year\": \"<integer>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nDaily report can only be provided for a month that falls within the recent 6 months.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n’\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/daily?year=<integer>&month=<integer>&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"daily"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>",
													"description": "Year for this report"
												},
												{
													"key": "month",
													"value": "<integer>",
													"description": "Month for this report"
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "meetings",
					"item": [
						{
							"name": "{meetingId}",
							"item": [
								{
									"name": "participants",
									"item": [
										{
											"name": "Get meeting participant reports",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "include_fields",
															"value": "registrant_id",
															"description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)."
														}
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
														}
													]
												},
												"description": "Return a report of a past meeting with two or more participants, including the host. To return a report for past meeting with only **one** participant, use the [**List meeting participants**](/docs/api-reference/zoom-api/ma#operation/dashboardMeetingParticipants) API. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](/docs/api-reference/other-references/legacy-business-associate-agreements). \n\n**Prerequisites:** \n* A Pro or a higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nMeeting participants report returned.  \n \nOnly available for Paid or ZMP account: {accountId}.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"participants"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "include_fields",
																	"value": "registrant_id",
																	"description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"participants\": [\n    {\n      \"customer_key\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"status\": \"in_waiting_room\",\n      \"user_email\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"bo_mtg_id\": \"<string>\",\n      \"participant_user_id\": \"<string>\"\n    },\n    {\n      \"customer_key\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"status\": \"in_waiting_room\",\n      \"user_email\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"bo_mtg_id\": \"<string>\",\n      \"participant_user_id\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `12702` <br>\n Can not access meeting a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission.<b",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"participants"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "include_fields",
																	"value": "registrant_id",
																	"description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Meeting  {MeetingId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"participants"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "include_fields",
																	"value": "registrant_id",
																	"description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)."
																}
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "polls",
									"item": [
										{
											"name": "Get meeting poll reports",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId",
														"polls"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<integer>",
															"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID before making an API request."
														}
													]
												},
												"description": "Use this API to get a report of [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) results for a past meeting. \n\n **Prerequisites:** \n* A Pro or a higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200` \n* Meeting polls report returned. \n* This is only available for paid account: {accountId}",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/polls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"polls"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<long>\",\n  \"uuid\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"questions\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `12702` <br>\nCan not access meeting a year ago.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/polls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"polls"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting \"{meetingId}\" not found or has expired.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/polls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"polls"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "qa",
									"item": [
										{
											"name": "Get meeting Q&A report",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId",
														"qa"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
														}
													]
												},
												"description": "Retrieve a report on questions asked and answered by participants from past meetings.   \n   \n\n\n \n**Prerequisites:**  \n \n* Pro plan or higher.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nMeeting Q&amp;A report returned.  \n \nOnly available for Paid or ZMP account: {accountId}.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/qa",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"qa"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"user_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/qa",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"qa"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}.<br> <br>\n**Error Code:** `3001` <br>\n Meeting {meetingId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/qa",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"qa"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "survey",
									"item": [
										{
											"name": "Get meeting survey report",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId",
														"survey"
													],
													"variable": [
														{
															"key": "meetingId",
															"value": "<string>",
															"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
														}
													]
												},
												"description": "Retrieve a report on past [meeting survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nMeeting survey report returned.   \n \nOnly available for Paid or ZMP account: {accountId}.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/survey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"survey"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"meeting_id\": \"<long>\",\n  \"meeting_uuid\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"survey_id\": \"<string>\",\n  \"survey_name\": \"<string>\",\n  \"survey_answers\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"answer_details\": [\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        },\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"answer_details\": [\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        },\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `12702` <br>\n Can not access a webinar a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/survey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"survey"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar  {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/meetings/:meetingId/survey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"meetings",
																":meetingId",
																"survey"
															],
															"variable": [
																{
																	"key": "meetingId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get meeting detail reports",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/meetings/:meetingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"meetings",
												":meetingId"
											],
											"variable": [
												{
													"key": "meetingId",
													"value": "<integer>",
													"description": "(Required) The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID before making an API request."
												}
											]
										},
										"description": "Get a detailed report for a past meeting.   \n \n**Prerequisites:**  \n \n* Pro or a higher plan.  \n \n \n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nMeeting details returned.  \n \nThis is only available for paid account.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"dept\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"end_time\": \"<dateTime>\",\n  \"id\": \"<long>\",\n  \"participants_count\": \"<integer>\",\n  \"start_time\": \"<dateTime>\",\n  \"topic\": \"<string>\",\n  \"total_minutes\": \"<integer>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"user_email\": \"<string>\",\n  \"user_name\": \"<string>\",\n  \"uuid\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `12702` <br>\nCan not access meeting a year ago.<br>\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting {meetingId} not found or has expired.<br>\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/meetings/:meetingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"meetings",
														":meetingId"
													],
													"variable": [
														{
															"key": "meetingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "operationlogs",
					"item": [
						{
							"name": "Get operation logs report",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/operationlogs?from=<date>&to=<date>&page_size=30&next_page_token=<string>&category_type=webinar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"operationlogs"
									],
									"query": [
										{
											"key": "from",
											"value": "<date>",
											"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
										},
										{
											"key": "to",
											"value": "<date>",
											"description": "(Required) End date."
										},
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										},
										{
											"key": "category_type",
											"value": "webinar",
											"description": "**Optional**  \n \nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:  \n  `all`  \n `user`  \n `user_settings`  \n `account`  \n `billing`  \n `im`  \n `recording`  \n `phone_contacts`  \n `webinar`  \n `sub_account`  \n `role`  \n `zoom_rooms`"
										}
									]
								},
								"description": "The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as adding a new user, changing account settings, and deleting recordings.  \n \nUse this API to retrieve operation logs report for a specified period of time.  \n \n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nOperation Logs Report Returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/operationlogs?from=<date>&to=<date>&page_size=30&next_page_token=<string>&category_type=webinar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"operationlogs"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												},
												{
													"key": "category_type",
													"value": "webinar",
													"description": "**Optional**  \n \nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:  \n  `all`  \n `user`  \n `user_settings`  \n `account`  \n `billing`  \n `im`  \n `recording`  \n `phone_contacts`  \n `webinar`  \n `sub_account`  \n `role`  \n `zoom_rooms`"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_size\": 30,\n  \"operation_logs\": [\n    {\n      \"action\": \"<string>\",\n      \"category_type\": \"<string>\",\n      \"operation_detail\": \"<string>\",\n      \"operator\": \"<string>\",\n      \"time\": \"<dateTime>\"\n    },\n    {\n      \"action\": \"<string>\",\n      \"category_type\": \"<string>\",\n      \"operation_detail\": \"<string>\",\n      \"operator\": \"<string>\",\n      \"time\": \"<dateTime>\"\n    }\n  ]\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/operationlogs?from=<date>&to=<date>&page_size=30&next_page_token=<string>&category_type=webinar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"operationlogs"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												},
												{
													"key": "category_type",
													"value": "webinar",
													"description": "**Optional**  \n \nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:  \n  `all`  \n `user`  \n `user_settings`  \n `account`  \n `billing`  \n `im`  \n `recording`  \n `phone_contacts`  \n `webinar`  \n `sub_account`  \n `role`  \n `zoom_rooms`"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "telephone",
					"item": [
						{
							"name": "Get telephone reports",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/telephone?type=1&query_date_type=start_time&from=<date>&to=<date>&page_size=30&page_number=1&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"telephone"
									],
									"query": [
										{
											"key": "type",
											"value": "1",
											"description": "Audio types:  \n `1` - Toll-free Call-in &amp; Call-out.  \n `2` - Toll   \n \n`3` - SIP Connected Audio"
										},
										{
											"key": "query_date_type",
											"value": "start_time",
											"description": "The type of date to query. \n* `start_time` &mdash; Query by call start time. \n* `end_time` &mdash; Query by call end time. \n* `meeting_start_time` &mdash; Query by meeting start time. \n* `meeting_end_time` &mdash; Query by meeting end time. \n\nThis value defaults to `start_time`."
										},
										{
											"key": "from",
											"value": "<date>",
											"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
										},
										{
											"key": "to",
											"value": "<date>",
											"description": "(Required) End date."
										},
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "page_number",
											"value": "1",
											"description": "The page number of the current page in the returned records. This field is **not** available if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value. \n\nThis field is deprecated. Use the `next_page_token` query parameter for pagination."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
										}
									]
								},
								"description": "The [telephone report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) allows you to view who dialed into meetings via phone (Audio Conferencing or SIP Connected Audio) and which number they dialed into and other details. Use this API to get telephone report for a specified period of time.\n\n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nTelephone report returned.  \n \nThis is only available for paid account:{accountId}.  \n \nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.  ",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/telephone?type=1&query_date_type=start_time&from=<date>&to=<date>&page_size=30&page_number=1&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"telephone"
											],
											"query": [
												{
													"key": "type",
													"value": "1",
													"description": "Audio types:  \n `1` - Toll-free Call-in &amp; Call-out.  \n `2` - Toll   \n \n`3` - SIP Connected Audio"
												},
												{
													"key": "query_date_type",
													"value": "start_time",
													"description": "The type of date to query. \n* `start_time` &mdash; Query by call start time. \n* `end_time` &mdash; Query by call end time. \n* `meeting_start_time` &mdash; Query by meeting start time. \n* `meeting_end_time` &mdash; Query by meeting end time. \n\nThis value defaults to `start_time`."
												},
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "The page number of the current page in the returned records. This field is **not** available if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value. \n\nThis field is deprecated. Use the `next_page_token` query parameter for pagination."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"<date>\",\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_size\": \"<integer>\",\n  \"to\": \"<date>\",\n  \"total_records\": \"<integer>\",\n  \"telephony_usage\": [\n    {\n      \"call_in_number\": \"<string>\",\n      \"country_name\": \"<string>\",\n      \"dept\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"end_time\": \"<dateTime>\",\n      \"host_email\": \"<string>\",\n      \"host_id\": \"<string>\",\n      \"host_name\": \"<string>\",\n      \"meeting_id\": \"<long>\",\n      \"meeting_type\": \"<string>\",\n      \"phone_number\": \"<string>\",\n      \"rate\": \"<number>\",\n      \"signaled_number\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"total\": \"<number>\",\n      \"type\": \"call-in\",\n      \"uuid\": \"<string>\"\n    },\n    {\n      \"call_in_number\": \"<string>\",\n      \"country_name\": \"<string>\",\n      \"dept\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"end_time\": \"<dateTime>\",\n      \"host_email\": \"<string>\",\n      \"host_id\": \"<string>\",\n      \"host_name\": \"<string>\",\n      \"meeting_id\": \"<long>\",\n      \"meeting_type\": \"<string>\",\n      \"phone_number\": \"<string>\",\n      \"rate\": \"<number>\",\n      \"signaled_number\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"total\": \"<number>\",\n      \"type\": \"premium call-in\",\n      \"uuid\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "upcoming_events",
					"item": [
						{
							"name": "Get upcoming events report",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/upcoming_events?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=all&group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"upcoming_events"
									],
									"query": [
										{
											"key": "from",
											"value": "<date>",
											"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
										},
										{
											"key": "to",
											"value": "<date>",
											"description": "(Required) End date."
										},
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										},
										{
											"key": "type",
											"value": "all",
											"description": "The type of event to query. \n* `meeting` &mdash; A meeting event. \n* `webinar` &mdash; A webinar event. \n* `all` &mdash; Both meeting and webinar events.\n\nThis value defaults to `all`."
										},
										{
											"key": "group_id",
											"value": "<string>",
											"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain meetings where the host is a member of the queried group ID."
										}
									]
								},
								"description": "Use this API to list upcoming meeting and/or webinar events within a specified period of time. The report's time range is limited to one month.\n\n**Prerequisites:** \n* A Pro or higher plan\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nUpcoming events report returned.  \n \n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/upcoming_events?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=all&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"upcoming_events"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												},
												{
													"key": "type",
													"value": "all",
													"description": "The type of event to query. \n* `meeting` &mdash; A meeting event. \n* `webinar` &mdash; A webinar event. \n* `all` &mdash; Both meeting and webinar events.\n\nThis value defaults to `all`."
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain meetings where the host is a member of the queried group ID."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"<date>\",\n  \"next_page_token\": \"<string>\",\n  \"page_size\": 30,\n  \"to\": \"<date>\",\n  \"upcoming_events\": [\n    {\n      \"dept\": \"<string>\",\n      \"host_id\": \"<string>\",\n      \"host_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"start_time\": \"<string>\",\n      \"topic\": \"<string>\"\n    },\n    {\n      \"dept\": \"<string>\",\n      \"host_id\": \"<string>\",\n      \"host_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"start_time\": \"<string>\",\n      \"topic\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis is only available for the paid account: {accountId} <br>\n\n**Error Code:** `300` <br>\nThe next page token is invalid or expired.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/upcoming_events?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=all&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"upcoming_events"
											],
											"query": [
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												},
												{
													"key": "type",
													"value": "all",
													"description": "The type of event to query. \n* `meeting` &mdash; A meeting event. \n* `webinar` &mdash; A webinar event. \n* `all` &mdash; Both meeting and webinar events.\n\nThis value defaults to `all`."
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain meetings where the host is a member of the queried group ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{userId}",
							"item": [
								{
									"name": "meetings",
									"item": [
										{
											"name": "Get meeting reports",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/users/:userId/meetings?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=past",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"users",
														":userId",
														"meetings"
													],
													"query": [
														{
															"key": "from",
															"value": "<date>",
															"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
														},
														{
															"key": "to",
															"value": "<date>",
															"description": "(Required) End date."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "type",
															"value": "past",
															"description": "The meeting type to query for: \n* `past` &mdash; All past meetings. \n* `pastOne` &mdash; A single past user meeting. \n* `pastJoined` &mdash; All past meetings the account's users hosted or joined."
														}
													],
													"variable": [
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The user ID or email address of the user. For user-level apps, pass the `me` value."
														}
													]
												},
												"description": "Retrieve [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting) on past meetings and webinars for a specified time period. The time range for the report is limited to a month and the month must fall within the past six months.\n\nMeetings and webinars are returned only if they have two or more unique participants.    \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nActive or inactive hosts report returned.  \n \n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/users/:userId/meetings?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=past",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"users",
																":userId",
																"meetings"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "(Required) End date."
																},
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "type",
																	"value": "past",
																	"description": "The meeting type to query for: \n* `past` &mdash; All past meetings. \n* `pastOne` &mdash; A single past user meeting. \n* `pastJoined` &mdash; All past meetings the account's users hosted or joined."
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"from\": \"<date>\",\n  \"meetings\": [\n    {\n      \"custom_keys\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"duration\": \"<integer>\",\n      \"end_time\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"participants_count\": \"<integer>\",\n      \"session_key\": \"<string>\",\n      \"source\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"topic\": \"<string>\",\n      \"total_minutes\": \"<integer>\",\n      \"type\": 4,\n      \"user_email\": \"<email>\",\n      \"user_name\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"schedule_time\": \"<string>\",\n      \"join_waiting_room_time\": \"<string>\",\n      \"join_time\": \"<string>\",\n      \"leave_time\": \"<string>\",\n      \"host_organization\": \"<string>\",\n      \"host_name\": \"<string>\",\n      \"has_screen_share\": \"<boolean>\",\n      \"has_recording\": \"<boolean>\",\n      \"has_chat\": \"<boolean>\",\n      \"meeting_encryption_status\": 2,\n      \"participants_count_my_account\": \"<integer>\"\n    },\n    {\n      \"custom_keys\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"duration\": \"<integer>\",\n      \"end_time\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"participants_count\": \"<integer>\",\n      \"session_key\": \"<string>\",\n      \"source\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"topic\": \"<string>\",\n      \"total_minutes\": \"<integer>\",\n      \"type\": 1,\n      \"user_email\": \"<email>\",\n      \"user_name\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"schedule_time\": \"<string>\",\n      \"join_waiting_room_time\": \"<string>\",\n      \"join_time\": \"<string>\",\n      \"leave_time\": \"<string>\",\n      \"host_organization\": \"<string>\",\n      \"host_name\": \"<string>\",\n      \"has_screen_share\": \"<boolean>\",\n      \"has_recording\": \"<boolean>\",\n      \"has_chat\": \"<boolean>\",\n      \"meeting_encryption_status\": 2,\n      \"participants_count_my_account\": \"<integer>\"\n    }\n  ],\n  \"to\": \"<date>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300` <br>\nThe next page token is invalid or expired.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/users/:userId/meetings?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=past",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"users",
																":userId",
																"meetings"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "(Required) End date."
																},
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "type",
																	"value": "past",
																	"description": "The meeting type to query for: \n* `past` &mdash; All past meetings. \n* `pastOne` &mdash; A single past user meeting. \n* `pastJoined` &mdash; All past meetings the account's users hosted or joined."
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} not exist or not belong to this account.\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/users/:userId/meetings?from=<date>&to=<date>&page_size=30&next_page_token=<string>&type=past",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"users",
																":userId",
																"meetings"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<date>",
																	"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once."
																},
																{
																	"key": "to",
																	"value": "<date>",
																	"description": "(Required) End date."
																},
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "type",
																	"value": "past",
																	"description": "The meeting type to query for: \n* `past` &mdash; All past meetings. \n* `pastOne` &mdash; A single past user meeting. \n* `pastJoined` &mdash; All past meetings the account's users hosted or joined."
																}
															],
															"variable": [
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Get active/inactive host reports",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/report/users?type=inactive&from=<date>&to=<date>&page_size=30&page_number=1&next_page_token=<string>&group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"users"
									],
									"query": [
										{
											"key": "type",
											"value": "inactive",
											"description": "Active or inactive hosts.  \n `active` - Active hosts.   \n `inactive` - Inactive hosts."
										},
										{
											"key": "from",
											"value": "<date>",
											"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month worth of data at once."
										},
										{
											"key": "to",
											"value": "<date>",
											"description": "(Required) End date."
										},
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "page_number",
											"value": "1",
											"description": "The page number of the current page in the returned records."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
										},
										{
											"key": "group_id",
											"value": "<string>",
											"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
										}
									]
								},
								"description": "Retrieve a host report for a specified period of time within the last six months.  \nThe report time range is limited to a month. \n\nYou can specify the type of report and date range using the query parameters.  \n\n\n* The **Active Hosts** report displays a list of meetings, participants, and meeting minutes.\nAn **active host** is defined as any user who has hosted at least one meeting during the during the month specified in the `from` and `to` range.\n\n\n* The **Inactive Hosts** report pulls a list of users who were not active during a specific period of time.   \nAn **inactive host** is defined as any user who has not hosted any meetings during the specified period of time for the report. to be inactive.  \n\n\n\n\n \n \n \n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nActive or inactive hosts report returned.  \n \nOnly available for Paid or ZMP account: {accountId}.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/users?type=inactive&from=<date>&to=<date>&page_size=30&page_number=1&next_page_token=<string>&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"users"
											],
											"query": [
												{
													"key": "type",
													"value": "inactive",
													"description": "Active or inactive hosts.  \n `active` - Active hosts.   \n `inactive` - Inactive hosts."
												},
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "The page number of the current page in the returned records."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n No permission.<br>\n’ <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/users?type=inactive&from=<date>&to=<date>&page_size=30&page_number=1&next_page_token=<string>&group_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"users"
											],
											"query": [
												{
													"key": "type",
													"value": "inactive",
													"description": "Active or inactive hosts.  \n `active` - Active hosts.   \n `inactive` - Inactive hosts."
												},
												{
													"key": "from",
													"value": "<date>",
													"description": "(Required) Start date in 'yyyy-mm-dd' format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month worth of data at once."
												},
												{
													"key": "to",
													"value": "<date>",
													"description": "(Required) End date."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "The page number of the current page in the returned records."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
												},
												{
													"key": "group_id",
													"value": "<string>",
													"description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "webinars",
					"item": [
						{
							"name": "{webinarId}",
							"item": [
								{
									"name": "participants",
									"item": [
										{
											"name": "Get webinar participant reports",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														},
														{
															"key": "include_fields",
															"value": "registrant_id",
															"description": "The additional query parameters to include. \n* `registrant_id` - Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<string>",
															"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request."
														}
													]
												},
												"description": "Get a detailed report on each webinar attendee. You can get webinar participant reports for the last 6 months. \n\n **Prerequisites:** \n* A Pro or a higher plan with Webinar add-on enabled.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200` \n* Meeting participants report returned.  \n \nOnly available for Paid or ZMP account: {accountId}.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"participants"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "include_fields",
																	"value": "registrant_id",
																	"description": "The additional query parameters to include. \n* `registrant_id` - Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"participants\": [\n    {\n      \"customer_key\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"status\": \"in_waiting_room\",\n      \"user_email\": \"pa2SVS.sWdoVD.Z$.QP%b.E/krc/p}yl@aGBRv.rta\",\n      \"user_id\": \"<string>\",\n      \"participant_user_id\": \"<string>\"\n    },\n    {\n      \"customer_key\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"status\": \"in_waiting_room\",\n      \"user_email\": \"JA87FIm.iMR|i.CVTsc{i.G}Fa`.^@RSAgC6ozL.4.-HOafM.3cFNJWUcPJR.xYgpOpmpzcx.fZ3.Qtsl1nuuUn.FA61y.Ql\",\n      \"user_id\": \"<string>\",\n      \"participant_user_id\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId} <br>\n**Error Code:** `12702` <br>\n Can not access a webinar a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission.<br>",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"participants"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "include_fields",
																	"value": "registrant_id",
																	"description": "The additional query parameters to include. \n* `registrant_id` - Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar \"{webinarId}\" not found or has expired <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/participants?page_size=30&next_page_token=<string>&include_fields=registrant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"participants"
															],
															"query": [
																{
																	"key": "page_size",
																	"value": "30",
																	"description": "The number of records returned within a single API call."
																},
																{
																	"key": "next_page_token",
																	"value": "<string>",
																	"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
																},
																{
																	"key": "include_fields",
																	"value": "registrant_id",
																	"description": "The additional query parameters to include. \n* `registrant_id` - Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "polls",
									"item": [
										{
											"name": "Get webinar poll reports",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<string>",
															"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request."
														}
													]
												},
												"description": "Retrieve a report on past [webinar polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with Webinar add-on enabled.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nWebinar polls report returned.  \n \nMissing webinar subscription plan.  \n \nOnly available for Paid or ZMP account: {accountId}.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/polls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"polls"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account:{accountId}.<br>\n\n**Error Code:** `12702` <br>\nCan not access a webinar a year ago.<br>\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/polls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"polls"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nWebinar  {webinarId} not found or has expired.<br>\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/polls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"polls"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "qa",
									"item": [
										{
											"name": "Get webinar Q&A report",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId",
														"qa"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<string>",
															"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request."
														}
													]
												},
												"description": "Retrieve a report on questions asked by participants and answered by panelists, co-hosts and hosts from past webinars.   \n\n\n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with the Webinar add-on enabled.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   Webinar Q&A report returned. Only available for Paid or ZMP account: {accountId}.   A report can't be generated for this account because this account is not subscribed to a webinar plan.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/qa",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"qa"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"user_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"user_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"create_time\": \"<string>\",\n          \"answer_details\": [\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            },\n            {\n              \"user_id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"content\": \"<string>\",\n              \"create_time\": \"<string>\",\n              \"type\": \"default\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/qa",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"qa"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}.<br> <br>\n**Error Code:** `3001` <br>\n Webinar  {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/qa",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"qa"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "survey",
									"item": [
										{
											"name": "Get webinar survey report",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<string>",
															"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request."
														}
													]
												},
												"description": "Retrieve a report on past [webinar survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with Webinar add-on enabled.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nWebinar survey report returned.  \n \nMissing webinar subscription plan.  \n \nOnly available for Paid or ZMP account: {accountId}.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/survey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"survey"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"webinar_id\": \"<long>\",\n  \"webinar_uuid\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"survey_id\": \"<string>\",\n  \"survey_name\": \"<string>\",\n  \"survey_answers\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"answer_details\": [\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        },\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"answer_details\": [\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        },\n        {\n          \"question\": \"<string>\",\n          \"question_id\": \"<string>\",\n          \"answer\": \"<string>\",\n          \"date_time\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `12702` <br>\n Can not access a webinar a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/survey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"survey"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar  {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/report/webinars/:webinarId/survey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"report",
																"webinars",
																":webinarId",
																"survey"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get webinar detail reports",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/report/webinars/:webinarId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"webinars",
												":webinarId"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request."
												}
											]
										},
										"description": "Retrieve a [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting) containing past webinar details.    \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan with Webinar add-on.\n\n**Scopes:** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nWebinar details returned.  \n \nThis is only available for paid account:{accountId}.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"dept\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"end_time\": \"<dateTime>\",\n  \"id\": \"<long>\",\n  \"participants_count\": \"<integer>\",\n  \"start_time\": \"<dateTime>\",\n  \"topic\": \"<string>\",\n  \"total_minutes\": \"<integer>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"user_email\": \"<string>\",\n  \"user_name\": \"<string>\",\n  \"uuid\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account:{accountId}.<br>\n\n**Error Code:** `12702` <br>\nCan not access a webinar a year ago.<br>\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting  {meetingId} not found or has expired.<br>\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/report/webinars/:webinarId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														"webinars",
														":webinarId"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "sip_phones",
			"item": [
				{
					"name": "{phoneId}",
					"item": [
						{
							"name": "Delete SIP phone",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sip_phones/:phoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones",
										":phoneId"
									],
									"variable": [
										{
											"key": "phoneId",
											"value": "<string>",
											"description": "(Required) The SIP phone ID. It can be retrieved from the List SIP Phones API."
										}
									]
								},
								"description": "Use this API to delete a Zoom account's SIP phone. \n\n **Prerequisites**: \n* Currently only supported on Cisco and Avaya PBX systems. \n* The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.\n\n**Scopes:** `sip_phone:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**Error Code:** `200`  \n Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sip_phones/:phoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sip_phones",
												":phoneId"
											],
											"variable": [
												{
													"key": "phoneId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `204`  \n \nSIP Phone deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sip_phones/:phoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sip_phones",
												":phoneId"
											],
											"variable": [
												{
													"key": "phoneId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update SIP phone",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"UDP\",\n  \"transport_protocol2\": \"AUTO\",\n  \"transport_protocol3\": \"UDP\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sip_phones/:phoneId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones",
										":phoneId"
									],
									"variable": [
										{
											"key": "phoneId",
											"value": "<string>",
											"description": "(Required) The SIP phone ID. This can be retrieved from the List SIP Phones API."
										}
									]
								},
								"description": "Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.  \n   \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**Scopes:** `sip_phone:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**Error Code:** `200`  \n \nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"UDP\",\n  \"transport_protocol2\": \"AUTO\",\n  \"transport_protocol3\": \"UDP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sip_phones/:phoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sip_phones",
												":phoneId"
											],
											"variable": [
												{
													"key": "phoneId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `204`  \n \nSIP Phone information updated successfully.\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"UDP\",\n  \"transport_protocol2\": \"AUTO\",\n  \"transport_protocol3\": \"UDP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sip_phones/:phoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sip_phones",
												":phoneId"
											],
											"variable": [
												{
													"key": "phoneId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"UDP\",\n  \"transport_protocol2\": \"AUTO\",\n  \"transport_protocol3\": \"UDP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sip_phones/:phoneId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sip_phones",
												":phoneId"
											],
											"variable": [
												{
													"key": "phoneId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List SIP phones",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sip_phones?page_number=1&search_key=<string>&page_size=<integer>&next_page_token=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sip_phones"
							],
							"query": [
								{
									"key": "page_number",
									"value": "1",
									"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
								},
								{
									"key": "search_key",
									"value": "<string>",
									"description": "User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned."
								},
								{
									"key": "page_size",
									"value": "<integer>",
									"description": "The number of records returned within a single API call."
								},
								{
									"key": "next_page_token",
									"value": "<string>",
									"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
								}
							]
						},
						"description": "Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.  \n   \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**Scopes:** `sip_phone:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `200`  \n \nSIP Phones listed successfully.\n\n**Error Code:** `200`  \n \nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sip_phones?page_number=1&search_key=<string>&page_size=<integer>&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones"
									],
									"query": [
										{
											"key": "page_number",
											"value": "1",
											"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
										},
										{
											"key": "search_key",
											"value": "<string>",
											"description": "User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned."
										},
										{
											"key": "page_size",
											"value": "<integer>",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": \"<integer>\",\n  \"page_size\": \"<integer>\",\n  \"phones\": [\n    {\n      \"authorization_name\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"id\": \"<string>\",\n      \"password\": \"<string>\",\n      \"proxy_server\": \"<string>\",\n      \"proxy_server2\": \"<string>\",\n      \"proxy_server3\": \"<string>\",\n      \"register_server\": \"<string>\",\n      \"register_server2\": \"<string>\",\n      \"register_server3\": \"<string>\",\n      \"registration_expire_time\": \"<integer>\",\n      \"transport_protocol\": \"UDP\",\n      \"transport_protocol2\": \"UDP\",\n      \"transport_protocol3\": \"UDP\",\n      \"user_email\": \"<email>\",\n      \"user_name\": \"<string>\",\n      \"voice_mail\": \"<string>\"\n    },\n    {\n      \"authorization_name\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"id\": \"<string>\",\n      \"password\": \"<string>\",\n      \"proxy_server\": \"<string>\",\n      \"proxy_server2\": \"<string>\",\n      \"proxy_server3\": \"<string>\",\n      \"register_server\": \"<string>\",\n      \"register_server2\": \"<string>\",\n      \"register_server3\": \"<string>\",\n      \"registration_expire_time\": \"<integer>\",\n      \"transport_protocol\": \"UDP\",\n      \"transport_protocol2\": \"TLS\",\n      \"transport_protocol3\": \"UDP\",\n      \"user_email\": \"<email>\",\n      \"user_name\": \"<string>\",\n      \"voice_mail\": \"<string>\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
						},
						{
							"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sip_phones?page_number=1&search_key=<string>&page_size=<integer>&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones"
									],
									"query": [
										{
											"key": "page_number",
											"value": "1",
											"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
										},
										{
											"key": "search_key",
											"value": "<string>",
											"description": "User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned."
										},
										{
											"key": "page_size",
											"value": "<integer>",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable SIP phone",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"user_email\": \"<email>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"TLS\",\n  \"transport_protocol2\": \"TLS\",\n  \"transport_protocol3\": \"TCP\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sip_phones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sip_phones"
							]
						},
						"description": "Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.  \n   \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**Scopes:** `sip_phone:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `201`  \n \nSIP Phone Created.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"user_email\": \"<email>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"TLS\",\n  \"transport_protocol2\": \"TLS\",\n  \"transport_protocol3\": \"TCP\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sip_phones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"AUTO\",\n  \"transport_protocol2\": \"TLS\",\n  \"transport_protocol3\": \"UDP\",\n  \"user_email\": \"<email>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\"\n}"
						},
						{
							"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br>\n\n**Error Code:** `300` <br>\nSIP Phone with the same email already exists.\n\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"user_email\": \"<email>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"TLS\",\n  \"transport_protocol2\": \"TLS\",\n  \"transport_protocol3\": \"TCP\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sip_phones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} not exist or not belong to this account.\n\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authorization_name\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"password\": \"<string>\",\n  \"proxy_server\": \"<string>\",\n  \"register_server\": \"<string>\",\n  \"user_email\": \"<email>\",\n  \"user_name\": \"<string>\",\n  \"voice_mail\": \"<string>\",\n  \"proxy_server2\": \"<string>\",\n  \"proxy_server3\": \"<string>\",\n  \"register_server2\": \"<string>\",\n  \"register_server3\": \"<string>\",\n  \"registration_expire_time\": 60,\n  \"transport_protocol\": \"TLS\",\n  \"transport_protocol2\": \"TLS\",\n  \"transport_protocol3\": \"TCP\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sip_phones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sip_phones"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tsp",
			"item": [
				{
					"name": "Get account's TSP information",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tsp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tsp"
							]
						},
						"description": "Get information on Telephony Service Provider on an account level.  \n   \n \n**Prerequisites:**  \n \n* A Pro or a higher plan.\n\n**Scopes:** `tsp:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `200`  \n \nTSP account detail returned successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tsp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tsp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dial_in_number_unrestricted\": \"<boolean>\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"number\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"enable\": \"<boolean>\",\n  \"master_account_setting_extended\": \"<boolean>\",\n  \"modify_credential_forbidden\": \"<boolean>\",\n  \"tsp_bridge\": \"EU_TSP_TB\",\n  \"tsp_enabled\": \"<boolean>\",\n  \"tsp_provider\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update account's TSP information",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dial_in_number_unrestricted\": \"<boolean>\",\n  \"enable\": \"<boolean>\",\n  \"master_account_setting_extended\": \"<boolean>\",\n  \"modify_credential_forbidden\": \"<boolean>\",\n  \"tsp_bridge\": \"US_TSP_TB\",\n  \"tsp_enabled\": \"<boolean>\",\n  \"tsp_provider\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tsp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tsp"
							]
						},
						"description": "Update information of the Telephony Service Provider set up on an account.  \n \n**Prerequisites**:  \n \nTSP account option should be enabled.  \n \n\n\n**Scopes:** `tsp:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `204` **No Content**  \n \nTSP Account updated.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dial_in_number_unrestricted\": \"<boolean>\",\n  \"enable\": \"<boolean>\",\n  \"master_account_setting_extended\": \"<boolean>\",\n  \"modify_credential_forbidden\": \"<boolean>\",\n  \"tsp_bridge\": \"US_TSP_TB\",\n  \"tsp_enabled\": \"<boolean>\",\n  \"tsp_provider\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tsp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tsp"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid parameter: tsp_bridge.\n\n",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dial_in_number_unrestricted\": \"<boolean>\",\n  \"enable\": \"<boolean>\",\n  \"master_account_setting_extended\": \"<boolean>\",\n  \"modify_credential_forbidden\": \"<boolean>\",\n  \"tsp_bridge\": \"US_TSP_TB\",\n  \"tsp_enabled\": \"<boolean>\",\n  \"tsp_provider\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tsp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tsp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tracking_fields",
			"item": [
				{
					"name": "{fieldId}",
					"item": [
						{
							"name": "Get a tracking field",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tracking_fields/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tracking_fields",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId",
											"value": "<string>",
											"description": "(Required) The Tracking Field ID"
										}
									]
								},
								"description": "Use this API to return information about a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**Scopes:** `tracking_fields:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nTracking Field object returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tracking_fields/:fieldId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tracking_fields",
												":fieldId"
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tracking_fields/:fieldId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tracking_fields",
												":fieldId"
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a tracking field",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tracking_fields/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tracking_fields",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId",
											"value": "<string>",
											"description": "(Required) The Tracking Field ID"
										}
									]
								},
								"description": "Use this API to delete a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**Scopes:** `tracking_fields:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204`  \n \nTracking Field deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tracking_fields/:fieldId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tracking_fields",
												":fieldId"
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tracking_fields/:fieldId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tracking_fields",
												":fieldId"
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a tracking field",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tracking_fields/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tracking_fields",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId",
											"value": "<string>",
											"description": "(Required) The Tracking Field ID"
										}
									]
								},
								"description": "Use this API to update a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**Scopes:** `tracking_fields:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204`  \n \nTracking Field updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tracking_fields/:fieldId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tracking_fields",
												":fieldId"
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tracking_fields/:fieldId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tracking_fields",
												":fieldId"
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List tracking fields",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tracking_fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tracking_fields"
							]
						},
						"description": "Use this API to list all the [tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) on your Zoom account. Tracking fields let you analyze usage by various fields within an organization. \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**Scopes:** `tracking_fields:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `200`  \n \nList of Tracking Fields returned.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tracking_fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tracking_fields"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_records\": \"<integer>\",\n  \"tracking_fields\": [\n    {\n      \"id\": \"<string>\",\n      \"field\": \"<string>\",\n      \"recommended_values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"visible\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"field\": \"<string>\",\n      \"recommended_values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"visible\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a tracking field",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "/",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tracking_fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tracking_fields"
							]
						},
						"description": "Use this API to create a new [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). Tracking fields let you analyze usage by various fields within an organization. When scheduling a meeting, tracking fields will be included in the meeting options. \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**Scopes:** `tracking_fields:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
					},
					"response": [
						{
							"name": "**HTTP Status Code:** `201`  \n \nTracking Field created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tracking_fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tracking_fields"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"field\": \"<string>\",\n  \"recommended_values\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"required\": \"<boolean>\",\n  \"visible\": \"<boolean>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "live_webinars",
			"item": [
				{
					"name": "{webinarId}",
					"item": [
						{
							"name": "chat",
							"item": [
								{
									"name": "messages",
									"item": [
										{
											"name": "{messageId}",
											"item": [
												{
													"name": "Delete a live webinar message",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/live_webinars/:webinarId/chat/messages/:messageId?file_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"live_webinars",
																":webinarId",
																"chat",
																"messages",
																":messageId"
															],
															"query": [
																{
																	"key": "file_ids",
																	"value": "<string>",
																	"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																}
															],
															"variable": [
																{
																	"key": "webinarId",
																	"value": "<long>",
																	"description": "(Required) The webinar's ID."
																},
																{
																	"key": "messageId",
																	"value": "<string>",
																	"description": "(Required) The live webinar chat message's unique identifier (UUID), in base64-encoded format."
																}
															]
														},
														"description": "Deletes a message in a live webinar based on ID. \n\n**Prerequisites:** \n* Have Zoom enable the DLP for the in-meeting chat feature to use this API.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `204`   \n \nWebinar chat message deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/live_webinars/:webinarId/chat/messages/:messageId?file_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_webinars",
																		":webinarId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"query": [
																		{
																			"key": "file_ids",
																			"value": "<string>",
																			"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																		}
																	],
																	"variable": [
																		{
																			"key": "webinarId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n * Only available for paid accounts. * DLP is not enabled. <br>\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/live_webinars/:webinarId/chat/messages/:messageId?file_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_webinars",
																		":webinarId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"query": [
																		{
																			"key": "file_ids",
																			"value": "<string>",
																			"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																		}
																	],
																	"variable": [
																		{
																			"key": "webinarId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar  {webinarId} does not exist. <br>\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/live_webinars/:webinarId/chat/messages/:messageId?file_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"live_webinars",
																		":webinarId",
																		"chat",
																		"messages",
																		":messageId"
																	],
																	"query": [
																		{
																			"key": "file_ids",
																			"value": "<string>",
																			"description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas."
																		}
																	],
																	"variable": [
																		{
																			"key": "webinarId"
																		},
																		{
																			"key": "messageId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "past_webinars",
			"item": [
				{
					"name": "{webinarId}",
					"item": [
						{
							"name": "absentees",
							"item": [
								{
									"name": "Get webinar absentees",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_webinars/:webinarId/absentees?occurrence_id=<string>&page_size=30&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_webinars",
												":webinarId",
												"absentees"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												}
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request."
												}
											]
										},
										"description": "List absentees of a webinar.  \n   \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nSuccess.  \n **Error Code:** `200`  \n \nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/absentees?occurrence_id=<string>&page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"absentees"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"More than 6 months\",\n      \"role_in_purchase_process\": \"Not involved\",\n      \"state\": \"<string>\",\n      \"status\": \"approved\",\n      \"zip\": \"<string>\",\n      \"create_time\": \"<dateTime>\",\n      \"join_url\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"101-250\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"1-3 months\",\n      \"role_in_purchase_process\": \"Decision Maker\",\n      \"state\": \"<string>\",\n      \"status\": \"denied\",\n      \"zip\": \"<string>\",\n      \"create_time\": \"<dateTime>\",\n      \"join_url\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n The request could not be completed because you have provided an invalid occurrence ID: {occurrenceId}<br> <br>\n**Error Code:** `1010` <br>\n User does not belong to this account:{",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/absentees?occurrence_id=<string>&page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"absentees"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Meeting ID is invalid or not end. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/absentees?occurrence_id=<string>&page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"absentees"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "instances",
							"item": [
								{
									"name": "List past webinar instances",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_webinars/:webinarId/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_webinars",
												":webinarId",
												"instances"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "List past webinar instances.  \n   \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nList of past webinar instances returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"instances"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"webinars\": [\n    {\n      \"start_time\": \"<dateTime>\",\n      \"uuid\": \"<string>\"\n    },\n    {\n      \"start_time\": \"<dateTime>\",\n      \"uuid\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"instances"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "participants",
							"item": [
								{
									"name": "List webinar participants",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_webinars/:webinarId/participants?page_size=30&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_webinars",
												":webinarId",
												"participants"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												}
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request."
												}
											]
										},
										"description": "Retrieve a list of all the participants who attended a webinar hosted in the past. \n\n**Prerequisites:** \n* A Pro or higher plan with a webinar add-on.\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nParticipants list returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/participants?page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_size\": 30,\n  \"participants\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"user_email\": \"<email>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"status\": \"in_waiting_room\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"user_id\": \"<string>\",\n      \"registrant_id\": \"<string>\",\n      \"user_email\": \"<email>\",\n      \"join_time\": \"<dateTime>\",\n      \"leave_time\": \"<dateTime>\",\n      \"duration\": \"<integer>\",\n      \"failover\": \"<boolean>\",\n      \"status\": \"in_meeting\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n No permission.<br>\nOnly available for paid account: {accountId}.<br><br> <br>\n**Error Code:** `300` <br>\n The next page token is invalid or expired. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/participants?page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar does not exist. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/participants?page_size=30&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"participants"
													],
													"query": [
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "polls",
							"item": [
								{
									"name": "List past webinar poll results",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_webinars/:webinarId/polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_webinars",
												":webinarId",
												"polls"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request."
												}
											]
										},
										"description": "The polling feature for webinar lets you create single-choice or multiple-choice polling questions for your webinars. This API endpoint retrieves the results for webinar polls of a specific webinar.\n\n**Prerequisites:**  \n \n* [Webinar license](https://zoom.us/webinar)  \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nPolls returned successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"date_time\": \"<dateTime>\",\n          \"polling_id\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "qa",
							"item": [
								{
									"name": "List Q&As of a past webinar",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/past_webinars/:webinarId/qa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"past_webinars",
												":webinarId",
												"qa"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request."
												}
											]
										},
										"description": "List the Q&amp;A of a specific past webinar. \n\nThe [question &amp; answer (Q&amp;A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) feature for webinars lets attendees ask questions during the webinar and for the panelists, co-hosts and host to answer their questions. \n\n**Prerequisites**  \n \n* [Webinar license](https://zoom.us/webinar)  \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**  \n \nQ&amp;A returned successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"qa"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"questions\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"question_details\": [\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"question\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"<dateTime>\",\n  \"uuid\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"qa"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/past_webinars/:webinarId/qa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"past_webinars",
														":webinarId",
														"qa"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "webinars",
			"item": [
				{
					"name": "{webinarId}",
					"item": [
						{
							"name": "batch_registrants",
							"item": [
								{
									"name": "Perform batch registration",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/batch_registrants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"batch_registrants"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's unique identifier."
												}
											]
										},
										"description": "Register up to 30 registrants at once for a scheduled webinar that requires [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration).   \n \n\n**Prerequisites:**  \n \n* The webinar host must be a licensed user.\n* The webinar should be type `5`, a scheduled webinar. Other types of webinars are not supported by this API.  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**   \n \nRegistrants added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"registrants\": [\n    {\n      \"email\": \"<string>\",\n      \"join_url\": \"<string>\",\n      \"registrant_id\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"join_url\": \"<string>\",\n      \"registrant_id\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the Webinar plan and enable webinars for the \"{0}\" user to perform this action. <br>\n**Error Code:** `300` <br>\n This API can only ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {0}.<br><br> <br>\n**Error Code:** `3043` <br>\n Webinar has reached maximum attendee capacity.<br><br> <br>\n**Error Code:** `404` <br>\n Registration has not",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests \n\n ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"auto_approve\": \"<boolean>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/batch_registrants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"batch_registrants"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "branding",
							"item": [
								{
									"name": "name_tags",
									"item": [
										{
											"name": "{nameTagId}",
											"item": [
												{
													"name": "Update a webinar's branding name tag",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
																	"type": "string"
																},
																{
																	"key": "authUrl",
																	"value": "/",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "authorization_code",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags/:nameTagId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags",
																":nameTagId"
															],
															"variable": [
																{
																	"key": "webinarId",
																	"value": "<long>",
																	"description": "(Required) The webinar's ID."
																},
																{
																	"key": "nameTagId",
																	"value": "<string>",
																	"description": "(Required) The name tag's ID."
																}
															]
														},
														"description": "Use this API to update a webinar's [Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) name tag. **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
													},
													"response": [
														{
															"name": "**HTTP Status Code:** `204`   \n \n* No content. \n* Name tag updated.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags/:nameTagId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"webinars",
																		":webinarId",
																		"branding",
																		"name_tags",
																		":nameTagId"
																	],
																	"variable": [
																		{
																			"key": "webinarId"
																		},
																		{
																			"key": "nameTagId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabled.\n\n",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags/:nameTagId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"webinars",
																		":webinarId",
																		"branding",
																		"name_tags",
																		":nameTagId"
																	],
																	"variable": [
																		{
																			"key": "webinarId"
																		},
																		{
																			"key": "nameTagId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": "Added as a part of security scheme: oauth2"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags/:nameTagId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"webinars",
																		":webinarId",
																		"branding",
																		"name_tags",
																		":nameTagId"
																	],
																	"variable": [
																		{
																			"key": "webinarId"
																		},
																		{
																			"key": "nameTagId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Create a webinar's branding name tag",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"name_tags"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to create a webinar's [Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) name tag. There's a limit of 20 name tags per webinar. **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `201`   \n \nName tag created.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"is_default\": \"<boolean>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabled.<br>\nYou have reached the limit for the number of name tags you can add for this webinar. The limit is 20.\n\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accent_color\": \"<string>\",\n  \"background_color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"text_color\": \"<string>\",\n  \"is_default\": false,\n  \"set_default_for_all_panelists\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a webinar's branding name tag",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags?name_tag_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"name_tags"
													],
													"query": [
														{
															"key": "name_tag_ids",
															"value": "<string>",
															"description": "A comma-separated list of the name tag IDs to delete."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to delete a webinar's [Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) name tag. \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \n* No content. \n* Name tag(s) deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags?name_tag_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags"
															],
															"query": [
																{
																	"key": "name_tag_ids",
																	"value": "<string>",
																	"description": "A comma-separated list of the name tag IDs to delete."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid parameter: name_tag_ids\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabled.\n\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags?name_tag_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags"
															],
															"query": [
																{
																	"key": "name_tag_ids",
																	"value": "<string>",
																	"description": "A comma-separated list of the name tag IDs to delete."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/name_tags?name_tag_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"name_tags"
															],
															"query": [
																{
																	"key": "name_tag_ids",
																	"value": "<string>",
																	"description": "A comma-separated list of the name tag IDs to delete."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "virtual_backgrounds",
									"item": [
										{
											"name": "Upload a webinar's branding Virtual Background",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<string>",
															"description": "(Required) The Virtual Background's file path, in binary format.",
															"type": "text"
														},
														{
															"key": "default",
															"value": "false",
															"description": "Whether set the file as the default Virtual Background file.",
															"type": "text"
														},
														{
															"key": "set_default_for_all_panelists",
															"value": "true",
															"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"virtual_backgrounds"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to upload a webinar's session branding [Virtual Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). Hosts and panelists can select and use these Virtual Backgrounds during the webinar. Branding Virtual Background files have the following restrictions: \n* A webinar cannot exceed more than 10 Virtual Background files. \n* You can only upload image files that are in JPG/JPEG, GIF or PNG format. \n* The Virtual Background file size cannot exceed 15 megabytes (MB). \n\n **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `201`   \n \nVirtual Background uploaded.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) The Virtual Background's file path, in binary format.",
																	"type": "text"
																},
																{
																	"key": "default",
																	"value": "false",
																	"description": "Whether set the file as the default Virtual Background file.",
																	"type": "text"
																},
																{
																	"key": "set_default_for_all_panelists",
																	"value": "true",
																	"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"is_default\": \"<boolean>\",\n  \"size\": \"<integer>\",\n  \"type\": \"image\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabled.\n\n**Error Code:** `120` <br>\n* No file uploaded. Verify that a file has been uploaded. \n* File size cannot exceed 15M. \n* A maxi",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) The Virtual Background's file path, in binary format.",
																	"type": "text"
																},
																{
																	"key": "default",
																	"value": "false",
																	"description": "Whether set the file as the default Virtual Background file.",
																	"type": "text"
																},
																{
																	"key": "set_default_for_all_panelists",
																	"value": "true",
																	"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired.\n\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) The Virtual Background's file path, in binary format.",
																	"type": "text"
																},
																{
																	"key": "default",
																	"value": "false",
																	"description": "Whether set the file as the default Virtual Background file.",
																	"type": "text"
																},
																{
																	"key": "set_default_for_all_panelists",
																	"value": "true",
																	"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a webinar's branding Virtual Backgrounds",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"virtual_backgrounds"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "A comma-separated list of the Virtual Background file IDs to delete."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to delete a webinar's session branding [Virtual Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \n* No content. \n* Virtual Background file(s) deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "A comma-separated list of the Virtual Background file IDs to delete."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}\n\n**Error Code:** `300` <br>\nInvalid parameter: ids\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enable",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "A comma-separated list of the Virtual Background file IDs to delete."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired.\n\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "A comma-separated list of the Virtual Background file IDs to delete."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set webinar's default branding Virtual Background",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?id=<string>&set_default_for_all_panelists=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"virtual_backgrounds"
													],
													"query": [
														{
															"key": "id",
															"value": "<string>",
															"description": "The Virtual Background file ID to update."
														},
														{
															"key": "set_default_for_all_panelists",
															"value": "<boolean>",
															"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to set a webinar's default session branding [Virtual Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \n* No content. \n* Virtual Background updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?id=<string>&set_default_for_all_panelists=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "The Virtual Background file ID to update."
																},
																{
																	"key": "set_default_for_all_panelists",
																	"value": "<boolean>",
																	"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}\n\n**Error Code:** `300` <br>\nInvalid parameter: {id}\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabl",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?id=<string>&set_default_for_all_panelists=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "The Virtual Background file ID to update."
																},
																{
																	"key": "set_default_for_all_panelists",
																	"value": "<boolean>",
																	"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired.\n\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/virtual_backgrounds?id=<string>&set_default_for_all_panelists=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"virtual_backgrounds"
															],
															"query": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "The Virtual Background file ID to update."
																},
																{
																	"key": "set_default_for_all_panelists",
																	"value": "<boolean>",
																	"description": "Whether to set the Virtual Background file as the new default for all panelists. This includes panelists not currently assigned a default Virtual Background."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "wallpaper",
									"item": [
										{
											"name": "Upload a webinar's branding wallpaper",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<string>",
															"description": "(Required) The wallpaper's file path, in binary format.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"wallpaper"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to upload a webinar's session branding wallpaper file. Webinar branding wallpaper files have the following requirements: \n* A webinar can only have one wallpaper file. \n* You can only upload image files that are in JPG/JPEG, GIF, or PNG format. \n* Image files must be 16:9 ratio. The recommended image size is 1920 x 1080 pixels (px). \n* The wallpaper file size cannot exceed 15 megabytes (MB). \n\n **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `201`   \n \nWebinar wallpaper uploaded.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) The wallpaper's file path, in binary format.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"wallpaper"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"type\": \"image\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabled.\n\n**Error Code:** `120` <br>\n* No file uploaded. Verify that a file has been uploaded. \n* File size cannot exceed 15M. \n* A maxi",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) The wallpaper's file path, in binary format.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"wallpaper"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired.\n\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<string>",
																	"description": "(Required) The wallpaper's file path, in binary format.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"wallpaper"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a webinar's branding wallpaper",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding",
														"wallpaper"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to delete a webinar's session branding wallpaper file. \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \n* No content. \n* Webinar wallpaper deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"wallpaper"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}\n\n**Error Code:** `300` <br>\nInvalid parameter: {id}\n\n**Error Code:** `3000` <br>\nThis webinar does not have session branding enabl",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"wallpaper"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired.\n\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/branding/wallpaper",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"branding",
																"wallpaper"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get webinar's session branding",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/branding",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"branding"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Use this API to get the webinar's [Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) information. Session branding lets hosts visually customize a webinar by setting a webinar wallpaper that displays behind video tiles. Session branding also lets hosts set the Virtual Background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers. \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The **Webinar Session Branding** setting enabled.\n\n**Scopes:** `webinar:read`,`webinar:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \nWebinar session branding returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"wallpaper\": {\n    \"id\": \"<string>\"\n  },\n  \"virtual_backgrounds\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_default\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"is_default\": \"<boolean>\"\n    }\n  ],\n  \"name_tags\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"text_color\": \"<string>\",\n      \"accent_color\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_default\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"text_color\": \"<string>\",\n      \"accent_color\": \"<string>\",\n      \"background_color\": \"<string>\",\n      \"is_default\": \"<boolean>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}\n\n**Error Code:** `3000` <br>\nYou cannot enable session branding for this webinar.\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser \"{userId}\" does not exist or does not belong to this account.\n\n**Error Code:** `3001` <br>\nWebinar \"{webinarId}\" not found or has expired.\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/branding",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"branding"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "invite_links",
							"item": [
								{
									"name": "Create webinar's invite links",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attendees\": [\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"ttl\": 7200\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/invite_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"invite_links"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Create a batch of invitation links for a webinar.\n\n**Prerequisites:**\n\n* Business, Education or API Plan with the Webinar add-on.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`   \n \nWebinar Invite Links Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"attendees\": [\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"ttl\": 7200\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/invite_links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"invite_links"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"attendees\": [\n    {\n      \"join_url\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"join_url\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n * Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br> <br>\n**Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}.<br> <br>\n**Error Code:** `1001` <br>\n User does ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"attendees\": [\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"ttl\": 7200\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/invite_links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"invite_links"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "jointoken",
							"item": [
								{
									"name": "live_streaming",
									"item": [
										{
											"name": "Get a webinar's join token for live streaming",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/live_streaming",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"jointoken",
														"live_streaming"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to get a webinar's archive token to allow live streaming. The join token allows a recording bot implemented using Zoom meeting SDK to connect to a Zoom meeting &quot;hosted by the issuer of the token&quot;, and can call the streaming method automatically. It supports both regular live streaming, and raw streaming. \n\n **Prerequisites:** \n* A Pro or higher plan with a Webinar Add-on. \n* The **Allow livestreaming of webinars** user setting enabled in the Zoom web portal.\n\n**Scopes:** `webinar_token:read:admin:live_streaming`,`webinar_token:read:live_streaming`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nWebinar live streaming token returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/live_streaming",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"live_streaming"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"expire_in\": 120,\n  \"token\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid webinar ID.\n\n**Error Code:** `124` <br>\nThis API only supports OAuth2 authorization.\n\n**Error Code:** `3000` <br>\nNot allowed to start live streaming. To use this feature, e",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/live_streaming",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"live_streaming"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nWebinar ID does not exist.\n\n**Error Code:** `3001` <br>\nWebinar does not exist: {webinarId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/live_streaming",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"live_streaming"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "local_archiving",
									"item": [
										{
											"name": "Get a webinar's archive token for local archiving",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_archiving",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"jointoken",
														"local_archiving"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to get a webinar's archive token to allow local archiving. The archive token allows a meeting SDK app or bot to get archive permission to access the webinar's raw audio and video media stream in real-time. \n\n **Prerequisites:** \n* A Pro or higher plan with a Webinar Add-on. \n* The **Archive meetings and webinars** account setting enabled in the Zoom web portal.\n\n**Scopes:** `webinar_token:read:admin:local_archiving`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nWebinar local archiving token returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_archiving",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"local_archiving"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"expire_in\": 120,\n  \"token\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid webinar ID.\n\n**Error Code:** `124` <br>\nThis API only supports OAuth2 authorization.\n\n**Error Code:** `3000` <br>\nNot allowed to start local archiving. To use this feature, ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_archiving",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"local_archiving"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nWebinar ID does not exist.\n\n**Error Code:** `3001` <br>\nWebinar does not exist: {webinarId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_archiving",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"local_archiving"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "local_recording",
									"item": [
										{
											"name": "Get a webinar's join token for local recording",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_recording",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"jointoken",
														"local_recording"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Use this API to get a webinar's join token to allow for local recording. The join token lets a recording bot implemented using Zoom Meeting SDK to connect to a Zoom webinar. The recording bot can then automatically start locally recording. This supports both regular and raw local recording types. \n\n **Prerequisites:** \n* A Pro or higher plan with a Webinar Add-on. \n* The **Local recording** user setting enabled in the Zoom web portal.\n\n**Scopes:** `webinar_token:read:admin:local_recording`,`webinar_token:read:local_recording`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   \n \nWebinar local recording token returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_recording",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"local_recording"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"expire_in\": 120,\n  \"token\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid webinar ID.\n\n**Error Code:** `124` <br>\nThis API only supports OAuth2 authorization.\n\n**Error Code:** `3000` <br>\nNot allowed to start local recording. To use this feature, ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_recording",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"local_recording"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nWebinar ID does not exist.\n\n**Error Code:** `3001` <br>\nWebinar does not exist: {webinarId}\n\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/jointoken/local_recording",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"jointoken",
																"local_recording"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "livestream",
							"item": [
								{
									"name": "status",
									"item": [
										{
											"name": "Update live stream status",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"stop\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/livestream/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"livestream",
														"status"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Let users [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Update the status of a webinar's live stream.  \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan with a Webinar Add-on.  \n \n* Live streaming details must be [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   \n \nMeeting live stream updated.\n\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"stop\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/livestream/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"livestream",
																"status"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n * Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br> <br>\n**Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}.<br> <br>\n**Error Code:** `1001` <br>\n User does ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"stop\",\n  \"settings\": {\n    \"active_speaker_name\": \"<boolean>\",\n    \"display_name\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/livestream/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"livestream",
																"status"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get live stream details",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/livestream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"livestream"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<string>",
													"description": "(Required) The webinar's unique ID."
												}
											]
										},
										"description": "Get a webinar's live stream configuration details, such as Stream URL, Stream Key and Page URL.\n\nZoom allows users to [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform.\n\n \n**Prerequisites:**  \n \n* Pro or higher plan with the webinar add-on.  \n \n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.  \n\n\n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200` **OK**   Live stream details returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"livestream"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page_url\": \"<string>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n * Webinar ID does not exist.<br>* Invalid Webinar ID.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} does not exist.<br> <br>\n**Error Code:** `1001` <br>\n User {userId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"livestream"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a live stream",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/livestream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"livestream"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Update a webinar's live stream information. \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan with the webinar add-on.  \n \n* Live streaming details must be [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`  \n \nMeeting live stream updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"livestream"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n * Webinar Id does not exist.<br>\n* Invalid Webinar Id.<br> <br>\n**Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}.<br> <br>\n**Error Code:** `1001` <br>\n User does ",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page_url\": \"<uri>\",\n  \"stream_key\": \"<string>\",\n  \"stream_url\": \"<string>\",\n  \"resolution\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/livestream",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"livestream"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "panelists",
							"item": [
								{
									"name": "{panelistId}",
									"item": [
										{
											"name": "Remove a panelist",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists/:panelistId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists",
														":panelistId"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														},
														{
															"key": "panelistId",
															"value": "<string>",
															"description": "(Required) The panelist's ID or email."
														}
													]
												},
												"description": "[Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb) a single panelist from a webinar.  \n  Retrieve the `panelistId` by calling **List Panelists API**.  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with the [webinar add-on](https://zoom.us/webinar).  \n  \n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`  \n \nPanelist removed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/panelists/:panelistId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"panelists",
																":panelistId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "panelistId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User  {accountId} does not belong to this account. <br>\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/panelists/:panelistId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"panelists",
																":panelistId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "panelistId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {email} does not exist or does not belong to this account. <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired. <br>\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/panelists/:panelistId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"panelists",
																":panelistId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "panelistId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List panelists",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"panelists"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "List all of a webinar's panelists.  \n\nWebinar panelists can view and send video, screen share, annotate, and do much more compared to webinar attendees. \n\n\n**Prerequisites:**  \n \n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).  \n  \n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"panelists\": [\n    {\n      \"id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"join_url\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"join_url\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add panelists",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"panelists\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"panelists"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Panelists in a webinar can view and send video, screen share, annotate, and do much more compared to attendees in a webinar.  \n [Add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.  \n   \n \n**Prerequisites:**\n* Pro or a higher plan with the [Webinar Add-on](https://zoom.us/webinar).  \n  \n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nPanelist created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"panelists\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"updated_at\": \"<dateTime>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `3000` <br>\n You have reached the limit for the number of panelists you can add. Contact Zoom Support ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"panelists\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"panelists\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests \n\n ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"panelists\": [\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"name\": \"<string>\",\n      \"virtual_background_id\": \"<string>\",\n      \"name_tag_id\": \"<string>\",\n      \"name_tag_name\": \"<string>\",\n      \"name_tag_pronouns\": \"<string>\",\n      \"name_tag_description\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove webinar panelists",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"panelists"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Remove all the panelists from a webinar.  \n \n**Prerequisites:**  \n \n* Pro or a higher plan with the [webinar add-on](https://zoom.us/webinar).  \n  \n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`  \n \nPanelists removed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/panelists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"panelists"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "polls",
							"item": [
								{
									"name": "{pollId}",
									"item": [
										{
											"name": "Get a webinar poll",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls",
														":pollId"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														},
														{
															"key": "pollId",
															"value": "<string>",
															"description": "(Required) The poll ID"
														}
													]
												},
												"description": "Get a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) details.  \n   \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`  \n \nWebinar Poll object returned",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"status\": \"notstart\",\n  \"anonymous\": false,\n  \"poll_type\": 3,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"multiple\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"matching\"\n    }\n  ],\n  \"title\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update a webinar poll",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls",
														":pollId"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														},
														{
															"key": "pollId",
															"value": "<string>",
															"description": "(Required) The poll ID"
														}
													]
												},
												"description": "Update a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`  \n \nWebinar Poll Updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `4400` <br>\n * Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced webinar polls disabled. T",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 2,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"fill_in_the_blank\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a webinar poll",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls",
														":pollId"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														},
														{
															"key": "pollId",
															"value": "<string>",
															"description": "(Required) The poll ID"
														}
													]
												},
												"description": "Delete a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`  \n \nWebinar Poll deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/polls/:pollId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"polls",
																":pollId"
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "pollId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List a webinar's polls ",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/polls?anonymous=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"polls"
											],
											"query": [
												{
													"key": "anonymous",
													"value": "<boolean>",
													"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
												}
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "List all the [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) of a Webinar.  \n   \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nList polls of a Webinar  returned",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls?anonymous=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls"
													],
													"query": [
														{
															"key": "anonymous",
															"value": "<boolean>",
															"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"polls\": [\n    {\n      \"id\": \"<string>\",\n      \"status\": \"ended\",\n      \"anonymous\": false,\n      \"poll_type\": 2,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"fill_in_the_blank\"\n        }\n      ],\n      \"title\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"status\": \"ended\",\n      \"anonymous\": false,\n      \"poll_type\": 1,\n      \"questions\": [\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"multiple\"\n        },\n        {\n          \"answer_max_character\": \"<integer>\",\n          \"answer_min_character\": \"<integer>\",\n          \"answer_required\": false,\n          \"answers\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"case_sensitive\": false,\n          \"name\": \"<string>\",\n          \"prompts\": [\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"prompt_question\": \"<string>\",\n              \"prompt_right_answers\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"rating_max_label\": \"<string>\",\n          \"rating_max_value\": \"<integer>\",\n          \"rating_min_label\": \"<string>\",\n          \"rating_min_value\": \"<integer>\",\n          \"right_answers\": [\n            \"<string>\"\n          ],\n          \"show_as_dropdown\": false,\n          \"type\": \"rank_order\"\n        }\n      ],\n      \"title\": \"<string>\"\n    }\n  ],\n  \"total_records\": \"<integer>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls?anonymous=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls"
													],
													"query": [
														{
															"key": "anonymous",
															"value": "<boolean>",
															"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls?anonymous=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls"
													],
													"query": [
														{
															"key": "anonymous",
															"value": "<boolean>",
															"description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a webinar's poll",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 1,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"short_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/polls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"polls"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Create a [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) for a webinar.  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  \n \nWebinar Poll Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 1,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"short_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"status\": \"sharing\",\n  \"anonymous\": false,\n  \"poll_type\": 3,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"long_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"matching\"\n    }\n  ],\n  \"title\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `4400` <br>\n * Webinar polls disabled. To enable this feature, enable the \"Webinar Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced webinar polls disabled. T",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 1,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"short_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"anonymous\": false,\n  \"poll_type\": 1,\n  \"questions\": [\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"short_answer\"\n    },\n    {\n      \"answer_max_character\": \"<integer>\",\n      \"answer_min_character\": \"<integer>\",\n      \"answer_required\": false,\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"case_sensitive\": false,\n      \"name\": \"<string>\",\n      \"prompts\": [\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"prompt_question\": \"<string>\",\n          \"prompt_right_answers\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"rating_max_label\": \"<string>\",\n      \"rating_max_value\": \"<integer>\",\n      \"rating_min_label\": \"<string>\",\n      \"rating_min_value\": \"<integer>\",\n      \"right_answers\": [\n        \"<string>\"\n      ],\n      \"show_as_dropdown\": false,\n      \"type\": \"rank_order\"\n    }\n  ],\n  \"title\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/polls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"polls"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "registrants",
							"item": [
								{
									"name": "questions",
									"item": [
										{
											"name": "List registration questions",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants/questions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants",
														"questions"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "List registration questions and fields that are to be answered by users while registering for a webinar. \n\n Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  \n  \n**Prerequisites:**  \n  \n* Pro or higher plan with the webinar add-on.\n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `200`   Webinar registrant question object returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single_dropdown\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single_radio\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"country\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"state\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}"
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update registration questions",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"multiple\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single_radio\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"last_name\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"last_name\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants/questions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants",
														"questions"
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Update registration questions and fields of a scheduled webinar for users to answer during webinar registration. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  \n   \n \n**Prerequisites:**  \n   \n* Pro or higher plan with a Webinar Add-on.\n* Registration option for Webinar should be set as required to use this API. \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204`   Webinar registrant questions updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"multiple\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single_radio\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"last_name\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"last_name\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"multiple\"\n    },\n    {\n      \"answers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"required\": \"<boolean>\",\n      \"title\": \"<string>\",\n      \"type\": \"single_radio\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"last_name\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"field_name\": \"last_name\",\n      \"required\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/questions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"questions"
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "status",
									"item": [
										{
											"name": "Update registrant's status",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants/status?occurrence_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants",
														"status"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														}
													]
												},
												"description": "Update webinar registrants' registration status. You can approve or deny a registrant, or revoke a registrant's approval. \n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
											},
											"response": [
												{
													"name": "**HTTP Status Code:** `204` <br>\n Registrant status updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}. <br>\n**Error Code:** `3035` <br>\n Webinar has reached maximum attendee capacity. <br>\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account. <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired. <br>\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests \n\n ",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"action\": \"deny\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/status?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																"status"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{registrantId}",
									"item": [
										{
											"name": "Get a webinar registrant",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants",
														":registrantId"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<long>",
															"description": "(Required) The webinar's ID."
														},
														{
															"key": "registrantId",
															"value": "<string>",
															"description": "(Required) The registrant ID."
														}
													]
												},
												"description": "Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. The webinar feature lets a host broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar.  \n Use this API to get details on a specific user who has registered for the webinar.  \n   \n \n**Prerequisites:**  \n \n* The account must have a webinar plan.\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "Success.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"country\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"no_of_employees\": \"1-20\",\n  \"org\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"purchasing_time_frame\": \"\",\n  \"role_in_purchase_process\": \"Not involved\",\n  \"state\": \"<string>\",\n  \"status\": \"denied\",\n  \"zip\": \"<string>\",\n  \"language\": \"de-DE\",\n  \"create_time\": \"<dateTime>\",\n  \"join_url\": \"<string>\"\n}"
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The meeting or webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a webinar registrant",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
															"type": "string"
														},
														{
															"key": "authUrl",
															"value": "/",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants",
														":registrantId"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The webinar occurrence ID."
														}
													],
													"variable": [
														{
															"key": "webinarId",
															"value": "<integer>",
															"description": "(Required) The webinar ID."
														},
														{
															"key": "registrantId",
															"value": "<string>",
															"description": "(Required) The registrant ID."
														}
													]
												},
												"description": "Delete a webinar registrant.  \n   \n \n\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
											},
											"response": [
												{
													"name": "**HTTP status code:** `204`   \n \nOK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br> <br>\n**Error Code:** `300` <br>\n The v",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": "Added as a part of security scheme: oauth2"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/webinars/:webinarId/registrants/:registrantId?occurrence_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"webinars",
																":webinarId",
																"registrants",
																":registrantId"
															],
															"query": [
																{
																	"key": "occurrence_id",
																	"value": "<string>",
																	"description": "The webinar occurrence ID."
																}
															],
															"variable": [
																{
																	"key": "webinarId"
																},
																{
																	"key": "registrantId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List webinar registrants",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_id=<string>&status=approved&tracking_source_id=<string>&page_size=30&page_number=1&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"registrants"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "status",
													"value": "approved",
													"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
												},
												{
													"key": "tracking_source_id",
													"value": "<string>",
													"description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details."
												},
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "**Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												}
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "List all users that have registered for a given webinar. Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. The webinar functionality lets a host broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar.  \n\n\n**Prerequisites**\n* Pro or higher plan with a Webinar Add-on.  \n \n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`  \n \nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_id=<string>&status=approved&tracking_source_id=<string>&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
														},
														{
															"key": "tracking_source_id",
															"value": "<string>",
															"description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"registrants\": [\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"51-100\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"No timeframe\",\n      \"role_in_purchase_process\": \"Influencer\",\n      \"state\": \"<string>\",\n      \"status\": \"approved\",\n      \"zip\": \"<string>\",\n      \"create_time\": \"<dateTime>\",\n      \"join_url\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"address\": \"<string>\",\n      \"city\": \"<string>\",\n      \"comments\": \"<string>\",\n      \"country\": \"<string>\",\n      \"custom_questions\": [\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"title\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"industry\": \"<string>\",\n      \"job_title\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"no_of_employees\": \"5,001-10,000\",\n      \"org\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"purchasing_time_frame\": \"No timeframe\",\n      \"role_in_purchase_process\": \"Influencer\",\n      \"state\": \"<string>\",\n      \"status\": \"approved\",\n      \"zip\": \"<string>\",\n      \"create_time\": \"<dateTime>\",\n      \"join_url\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_id=<string>&status=approved&tracking_source_id=<string>&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
														},
														{
															"key": "tracking_source_id",
															"value": "<string>",
															"description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_id=<string>&status=approved&tracking_source_id=<string>&page_size=30&page_number=1&next_page_token=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_id",
															"value": "<string>",
															"description": "The meeting or webinar occurrence ID."
														},
														{
															"key": "status",
															"value": "approved",
															"description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied."
														},
														{
															"key": "tracking_source_id",
															"value": "<string>",
															"description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details."
														},
														{
															"key": "page_size",
															"value": "30",
															"description": "The number of records returned within a single API call."
														},
														{
															"key": "page_number",
															"value": "1",
															"description": "**Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
														},
														{
															"key": "next_page_token",
															"value": "<string>",
															"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a webinar registrant",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"1-3 months\",\n  \"role_in_purchase_process\": \"Not involved\",\n  \"language\": \"jp-JP\",\n  \"source_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_ids=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"registrants"
											],
											"query": [
												{
													"key": "occurrence_ids",
													"value": "<string>",
													"description": "A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API."
												}
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Create and submit a user's registration for a webinar. Zoom users with a [Webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars allow hosts to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar. \n\n**Prerequisites:** \n* A Pro or higher plan with the Webinar add-on.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`   \n \nWebinar registration created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"1-3 months\",\n  \"role_in_purchase_process\": \"Not involved\",\n  \"language\": \"jp-JP\",\n  \"source_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"join_url\": \"<string>\",\n  \"registrant_id\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"topic\": \"<string>\",\n  \"occurrences\": [\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"<string>\"\n    },\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId} <br>\n**Error Code:** `3000` <br>\n This webinar does not have registration as required: {webinarId}. <br>\n**Error Code:** `3027`",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"1-3 months\",\n  \"role_in_purchase_process\": \"Not involved\",\n  \"language\": \"jp-JP\",\n  \"source_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User \"{userId}\" does not exist or does not belong to this account. <br>\n**Error Code:** `3001` <br>\n Webinar \"{webinarId}\" not found or has expired. <br>\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"1-3 months\",\n  \"role_in_purchase_process\": \"Not involved\",\n  \"language\": \"jp-JP\",\n  \"source_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `429` <br>\n Too Many Requests \n\n ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"city\": \"<string>\",\n  \"state\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"comments\": \"<string>\",\n  \"custom_questions\": [\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"industry\": \"<string>\",\n  \"job_title\": \"<string>\",\n  \"no_of_employees\": \"\",\n  \"org\": \"<string>\",\n  \"purchasing_time_frame\": \"1-3 months\",\n  \"role_in_purchase_process\": \"Not involved\",\n  \"language\": \"jp-JP\",\n  \"source_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/registrants?occurrence_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"registrants"
													],
													"query": [
														{
															"key": "occurrence_ids",
															"value": "<string>",
															"description": "A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "sip_dialing",
							"item": [
								{
									"name": "Get a webinar SIP URI with Passcode",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"passcode\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/sip_dialing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"sip_dialing"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID. \n\n When storing this value in your database, store it as a long format integer and **not** an integer. Webinar IDs can exceed 10 digits."
												}
											]
										},
										"description": "Get a webinar's SIP URI. The URI consists of the webinar ID, an optional user-supplied passcode, and participant identifier code. The API return data also includes additional fields to indicate whether the API caller has a valid Cloud Room Connector subscription, the participant identifier code from the URI, and the SIP URI validity period in seconds. \n\n**Scopes:** `webinar:write:admin:sip_dialing`,`webinar:write:sip_dialing`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `201`  Webinar's encoded SIP URI returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"passcode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/sip_dialing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"sip_dialing"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"sip_dialing\": \"<string>\",\n  \"paid_crc_plan_participant\": \"<boolean>\",\n  \"participant_identifier_code\": \"<string>\",\n  \"expire_in\": \"<long>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Webinar Id does not exist. <br>\n**Error Code:** `300` <br>\n Invalid Webinar Id. <br>\n**Error Code:** `3000` <br>\n Cannot access meeting info. <br>\n**Error Code:** `3000` <br>\n Th",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"passcode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/sip_dialing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"sip_dialing"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Update webinar status",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"action\": \"end\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"status"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Update a webinar's status. Use this API to end an ongoing webinar.  \n   \n \n**Prerequisites:**  \n \n* The account must hold a valid [Webinar plan](https://zoom.us/webinar).\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"end\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"status"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `3003` <br>\n You are not the meeting host.<br> <br>\n**Error Code:** `3063` <br>\n Can not end on-premis",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"end\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"status"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"action\": \"end\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"status"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "survey",
							"item": [
								{
									"name": "Get a webinar survey",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/survey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"survey"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Return information about a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \n Webinar survey object returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"multiple\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"show_in_the_follow_up_email\": false,\n  \"third_party_survey\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the \"Webinar Survey\" setting in the Zoom web portal's \"Settings\" int",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `300` <br>\n Webinar ID does not exist. <br>\n**Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a webinar survey",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/survey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"survey"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Use this API to delete a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar Add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`   \n \n Webinar survey deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the \"Webinar Survey\" setting in the Zoom web portal's \"Settings\" int",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `300` <br>\n Webinar ID does not exist. <br>\n**Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a webinar survey",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"matching\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"show_in_the_follow_up_email\": false,\n  \"third_party_survey\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/survey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"survey"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Update a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651).  **Prerequisites:** * A Pro or higher plan with the Webinar add-on. * Enable the [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature in the host's account.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`   \n \n Webinar survey updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"matching\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"show_in_the_follow_up_email\": false,\n  \"third_party_survey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `300` <br>\n Invalid third party survey: {third_party_survey}. <br>\n**Error Code:** `3000` <br>\n Webinar survey disabled. To use this feat",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"matching\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"show_in_the_follow_up_email\": false,\n  \"third_party_survey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `300` <br>\n Webinar ID does not exist. <br>\n**Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_survey\": {\n    \"title\": \"<string>\",\n    \"anonymous\": false,\n    \"numbered_questions\": false,\n    \"show_question_type\": false,\n    \"feedback\": \"<string>\",\n    \"questions\": [\n      {\n        \"name\": \"<string>\",\n        \"type\": \"matching\",\n        \"answer_required\": false,\n        \"show_as_dropdown\": false,\n        \"answers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"prompts\": [\n          {\n            \"prompt_question\": \"<string>\"\n          },\n          {\n            \"prompt_question\": \"<string>\"\n          }\n        ],\n        \"answer_min_character\": \"<integer>\",\n        \"answer_max_character\": \"<integer>\",\n        \"rating_min_value\": \"<integer>\",\n        \"rating_max_value\": \"<integer>\",\n        \"rating_min_label\": \"<string>\",\n        \"rating_max_label\": \"<string>\"\n      }\n    ]\n  },\n  \"show_in_the_browser\": true,\n  \"show_in_the_follow_up_email\": false,\n  \"third_party_survey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/survey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"survey"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "token",
							"item": [
								{
									"name": "Get webinar's token",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/token?type=closed_caption_token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"token"
											],
											"query": [
												{
													"key": "type",
													"value": "closed_caption_token",
													"description": "The webinar token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
												}
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "Use this API to get a webinar's [closed caption token (caption URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service). This token lets you use a third-party service to stream text to their closed captioning software to the Zoom webinar. \n\n**Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The **Closed captioning** setting enabled in the Zoom web portal. \n* \n* The **Allow use of caption API Token to integrate with 3rd-party Closed Captioning services** setting enabled.\n\n**Scopes:** `webinar:read`,`webinar:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`   \n \nWebinar token returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/token?type=closed_caption_token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"token"
													],
													"query": [
														{
															"key": "type",
															"value": "closed_caption_token",
															"description": "The webinar token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"<string>\"\n}"
										},
										{
											"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid webinar ID.\n\n**Error Code:** `3000` <br>\nClosed captioning disabled. To enable this feature, enable the \"Closed captioning\" and \"Allow use of caption API Token to integrate ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/token?type=closed_caption_token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"token"
													],
													"query": [
														{
															"key": "type",
															"value": "closed_caption_token",
															"description": "The webinar token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `300` <br>\nWebinar ID does not exist.\n\n**Error Code:** `3001` <br>\nWebinar does not exist: {webinarId}\n\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/token?type=closed_caption_token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"token"
													],
													"query": [
														{
															"key": "type",
															"value": "closed_caption_token",
															"description": "The webinar token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`."
														}
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "tracking_sources",
							"item": [
								{
									"name": "Get webinar tracking sources",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId/tracking_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId",
												"tracking_sources"
											],
											"variable": [
												{
													"key": "webinarId",
													"value": "<long>",
													"description": "(Required) The webinar's ID."
												}
											]
										},
										"description": "[Webinar Registration Tracking Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking) allow you to see where your registrants are coming from if you share the webinar registration page in multiple platforms. You can then use the source tracking to see the number of registrants generated from each platform.  \n  Use this API to list information on all the tracking sources of a Webinar.  \n \n**Prerequisites**:  \n \n* [Webinar license](https://zoom.us/webinar).\n* Registration must be required for the Webinar.\n\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `200`",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/webinars/:webinarId/tracking_sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"webinars",
														":webinarId",
														"tracking_sources"
													],
													"variable": [
														{
															"key": "webinarId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"total_records\": \"<integer>\",\n  \"tracking_sources\": [\n    {\n      \"id\": \"<string>\",\n      \"registration_count\": \"<integer>\",\n      \"source_name\": \"<string>\",\n      \"tracking_url\": \"<string>\",\n      \"visitor_count\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"registration_count\": \"<integer>\",\n      \"source_name\": \"<string>\",\n      \"tracking_url\": \"<string>\",\n      \"visitor_count\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get a webinar",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webinars",
										":webinarId"
									],
									"query": [
										{
											"key": "occurrence_id",
											"value": "<string>",
											"description": "Unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call."
										},
										{
											"key": "show_previous_occurrences",
											"value": "<boolean>",
											"description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar."
										}
									],
									"variable": [
										{
											"key": "webinarId",
											"value": "<string>",
											"description": "(Required) The webinar's ID or universally unique ID (UUID)."
										}
									]
								},
								"description": "Get details for a scheduled Zoom Webinar.\n  \n   \n \n**Prerequisites:**\n* Pro or higher plan with a Webinar add-on.\n\n**Scopes:** `webinar:read:admin`,`webinar:read`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nSuccess",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call."
												},
												{
													"key": "show_previous_occurrences",
													"value": "<boolean>",
													"description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"host_email\": \"<email>\",\n  \"host_id\": \"<string>\",\n  \"id\": \"<long>\",\n  \"uuid\": \"<string>\",\n  \"agenda\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"duration\": \"<integer>\",\n  \"join_url\": \"<string>\",\n  \"occurrences\": [\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"available\"\n    },\n    {\n      \"duration\": \"<integer>\",\n      \"occurrence_id\": \"<string>\",\n      \"start_time\": \"<dateTime>\",\n      \"status\": \"available\"\n    }\n  ],\n  \"password\": \"<string>\",\n  \"encrypted_passcode\": \"<string>\",\n  \"h323_passcode\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 3,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": \"<integer>\",\n    \"monthly_week\": 2,\n    \"monthly_week_day\": 7,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"<string>\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 6\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"notify_registrants\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"all\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"start_url\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user to perform this action. <b",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call."
												},
												{
													"key": "show_previous_occurrences",
													"value": "<boolean>",
													"description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&show_previous_occurrences=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call."
												},
												{
													"key": "show_previous_occurrences",
													"value": "<boolean>",
													"description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a webinar",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&cancel_webinar_reminder=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webinars",
										":webinarId"
									],
									"query": [
										{
											"key": "occurrence_id",
											"value": "<string>",
											"description": "The meeting or webinar occurrence ID."
										},
										{
											"key": "cancel_webinar_reminder",
											"value": "<boolean>",
											"description": "`true` - Notify panelists and registrants about the webinar cancellation via email. \n\n`false` - Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`."
										}
									],
									"variable": [
										{
											"key": "webinarId",
											"value": "<long>",
											"description": "(Required) The webinar's ID."
										}
									]
								},
								"description": "Delete a webinar. \n\n\n**Prerequisites:**  \n \n* Pro or higher plan with the webinar add-on.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204` <br>\n Webinar deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&cancel_webinar_reminder=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "cancel_webinar_reminder",
													"value": "<boolean>",
													"description": "`true` - Notify panelists and registrants about the webinar cancellation via email. \n\n`false` - Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `3002` <br>\n Sorry, you cannot delete this webinar since it is in progress.<br> <br>\n**Error Code:** `",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&cancel_webinar_reminder=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "cancel_webinar_reminder",
													"value": "<boolean>",
													"description": "`true` - Notify panelists and registrants about the webinar cancellation via email. \n\n`false` - Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>&cancel_webinar_reminder=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "The meeting or webinar occurrence ID."
												},
												{
													"key": "cancel_webinar_reminder",
													"value": "<boolean>",
													"description": "`true` - Notify panelists and registrants about the webinar cancellation via email. \n\n`false` - Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a webinar",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"notify_registrants\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"all\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webinars",
										":webinarId"
									],
									"query": [
										{
											"key": "occurrence_id",
											"value": "<string>",
											"description": "Webinar occurrence ID. Support change of agenda, start time, duration, and settings `host_video`, `panelist_video`, `hd_video, watermark`, `auto_recording`."
										}
									],
									"variable": [
										{
											"key": "webinarId",
											"value": "<long>",
											"description": "(Required) The webinar's ID."
										}
									]
								},
								"description": "Make updates to a scheduled webinar. \n\n**100 requests per day**. The rate limit is applied to the `userId` of the **webinar host** used to make the request. \n\n**Prerequisites** \n* A Pro or higher plan with a webinar add-on.\n\n**Scopes:** `webinar:write`,`webinar:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `204`  \n \nWebinar updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"notify_registrants\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"all\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Webinar occurrence ID. Support change of agenda, start time, duration, and settings `host_video`, `panelist_video`, `hd_video, watermark`, `auto_recording`."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId} <br>\n**Error Code:** `3003` <br>\n * You are not the meeting host. \n* Users in \"{0}\" have been blocked from joining meetings and",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"notify_registrants\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"all\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Webinar occurrence ID. Support change of agenda, start time, duration, and settings `host_video`, `panelist_video`, `hd_video, watermark`, `auto_recording`."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3001` <br>\n Webinar {webinarId} not found or has expired.<br> <br>\n",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agenda\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"password\": \"<string>\",\n  \"schedule_for\": \"<string>\",\n  \"recurrence\": {\n    \"type\": 1,\n    \"end_date_time\": \"<dateTime>\",\n    \"end_times\": 1,\n    \"monthly_day\": 1,\n    \"monthly_week\": 1,\n    \"monthly_week_day\": 4,\n    \"repeat_interval\": \"<integer>\",\n    \"weekly_days\": \"1\"\n  },\n  \"settings\": {\n    \"allow_multiple_devices\": \"<boolean>\",\n    \"alternative_hosts\": \"<string>\",\n    \"alternative_host_update_polls\": \"<boolean>\",\n    \"approval_type\": 2,\n    \"attendees_and_panelists_reminder_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 4\n    },\n    \"audio\": \"both\",\n    \"audio_conference_info\": \"<string>\",\n    \"authentication_domains\": \"<string>\",\n    \"authentication_name\": \"<string>\",\n    \"authentication_option\": \"<string>\",\n    \"auto_recording\": \"none\",\n    \"close_registration\": \"<boolean>\",\n    \"contact_email\": \"<string>\",\n    \"contact_name\": \"<string>\",\n    \"email_language\": \"<string>\",\n    \"enforce_login\": \"<boolean>\",\n    \"enforce_login_domains\": \"<string>\",\n    \"follow_up_absentees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"follow_up_attendees_email_notification\": {\n      \"enable\": \"<boolean>\",\n      \"type\": 2\n    },\n    \"global_dial_in_countries\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"hd_video\": false,\n    \"hd_video_for_attendees\": false,\n    \"host_video\": \"<boolean>\",\n    \"language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"languages\": \"<string>\"\n        }\n      ]\n    },\n    \"sign_language_interpretation\": {\n      \"enable\": \"<boolean>\",\n      \"interpreters\": [\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"sign_language\": \"<string>\"\n        }\n      ]\n    },\n    \"panelist_authentication\": \"<boolean>\",\n    \"meeting_authentication\": \"<boolean>\",\n    \"add_watermark\": \"<boolean>\",\n    \"add_audio_watermark\": \"<boolean>\",\n    \"notify_registrants\": \"<boolean>\",\n    \"on_demand\": false,\n    \"panelists_invitation_email_notification\": \"<boolean>\",\n    \"panelists_video\": \"<boolean>\",\n    \"post_webinar_survey\": \"<boolean>\",\n    \"practice_session\": false,\n    \"question_and_answer\": {\n      \"allow_submit_questions\": \"<boolean>\",\n      \"allow_anonymous_questions\": \"<boolean>\",\n      \"answer_questions\": \"all\",\n      \"attendees_can_comment\": \"<boolean>\",\n      \"attendees_can_upvote\": \"<boolean>\",\n      \"allow_auto_reply\": \"<boolean>\",\n      \"auto_reply_text\": \"<string>\",\n      \"enable\": \"<boolean>\"\n    },\n    \"registrants_confirmation_email\": \"<boolean>\",\n    \"registrants_email_notification\": \"<boolean>\",\n    \"registrants_restrict_number\": 0,\n    \"registration_type\": 1,\n    \"send_1080p_video_to_attendees\": false,\n    \"show_share_button\": \"<boolean>\",\n    \"survey_url\": \"<string>\",\n    \"enable_session_branding\": \"<boolean>\"\n  },\n  \"start_time\": \"<dateTime>\",\n  \"timezone\": \"<string>\",\n  \"topic\": \"<string>\",\n  \"tracking_fields\": [\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"field\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"type\": 5,\n  \"is_simulive\": \"<boolean>\",\n  \"record_file_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webinars/:webinarId?occurrence_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webinars",
												":webinarId"
											],
											"query": [
												{
													"key": "occurrence_id",
													"value": "<string>",
													"description": "Webinar occurrence ID. Support change of agenda, start time, duration, and settings `host_video`, `panelist_video`, `hd_video, watermark`, `auto_recording`."
												}
											],
											"variable": [
												{
													"key": "webinarId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "h323",
			"item": [
				{
					"name": "devices",
					"item": [
						{
							"name": "{deviceId}",
							"item": [
								{
									"name": "Delete a H.323/SIP device",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/h323/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"h323",
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "<string>",
													"description": "(Required) The device ID."
												}
											]
										},
										"description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete a H.323/SIP device from your Zoom account.  \n   \n \n\n\n**Scopes:** `h323:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "You do not have the permission to delete this device.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/h323/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"h323",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "H.323/SIP device deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/h323/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"h323",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/h323/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"h323",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a H.323/SIP device",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "/",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/h323/devices/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"h323",
												"devices",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "<string>",
													"description": "(Required) The device ID."
												}
											]
										},
										"description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit information of a H.323/SIP device from your Zoom account.  \n   \n \n\n\n**Scopes:** `h323:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
									},
									"response": [
										{
											"name": "**HTTP Status Code:** `204`  \n \nH.323/SIP device updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/h323/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"h323",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2020` <br>\nH.323 device's display name:{displayName} is already in use.\n\n",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/h323/devices/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"h323",
														"devices",
														":deviceId"
													],
													"variable": [
														{
															"key": "deviceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List H.323/SIP devices",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/h323/devices?page_size=30&page_number=1&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"h323",
										"devices"
									],
									"query": [
										{
											"key": "page_size",
											"value": "30",
											"description": "The number of records returned within a single API call."
										},
										{
											"key": "page_number",
											"value": "1",
											"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
										},
										{
											"key": "next_page_token",
											"value": "<string>",
											"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
										}
									]
								},
								"description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to list all H.323/SIP Devices on a Zoom account.  \n   \n \n\n\n**Scopes:** `h323:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `200`  \n \nList of H.323/SIP devices returned.  \n \n**Error Code:** `200`  \n \nNo permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/h323/devices?page_size=30&page_number=1&next_page_token=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"h323",
												"devices"
											],
											"query": [
												{
													"key": "page_size",
													"value": "30",
													"description": "The number of records returned within a single API call."
												},
												{
													"key": "page_number",
													"value": "1",
													"description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination."
												},
												{
													"key": "next_page_token",
													"value": "<string>",
													"description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"next_page_token\": \"<string>\",\n  \"page_count\": \"<integer>\",\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": \"<integer>\",\n  \"devices\": [\n    {\n      \"encryption\": \"no\",\n      \"ip\": \"<string>\",\n      \"name\": \"<string>\",\n      \"protocol\": \"H.323\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"encryption\": \"yes\",\n      \"ip\": \"<string>\",\n      \"name\": \"<string>\",\n      \"protocol\": \"H.323\",\n      \"id\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a H.323/SIP device",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "recording:read:admin recording:write recording:write:admin recording:read phone_recording:read:admin device:write:admin device:read:admin h323:write:admin h323:read:admin meeting:write meeting:write:admin meeting:master meeting_summary:read:admin meeting:read meeting:read:admin meeting_token:read:admin:live_streaming meeting_token:read:live_streaming meeting_token:read:admin:local_archiving meeting_token:read:local_recording meeting_token:read:admin:local_recording meeting_summary:read meeting:write:sip_dialing meeting:write:admin:sip_dialing pac:read:admin pac:read report:read:admin sip_phone:write:admin sip_phone:read:admin tsp:read:admin tsp:write:admin tsp:read tsp:write tracking_fields:write:admin tracking_fields:read:admin webinar:write webinar:write:admin webinar:read:admin webinar:read webinar_token:read:admin:live_streaming webinar_token:read:live_streaming webinar_token:read:admin:local_archiving webinar_token:read:admin:local_recording webinar_token:read:local_recording webinar:write:admin:sip_dialing webinar:write:sip_dialing",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "/",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/h323/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"h323",
										"devices"
									]
								},
								"description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a H.323/SIP device to your Zoom account  \n   \n \n\n\n**Scopes:** `h323:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`"
							},
							"response": [
								{
									"name": "**HTTP Status Code:** `201`  \n \nH.323/SIP device created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/h323/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"h323",
												"devices"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\",\n  \"id\": \"<string>\"\n}"
								},
								{
									"name": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.\n\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/h323/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"h323",
												"devices"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2020` <br>\nH.323 device's display name:{displayName} is already in use.\n\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"encryption\": \"auto\",\n  \"ip\": \"<string>\",\n  \"name\": \"<string>\",\n  \"protocol\": \"SIP\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/h323/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"h323",
												"devices"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.zoom.us/v2",
			"type": "string"
		}
	]
}