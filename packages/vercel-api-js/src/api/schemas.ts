/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.1
 */
/**
 * Enum containing the actions that can be performed against a resource. Group operations are included.
 */
export type ACLAction = 'create' | 'delete' | 'list' | 'read' | 'update';

export type FlagJSONValue =
  | string
  | number
  | boolean
  | FlagJSONValue[]
  | {
      [key: string]: FlagJSONValue;
    }
  | null;

/**
 * This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
 */
export type Pagination = {
  /**
   * Amount of items in the current page.
   *
   * @example 20
   */
  count: number;
  /**
   * Timestamp that must be used to request the next page.
   *
   * @example 1540095775951
   */
  next: number | null;
  /**
   * Timestamp that must be used to request the previous page.
   *
   * @example 1540095775951
   */
  prev: number | null;
};

export type EdgeConfigItemValue =
  | string
  | number
  | boolean
  | {
      [key: string]: EdgeConfigItemValue;
    }
  | EdgeConfigItemValue[]
  | null;

/**
 * The EdgeConfig.
 */
export type EdgeConfigItem = {
  key: string;
  value: EdgeConfigItemValue;
  description?: string;
  edgeConfigId: string;
  createdAt: number;
  updatedAt: number;
};

/**
 * The EdgeConfig.
 */
export type EdgeConfigToken = {
  token: string;
  label: string;
  /**
   * This is not the token itself, but rather an id to identify the token by
   */
  id: string;
  edgeConfigId: string;
  createdAt: number;
};

/**
 * Array of events generated by the User.
 */
export type UserEvent = Record<string, any>;

/**
 * Data representing a Team.
 */
export type Team = Record<string, any>;

/**
 * A limited form of data representing a Team, due to the authentication token missing privileges to read the full Team data.
 */
export type TeamLimited = {
  /**
   * Property indicating that this Team data contains only limited information, due to the authentication token missing privileges to read the full Team data. Re-login with the Team's configured SAML Single Sign-On provider in order to upgrade the authentication token with the necessary privileges.
   */
  limited: boolean;
  /**
   * When "Single Sign-On (SAML)" is configured, this object contains information that allows the client-side to identify whether or not this Team has SAML enforced.
   */
  saml?: {
    /**
     * Information for the SAML Single Sign-On configuration.
     */
    connection?: {
      /**
       * The Identity Provider "type", for example Okta.
       *
       * @example OktaSAML
       */
      type: string;
      /**
       * Current status of the connection.
       *
       * @example linked
       */
      status: string;
      /**
       * Current state of the connection.
       *
       * @example active
       */
      state: string;
      /**
       * Timestamp (in milliseconds) of when the configuration was connected.
       *
       * @example 1611796915677
       */
      connectedAt: number;
      /**
       * Timestamp (in milliseconds) of when the last webhook event was received from WorkOS.
       *
       * @example 1611796915677
       */
      lastReceivedWebhookEvent?: number;
    };
    /**
     * Information for the Directory Sync configuration.
     */
    directory?: {
      /**
       * The Identity Provider "type", for example Okta.
       *
       * @example OktaSAML
       */
      type: string;
      /**
       * Current state of the connection.
       *
       * @example active
       */
      state: string;
      /**
       * Timestamp (in milliseconds) of when the configuration was connected.
       *
       * @example 1611796915677
       */
      connectedAt: number;
      /**
       * Timestamp (in milliseconds) of when the last webhook event was received from WorkOS.
       *
       * @example 1611796915677
       */
      lastReceivedWebhookEvent?: number;
    };
    /**
     * When `true`, interactions with the Team **must** be done with an authentication token that has been authenticated with the Team's SAML Single Sign-On provider.
     */
    enforced: boolean;
  };
  /**
   * The Team's unique identifier.
   *
   * @example team_nllPyCtREAqxxdyFKbbMDlxd
   */
  id: string;
  /**
   * The Team's slug, which is unique across the Vercel platform.
   *
   * @example my-team
   */
  slug: string;
  /**
   * Name associated with the Team account, or `null` if none has been provided.
   *
   * @example My Team
   */
  name: string | null;
  /**
   * The ID of the file used as avatar for this Team.
   *
   * @example 6eb07268bcfadd309905ffb1579354084c24655c
   */
  avatar: string | null;
  /**
   * The membership of the authenticated User in relation to the Team.
   */
  membership: {
    uid?: string;
    entitlements?: {
      entitlement: string;
    }[];
    confirmed: boolean;
    confirmedAt: number;
    accessRequestedAt?: number;
    role: 'BILLING' | 'CONTRIBUTOR' | 'DEVELOPER' | 'MEMBER' | 'OWNER' | 'VIEWER';
    additionalPermissions?: ('CreateProject' | 'FullProductionDeployment')[];
    teamId?: string;
    createdAt: number;
    created: number;
    joinedFrom?: {
      origin:
        | 'bitbucket'
        | 'dsync'
        | 'feedback'
        | 'github'
        | 'gitlab'
        | 'import'
        | 'link'
        | 'mail'
        | 'organization-teams'
        | 'saml'
        | 'teams';
      commitId?: string;
      repoId?: string;
      repoPath?: string;
      gitUserId?: string | number;
      gitUserLogin?: string;
      ssoUserId?: string;
      ssoConnectedAt?: number;
      idpUserId?: string;
      dsyncUserId?: string;
      dsyncConnectedAt?: number;
    };
  };
  /**
   * Will remain undocumented. Remove in v3 API.
   */
  created: string;
  /**
   * UNIX timestamp (in milliseconds) when the Team was created.
   *
   * @example 1630748523395
   */
  createdAt: number;
};

/**
 * Data for the currently authenticated User.
 */
export type AuthUser = {
  /**
   * UNIX timestamp (in milliseconds) when the User account was created.
   *
   * @example 1630748523395
   */
  createdAt: number;
  /**
   * When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why.
   */
  softBlock: {
    blockedAt: number;
    reason:
      | 'BLOCKED_FOR_PLATFORM_ABUSE'
      | 'ENTERPRISE_TRIAL_ENDED'
      | 'FAIR_USE_LIMITS_EXCEEDED'
      | 'SUBSCRIPTION_CANCELED'
      | 'SUBSCRIPTION_EXPIRED'
      | 'UNPAID_INVOICE';
    blockedDueToOverageType?:
      | 'analyticsUsage'
      | 'artifacts'
      | 'bandwidth'
      | 'blobStores'
      | 'blobTotalAdvancedRequests'
      | 'blobTotalAvgSizeInBytes'
      | 'blobTotalGetResponseObjectSizeInBytes'
      | 'blobTotalSimpleRequests'
      | 'buildMinute'
      | 'dataCacheRead'
      | 'dataCacheRevalidation'
      | 'dataCacheWrite'
      | 'edgeConfigRead'
      | 'edgeConfigWrite'
      | 'edgeFunctionExecutionUnits'
      | 'edgeMiddlewareInvocations'
      | 'edgeRequest'
      | 'edgeRequestAdditionalCpuDuration'
      | 'elasticConcurrencyBuildSlots'
      | 'fastDataTransfer'
      | 'fastOriginTransfer'
      | 'functionDuration'
      | 'functionInvocation'
      | 'logDrainsVolume'
      | 'monitoringMetric'
      | 'observabilityEvent'
      | 'postgresComputeTime'
      | 'postgresDataStorage'
      | 'postgresDataTransfer'
      | 'postgresDatabase'
      | 'postgresWrittenData'
      | 'serverlessFunctionExecution'
      | 'sourceImages'
      | 'storageRedisTotalBandwidthInBytes'
      | 'storageRedisTotalCommands'
      | 'storageRedisTotalDailyAvgStorageInBytes'
      | 'storageRedisTotalDatabases'
      | 'wafOwaspExcessBytes'
      | 'wafOwaspRequests'
      | 'wafRateLimitRequest'
      | 'webAnalyticsEvent';
  } | null;
  /**
   * An object containing billing infomation associated with the User account.
   */
  billing: Record<string, any> | null;
  /**
   * An object containing infomation related to the amount of platform resources may be allocated to the User account.
   */
  resourceConfig: {
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    blobStores?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    nodeType?: string;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    concurrentBuilds?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    awsAccountType?: string;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    awsAccountIds?: string[];
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cfZoneName?: string;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    imageOptimizationType?: string;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeConfigs?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeConfigSize?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeFunctionMaxSizeBytes?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeFunctionExecutionTimeoutMs?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    serverlessFunctionDefaultMaxExecutionTime?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    kvDatabases?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    postgresDatabases?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    integrationStores?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cronJobs?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cronJobsPerProject?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    microfrontendGroupsPerTeam?: number;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    microfrontendProjectsPerGroup?: number;
  };
  /**
   * Prefix that will be used in the URL of "Preview" deployments created by the User account.
   */
  stagingPrefix: string;
  /**
   * set of dashboard view preferences (cards or list) per scopeId
   */
  activeDashboardViews?: {
    scopeId: string;
    viewPreference?: 'cards' | 'list';
    favoritesViewPreference?: 'closed' | 'open';
    recentsViewPreference?: 'closed' | 'open';
  }[];
  importFlowGitNamespace?: string | number | null;
  importFlowGitNamespaceId?: string | number | null;
  importFlowGitProvider?: 'bitbucket' | 'github' | 'gitlab';
  preferredScopesAndGitNamespaces?: {
    scopeId: string;
    gitNamespaceId: string | number | null;
  }[];
  /**
   * A record of when, under a certain scopeId, a toast was dismissed
   */
  dismissedToasts?: {
    name: string;
    dismissals: {
      scopeId: string;
      createdAt: number;
    }[];
  }[];
  /**
   * A list of projects and spaces across teams that a user has marked as a favorite.
   */
  favoriteProjectsAndSpaces?: (
    | {
        projectId: string;
        scopeSlug: string;
        scopeId: string;
      }
    | {
        spaceId: string;
        scopeSlug: string;
        scopeId: string;
      }
  )[];
  /**
   * Whether the user has a trial available for a paid plan subscription.
   */
  hasTrialAvailable: boolean;
  /**
   * remote caching settings
   */
  remoteCaching?: {
    enabled?: boolean;
  };
  /**
   * data cache settings
   */
  dataCache?: {
    excessBillingEnabled?: boolean;
  };
  /**
   * Feature blocks for the user
   */
  featureBlocks?: {
    webAnalytics?: {
      blockedFrom?: number;
      blockedUntil?: number;
      isCurrentlyBlocked: boolean;
    };
  };
  northstarMigration?: {
    /**
     * The ID of the team we created for this user.
     */
    teamId: string;
    /**
     * The number of projects migrated for this user.
     */
    projects: number;
    /**
     * The number of stores migrated for this user.
     */
    stores: number;
    /**
     * The number of integration configurations migrated for this user.
     */
    integrationConfigurations: number;
    /**
     * The number of integration clients migrated for this user.
     */
    integrationClients: number;
    /**
     * The migration start time timestamp for this user.
     */
    startTime: number;
    /**
     * The migration end time timestamp for this user.
     */
    endTime: number;
  };
  /**
   * The User's unique identifier.
   *
   * @example AEIIDYVk59zbFF2Sxfyxxmua
   */
  id: string;
  /**
   * Email address associated with the User account.
   *
   * @example me@example.com
   */
  email: string;
  /**
   * Name associated with the User account, or `null` if none has been provided.
   *
   * @example John Doe
   */
  name: string | null;
  /**
   * Unique username associated with the User account.
   *
   * @example jdoe
   */
  username: string;
  /**
   * SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
   *
   * @example 22cb30c85ff45ac4c72de8981500006b28114aa1
   */
  avatar: string | null;
  /**
   * The user's default team.
   */
  defaultTeamId: string | null;
  /**
   * The user's version. Will always be `northstar`.
   */
  version: 'northstar';
};

/**
 * A limited form of data for the currently authenticated User, due to the authentication token missing privileges to read the full User data.
 */
export type AuthUserLimited = {
  /**
   * Property indicating that this User data contains only limited information, due to the authentication token missing privileges to read the full User data. Re-login with email, GitHub, GitLab or Bitbucket in order to upgrade the authentication token with the necessary privileges.
   */
  limited: boolean;
  /**
   * The User's unique identifier.
   *
   * @example AEIIDYVk59zbFF2Sxfyxxmua
   */
  id: string;
  /**
   * Email address associated with the User account.
   *
   * @example me@example.com
   */
  email: string;
  /**
   * Name associated with the User account, or `null` if none has been provided.
   *
   * @example John Doe
   */
  name: string | null;
  /**
   * Unique username associated with the User account.
   *
   * @example jdoe
   */
  username: string;
  /**
   * SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
   *
   * @example 22cb30c85ff45ac4c72de8981500006b28114aa1
   */
  avatar: string | null;
  /**
   * The user's default team.
   */
  defaultTeamId: string | null;
  /**
   * The user's version. Will always be `northstar`.
   */
  version: 'northstar';
};

/**
 * Authentication token metadata.
 */
export type AuthToken = {
  /**
   * The unique identifier of the token.
   *
   * @example 5d9f2ebd38ddca62e5d51e9c1704c72530bdc8bfdd41e782a6687c48399e8391
   */
  id: string;
  /**
   * The human-readable name of the token.
   */
  name: string;
  /**
   * The type of the token.
   *
   * @example oauth2-token
   */
  type: string;
  /**
   * The origin of how the token was created.
   *
   * @example github
   */
  origin?: string;
  /**
   * The access scopes granted to the token.
   */
  scopes?: (
    | {
        type: 'user';
        origin: 'saml' | 'github' | 'gitlab' | 'bitbucket' | 'email' | 'manual' | 'passkey' | 'otp' | 'sms' | 'invite';
        createdAt: number;
        expiresAt?: number;
      }
    | {
        type: 'team';
        teamId: string;
        origin: 'saml' | 'github' | 'gitlab' | 'bitbucket' | 'email' | 'manual' | 'passkey' | 'otp' | 'sms' | 'invite';
        createdAt: number;
        expiresAt?: number;
      }
  )[];
  /**
   * Timestamp (in milliseconds) of when the token expires.
   *
   * @example 1632816536002
   */
  expiresAt?: number;
  /**
   * Timestamp (in milliseconds) of when the token was most recently used.
   *
   * @example 1632816536002
   */
  activeAt: number;
  /**
   * Timestamp (in milliseconds) of when the token was created.
   *
   * @example 1632816536002
   */
  createdAt: number;
};

/**
 * A deployment file tree entry
 */
export type FileTree = {
  /**
   * The name of the file tree entry
   *
   * @example my-file.json
   */
  name: string;
  /**
   * String indicating the type of file tree entry.
   *
   * @example file
   */
  type: 'directory' | 'file' | 'invalid' | 'lambda' | 'middleware' | 'symlink';
  /**
   * The unique identifier of the file (only valid for the `file` type)
   *
   * @example 2d4aad419917f15b1146e9e03ddc9bb31747e4d0
   */
  uid?: string;
  /**
   * The list of children files of the directory (only valid for the `directory` type)
   */
  children?: FileTree[];
  /**
   * The content-type of the file (only valid for the `file` type)
   *
   * @example application/json
   */
  contentType?: string;
  /**
   * The file "mode" indicating file type and permissions.
   */
  mode: number;
  /**
   * Not currently used. See `file-list-to-tree.ts`.
   */
  symlink?: string;
};
