/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.1
 */
/**
 * Array of events generated by the User.
 */
export type UserEvent = {
  /**
   * The unique identifier of the Event.
   *
   * @example uev_bfmMjiMnXfnPbT97dGdpJbCN
   */
  id: string;
  /**
   * The human-readable text of the Event.
   *
   * @example You logged in via GitHub
   */
  text: string;
  /**
   * A list of "entities" within the event `text`. Useful for enhancing the displayed text with additional styling and links.
   */
  entities: {
    /**
     * The type of entity.
     *
     * @example author
     */
    type:
      | 'target'
      | 'author'
      | 'bitbucket_login'
      | 'bold'
      | 'deployment_host'
      | 'dns_record'
      | 'git_link'
      | 'github_login'
      | 'gitlab_login'
      | 'hook_name'
      | 'integration'
      | 'edge-config'
      | 'link'
      | 'project_name'
      | 'scaling_rules'
      | 'env_var_name'
      | 'system';
    /**
     * The index of where the entity begins within the `text` (inclusive).
     *
     * @example 0
     */
    start: number;
    /**
     * The index of where the entity ends within the `text` (non-inclusive).
     *
     * @example 3
     */
    end: number;
  }[];
  /**
   * Timestamp (in milliseconds) of when the event was generated.
   *
   * @example 1632859321020
   */
  createdAt: number;
  /**
   * Metadata for the User who generated the event.
   */
  user?: {
    avatar: string;
    email: string;
    slug?: string;
    uid: string;
    username: string;
  };
  /**
   * The unique identifier of the User who generated the event.
   *
   * @example zTuNVUXEAvvnNN3IaqinkyMw
   */
  userId: string;
};

/**
 * This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
 */
export type Pagination = {
  /**
   * Amount of items in the current page.
   *
   * @example 20
   */
  count: number;
  /**
   * Timestamp that must be used to request the next page.
   *
   * @example 1540095775951
   */
  next: number | null;
  /**
   * Timestamp that must be used to request the previous page.
   *
   * @example 1540095775951
   */
  prev: number | null;
};

/**
 * Data for the currently authenticated User.
 */
export type AuthUser = {
  /**
   * UNIX timestamp (in milliseconds) when the User account was created.
   *
   * @example 1630748523395
   */
  createdAt: number;
  /**
   * When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why.
   */
  softBlock: {
    blockedAt: number;
    reason:
      | 'FAIR_USE_LIMITS_EXCEEDED'
      | 'ENTERPRISE_TRIAL_ENDED'
      | 'BLOCKED_FOR_PLATFORM_ABUSE'
      | 'UNPAID_INVOICE'
      | 'SUBSCRIPTION_EXPIRED'
      | 'SUBSCRIPTION_CANCELED';
  } | null;
  /**
   * An object containing billing infomation associated with the User account.
   */
  billing: {
    currency?: 'usd' | 'eur';
    addons?: ('custom-deployment-suffix' | 'live-support')[] | null;
    cancelation?: number | null;
    period: {
      start: number;
      end: number;
    } | null;
    contract?: {
      start: number;
      end: number;
    } | null;
    plan: 'hobby' | 'enterprise' | 'pro';
    platform?: 'stripe' | 'stripeTestMode';
    orbCustomerId?: string;
    programType?: 'startup' | 'agency';
    trial?: {
      start: number;
      end: number;
    } | null;
    email?: string | null;
    tax?: {
      type: string;
      id: string;
    } | null;
    language?: string | null;
    address?: {
      line1: string;
      line2?: string;
      postalCode?: string;
      city?: string;
      country?: string;
      state?: string;
    } | null;
    name?: string | null;
    overdue?: boolean | null;
    invoiceItems?: {
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      pro?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      enterprise?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      concurrentBuilds?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      saml?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      teamSeats?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      customCerts?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      previewDeploymentSuffix?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      passwordProtection?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      ssoProtection?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      analytics?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      monitoring?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      /**
       * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
       */
      webAnalytics?: {
        tier?: number;
        price: number;
        quantity: number;
        name?: string;
        hidden: boolean;
        createdAt?: number;
        disabledAt?: number | null;
        frequency?: {
          interval: 'month';
          intervalCount: 1 | 3 | 2 | 6 | 12;
        };
        maxQuantity?: number;
      };
      analyticsUsage?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      artifacts?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      bandwidth?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      builds?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      edgeMiddlewareInvocations?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      edgeFunctionExecutionUnits?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      monitoringMetric?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      serverlessFunctionExecution?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      sourceImages?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      webAnalyticsEvent?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      edgeConfigRead?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      edgeConfigWrite?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
      cronJobInvocation?: {
        tier?: number;
        price: number;
        batch: number;
        threshold: number;
        name?: string;
        hidden: boolean;
        disabledAt?: number | null;
      };
    } | null;
    invoiceSettings?: {
      footer?: string;
    };
    subscriptions?:
      | {
          id: string;
          trial: {
            start: number;
            end: number;
          } | null;
          period: {
            start: number;
            end: number;
          };
          frequency: {
            interval: 'month' | 'day' | 'week' | 'year';
            intervalCount: number;
          };
          discount: {
            id: string;
            coupon: {
              id: string;
              name: string | null;
              amountOff: number | null;
              percentageOff: number | null;
              durationInMonths: number | null;
              duration: 'forever' | 'repeating' | 'once';
            };
          } | null;
          items: {
            id: string;
            priceId: string;
            productId: string;
            amount: number;
            quantity: number;
          }[];
        }[]
      | null;
    controls?: {
      analyticsSampleRateInPercent?: number | null;
      analyticsSpendLimitInDollars?: number | null;
    } | null;
    purchaseOrder?: string | null;
    status?: 'active' | 'canceled' | 'trialing' | 'overdue' | 'expired';
    pricingExperiment?: 'august-2022';
  } | null;
  /**
   * An object containing infomation related to the amount of platform resources may be allocated to the User account.
   */
  resourceConfig: {
    nodeType?: string;
    concurrentBuilds?: number;
    awsAccountType?: string;
    awsAccountIds?: string[];
    cfZoneName?: string;
    /**
     * To overwrite the number of Edge Configs an account can create.
     */
    edgeConfigs?: number;
    /**
     * To overwrite the maximum size of an Edge Config per account. Size is in kilobytes, eg 64 leads to 64kB or 64_000 bytes worth of storage
     */
    edgeConfigSize?: number;
  };
  /**
   * Prefix that will be used in the URL of "Preview" deployments created by the User account.
   */
  stagingPrefix: string;
  /**
   * set of dashboard view preferences (cards or list) per scopeId
   */
  activeDashboardViews?: {
    scopeId: string;
    viewPreference: 'cards' | 'list';
  }[];
  importFlowGitNamespace?: string | number | null;
  importFlowGitNamespaceId?: string | number | null;
  importFlowGitProvider?: 'github' | 'gitlab' | 'bitbucket';
  preferredScopesAndGitNamespaces?: {
    scopeId: string;
    gitNamespaceId: string | number | null;
  }[];
  /**
   * A record of when, under a certain scopeId, a toast was dismissed
   */
  dismissedToasts?: {
    name: string;
    dismissals: {
      scopeId: string;
      createdAt: number;
    }[];
  }[];
  /**
   * Whether the user has a trial available for a paid plan subscription.
   */
  hasTrialAvailable: boolean;
  /**
   * remote caching settings
   */
  remoteCaching?: {
    enabled?: boolean;
  };
  /**
   * The User's unique identifier.
   *
   * @example AEIIDYVk59zbFF2Sxfyxxmua
   */
  id: string;
  /**
   * Email address associated with the User account.
   *
   * @example me@example.com
   */
  email: string;
  /**
   * Name associated with the User account, or `null` if none has been provided.
   *
   * @example John Doe
   */
  name: string | null;
  /**
   * Unique username associated with the User account.
   *
   * @example jdoe
   */
  username: string;
  /**
   * SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
   *
   * @example 22cb30c85ff45ac4c72de8981500006b28114aa1
   */
  avatar: string | null;
};

/**
 * A limited form of data for the currently authenticated User, due to the authentication token missing privileges to read the full User data.
 */
export type AuthUserLimited = {
  /**
   * Property indicating that this User data contains only limited information, due to the authentication token missing privileges to read the full User data. Re-login with email, GitHub, GitLab or Bitbucket in order to upgrade the authentication token with the necessary privileges.
   */
  limited: boolean;
  /**
   * The User's unique identifier.
   *
   * @example AEIIDYVk59zbFF2Sxfyxxmua
   */
  id: string;
  /**
   * Email address associated with the User account.
   *
   * @example me@example.com
   */
  email: string;
  /**
   * Name associated with the User account, or `null` if none has been provided.
   *
   * @example John Doe
   */
  name: string | null;
  /**
   * Unique username associated with the User account.
   *
   * @example jdoe
   */
  username: string;
  /**
   * SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
   *
   * @example 22cb30c85ff45ac4c72de8981500006b28114aa1
   */
  avatar: string | null;
};

/**
 * Authentication token metadata.
 */
export type AuthToken = {
  /**
   * The unique identifier of the token.
   *
   * @example 5d9f2ebd38ddca62e5d51e9c1704c72530bdc8bfdd41e782a6687c48399e8391
   */
  id: string;
  /**
   * The human-readable name of the token.
   */
  name: string;
  /**
   * The type of the token.
   *
   * @example oauth2-token
   */
  type: string;
  /**
   * The origin of how the token was created.
   *
   * @example github
   */
  origin?: string;
  /**
   * The access scopes granted to the token.
   */
  scopes?: (
    | {
        type: 'user';
        origin: 'saml' | 'github' | 'gitlab' | 'bitbucket' | 'email' | 'manual';
        createdAt: number;
        expiresAt?: number;
      }
    | {
        type: 'team';
        teamId: string;
        origin: 'saml' | 'github' | 'gitlab' | 'bitbucket' | 'email' | 'manual';
        createdAt: number;
        expiresAt?: number;
      }
  )[];
  /**
   * Timestamp (in milliseconds) of when the token expires.
   *
   * @example 1632816536002
   */
  expiresAt?: number;
  /**
   * Timestamp (in milliseconds) of when the token was most recently used.
   *
   * @example 1632816536002
   */
  activeAt: number;
  /**
   * Timestamp (in milliseconds) of when the token was created.
   *
   * @example 1632816536002
   */
  createdAt: number;
};

/**
 * Enum containing the actions that can be performed against a resource. Group operations are included.
 */
export type ACLAction = 'create' | 'delete' | 'read' | 'update' | 'list' | 'count';

/**
 * Data representing a Team.
 */
export type Team = Record<string, any>;

/**
 * A limited form of data representing a Team, due to the authentication token missing privileges to read the full Team data.
 */
export type TeamLimited = {
  /**
   * Property indicating that this Team data contains only limited information, due to the authentication token missing privileges to read the full Team data. Re-login with the Team's configured SAML Single Sign-On provider in order to upgrade the authentication token with the necessary privileges.
   */
  limited: boolean;
  /**
   * When "Single Sign-On (SAML)" is configured, this object contains information that allows the client-side to identify whether or not this Team has SAML enforced.
   */
  saml?: {
    /**
     * From T, pick a set of properties whose keys are in the union K
     */
    connection?: {
      createdAt?: number | null;
      creator: string;
      domain: string;
      id: string;
      name: string;
      recordType: 'A' | 'AAAA' | 'ALIAS' | 'CAA' | 'CNAME' | 'MX' | 'SRV' | 'TXT' | 'NS';
      ttl?: number;
      type: 'record' | 'record-sys';
      value: string;
    };
    /**
     * From T, pick a set of properties whose keys are in the union K
     */
    directory?: {
      createdAt?: number | null;
      creator: string;
      domain: string;
      id: string;
      name: string;
      recordType: 'A' | 'AAAA' | 'ALIAS' | 'CAA' | 'CNAME' | 'MX' | 'SRV' | 'TXT' | 'NS';
      ttl?: number;
      type: 'record' | 'record-sys';
      value: string;
    };
    /**
     * When `true`, interactions with the Team **must** be done with an authentication token that has been authenticated with the Team's SAML Single Sign-On provider.
     */
    enforced: boolean;
  };
  /**
   * The Team's unique identifier.
   *
   * @example team_nllPyCtREAqxxdyFKbbMDlxd
   */
  id: string;
  /**
   * The Team's slug, which is unique across the Vercel platform.
   *
   * @example my-team
   */
  slug: string;
  /**
   * Name associated with the Team account, or `null` if none has been provided.
   *
   * @example My Team
   */
  name: string | null;
  /**
   * The ID of the file used as avatar for this Team.
   *
   * @example 6eb07268bcfadd309905ffb1579354084c24655c
   */
  avatar: string | null;
  membership:
    | {
        confirmed: boolean;
        confirmedAt: number;
        accessRequestedAt?: number;
        role: 'MEMBER' | 'OWNER' | 'VIEWER' | 'DEVELOPER' | 'BILLING';
        teamId?: string;
        uid: string;
        createdAt: number;
        created: number;
        joinedFrom?: {
          origin:
            | 'import'
            | 'saml'
            | 'mail'
            | 'link'
            | 'teams'
            | 'github'
            | 'gitlab'
            | 'bitbucket'
            | 'dsync'
            | 'feedback'
            | 'organization-teams';
          commitId?: string;
          repoId?: string;
          repoPath?: string;
          gitUserId?: string | number;
          gitUserLogin?: string;
          ssoUserId?: string;
          ssoConnectedAt?: number;
          idpUserId?: string;
          dsyncUserId?: string;
          dsyncConnectedAt?: number;
        };
      }
    | {
        confirmed: boolean;
        confirmedAt?: number;
        accessRequestedAt: number;
        role: 'MEMBER' | 'OWNER' | 'VIEWER' | 'DEVELOPER' | 'BILLING';
        teamId?: string;
        uid: string;
        createdAt: number;
        created: number;
        joinedFrom?: {
          origin:
            | 'import'
            | 'saml'
            | 'mail'
            | 'link'
            | 'teams'
            | 'github'
            | 'gitlab'
            | 'bitbucket'
            | 'dsync'
            | 'feedback'
            | 'organization-teams';
          commitId?: string;
          repoId?: string;
          repoPath?: string;
          gitUserId?: string | number;
          gitUserLogin?: string;
          ssoUserId?: string;
          ssoConnectedAt?: number;
          idpUserId?: string;
          dsyncUserId?: string;
          dsyncConnectedAt?: number;
        };
      };
  /**
   * Will remain undocumented. Remove in v3 API.
   */
  created: string;
  /**
   * UNIX timestamp (in milliseconds) when the Team was created.
   *
   * @example 1630748523395
   */
  createdAt: number;
};

/**
 * A deployment file tree entry
 */
export type FileTree = {
  /**
   * The name of the file tree entry
   *
   * @example my-file.json
   */
  name: string;
  /**
   * String indicating the type of file tree entry.
   *
   * @example file
   */
  type: 'directory' | 'file' | 'symlink' | 'lambda' | 'middleware' | 'invalid';
  /**
   * The unique identifier of the file (only valid for the `file` type)
   *
   * @example 2d4aad419917f15b1146e9e03ddc9bb31747e4d0
   */
  uid?: string;
  /**
   * The list of children files of the directory (only valid for the `directory` type)
   */
  children?: FileTree[];
  /**
   * The content-type of the file (only valid for the `file` type)
   *
   * @example application/json
   */
  contentType?: string;
  /**
   * The file "mode" indicating file type and permissions.
   */
  mode: number;
  /**
   * Not currently used. See `file-list-to-tree.ts`.
   */
  symlink?: string;
};

export type EdgeConfigItemValue = string | number | boolean | Record<string, any> | EdgeConfigItemValue[] | null;

/**
 * The EdgeConfig.
 */
export type EdgeConfigItem = {
  key: string;
  value: EdgeConfigItemValue;
  edgeConfigId: string;
  createdAt: number;
  updatedAt: number;
};

/**
 * The EdgeConfig.
 */
export type EdgeConfigToken = {
  token: string;
  label: string;
  /**
   * This is not the token itself, but rather an id to identify the token by
   */
  id: string;
  edgeConfigId: string;
  createdAt: number;
};
