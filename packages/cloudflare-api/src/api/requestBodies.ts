/**
 * Generated by @openapi-codegen
 *
 * @version 4.0.0
 */
import type * as Schemas from './schemas';

/**
 * A ruleset object.
 */
export type RulesetsCreateRuleset = Schemas.RulesetsRuleset & {
  kind: Schemas.RulesetsRulesetKind;
  phase: Schemas.RulesetsRulesetPhase;
  rules: Schemas.RulesetsRequestRules;
};

export type RulesetsManagedTransforms = Schemas.RulesetsManagedTransforms;

export type RulesetsRule = Schemas.RulesetsRequestRule & {
  position?:
    | (Schemas.RulesetsRulePosition & {
        /**
         * The ID of another rule to place the rule before. An empty value causes the rule to be placed at the top.
         *
         * @example da5e8e506c8e7877fe06cdf4c41add54
         * @pattern ^(?:[0-9a-f]{32})?$
         */
        before?: string;
      })
    | (Schemas.RulesetsRulePosition & {
        /**
         * The ID of another rule to place the rule after. An empty value causes the rule to be placed at the bottom.
         *
         * @example 5bccdbb2a5142cd25cad8591255bd209
         * @pattern ^(?:[0-9a-f]{32})?$
         */
        after?: string;
      })
    | (Schemas.RulesetsRulePosition & {
        /**
         * An index at which to place the rule, where index 1 is the first rule.
         *
         * @example 1
         * @minimum 1
         */
        index?: number;
      });
};

/**
 * A ruleset object.
 */
export type RulesetsUpdateEntrypointRuleset = Schemas.RulesetsRuleset & {
  rules: Schemas.RulesetsRequestRules;
};

/**
 * A ruleset object.
 */
export type RulesetsUpdateRuleset = Schemas.RulesetsRuleset & {
  kind?: Schemas.RulesetsRulesetKind;
  phase?: Schemas.RulesetsRulesetPhase;
  rules: Schemas.RulesetsRequestRules;
};

export type RulesetsUrlNormalization = Schemas.RulesetsUrlNormalization;

export type WorkersScriptUpload = Schemas.WorkersMultipartScript;

export type WorkersVersionPost = {
  /**
   * JSON encoded metadata about the uploaded parts and Worker configuration.
   */
  metadata: {
    annotations?: {
      /**
       * Human-readable message about the version. Truncated to 100 bytes.
       *
       * @example Fixed worker code.
       * @maxLength 100
       */
      ['workers/message']?: string;
      /**
       * User-provided identifier for the version.
       *
       * @example any-identifier-from-external-system
       * @maxLength 25
       */
      ['workers/tag']?: string;
    };
    bindings?: Schemas.WorkersBindings;
    compatibility_date?: Schemas.WorkersCompatibilityDate;
    compatibility_flags?: Schemas.WorkersCompatibilityFlags;
    /**
     * List of binding types to keep from previous_upload.
     */
    keep_bindings?: string[];
    /**
     * Name of the part in the multipart request that contains the main module (e.g. the file exporting a `fetch` handler). Indicates a `module syntax` Worker, which is required for Version Upload.
     *
     * @example worker.js
     */
    main_module: string;
    usage_model?: Schemas.WorkersUsageModel;
  };
} & {
  [key: string]: Blob[];
};
